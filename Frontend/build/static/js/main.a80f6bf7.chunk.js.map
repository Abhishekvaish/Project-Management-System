{"version":3,"sources":["components/Admin-component/sample.PNG","Pages/URL.js","components/Navbar/MenuAppBar.js","components/Navbar/LoggedNavbar.js","components/Admin-component/AdminInstructions.js","components/Footer/Footer.js","components/Profile.js","components/ToUpper.js","components/Admin-component/ProjectList.js","components/Admin-component/SideMenu.js","components/Admin-component/AdminContent.js","Pages/Admin.js","Pages/Login/Login.js","Pages/Logout.js","components/Student-component/StudentContent.js","components/Student-component/studentHomePage.js","components/Student-component/StudentCommentPage.js","components/Student-component/StudentPresentation.js","components/Student-component/studentWholePage.js","Pages/Student.js","components/Yami-component/YamiContent.js","Pages/Yami.js","context/projectcontext.js","components/verification/projectdetails.js","components/verification/projectlist.js","components/Faculty-component/FacultyContent.js","Pages/Faculty.js","components/ChangePassword/ChangePassword.js","components/NotFound.js","components/Navbar/Navbar.js","components/Admin-component/AdminCommentPage.js","Pages/PrefPage.js","components/Hod-component/HodProjectList.js","components/Hod-component/HodSideMenu.js","components/Hod-component/HodContent.js","Pages/Hod.js","components/Hod-component/HodCommentPage.js","components/Hod-component/HodPrefPage.js","components/Admin-component/AdminGroupsPage.js","components/Admin-component/AdminGuidePage.js","components/Admin-component/AdminArchives.js","components/Guide Component/GroupList.js","Pages/Guide.js","components/Guide Component/GuidePrefPage.js","Pages/forgetPassword.js","Pages/resetPassword.js","components/Hod-component/HodGroupsPage.js","App.js","serviceWorker.js","index.js","Pages/Login/background2.jpg"],"names":["module","exports","SERVER_URL","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","profIcon","breakpoints","up","display","navMenu","down","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","style","backgroundColor","Toolbar","to","textDecoration","color","Button","variant","Typography","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","fontSize","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","startIcon","marginLeft","LoggedNavbar","props","state","Fragment","Component","width","padding","letterSpacing","marginBottom","image","pos","Profile","Card","boxShadow","borderRadius","CardContent","fontWeight","fontFamily","src","Image","paddingTop","rootItems","foot","margin","footEnd","Footer","Grid","container","item","xs","sm","target","href","Date","getFullYear","createMuiTheme","typography","h3","minWidth","marginTop","icon","userInfo","academicYear","ThemeProvider","md","name","type","department","email","toFirstCharUppercase","charAt","toUpperCase","slice","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","component","a11yProps","heading","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","accor","accordet","dueDateContainer","downloadButton","float","ControlledAccordions","Groups","dueDate","Guides","histor","useHistory","expanded","setExpanded","useTheme","setValue","assignLoading","setAssignLoading","guide","setGuide","guideE","setGuideE","changeDuedate","setDueDate","DueDateOpen","setDOpen","downLoading","setDownLoading","showButton","handleGuideChange","e","map","Guide","appendLeadingZeroes","n","handleChangeDueDateDialogClose","handleChange","panel","isExpanded","Dialog","DialogTitle","DialogContent","DialogContentText","utils","DateFnsUtils","autoOk","required","inputVariant","format","onChange","date","current_datetime","formatted_date","getMonth","getDate","InputAdornmentProps","DialogActions","console","log","axios","method","url","credentials","withCredentials","data","qs","stringify","headers","localStorage","getItem","then","res","window","location","reload","catch","err","alert","split","Tabs","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","Group","DueDate","members","Gname","pref1","pref2","pref3","AppliedOn","pref1AdminApproval","pref2AdminApproval","pref3AdminApproval","pref1HodApproval","pref2HodApproval","pref3HodApproval","proposals","length","applied","approval","admin","hod","Accordion","key","AccordionSummary","expandIcon","member","AccordionDetails","rollno","push","pathname","TextField","size","select","helperText","CircularProgress","groupId","assignGuide","handleChangeGuide","disabled","maxWidth","maxHeight","responseType","Authorization","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","pref1Approval","pref2Approval","pref3Approval","LinearProgress","ButtonStyle","cursor","SideMenu","handleMenu","top","left","bottom","right","setState","itemsList","toggleDrawer","anchor","Drawer","clsx","list","fullList","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","tempDate","Alert","elevation","Ad","a","academicYearList","AdminContent","handleDateChange","prefDueDate","handleAcademicYear","Academicyear","hodHandler","hodNameHandler","hodName","reason","openSuccess","openFailure","adData","submitHandler","preventDefault","formData","FormData","append","student_file","loading","fileValidation","fileInput","getElementById","filePath","exec","files","filled","this","checkData","checkGuides","onSubmit","gridField","InputTitle","Inputfield","autoFocus","FormControl","Select","Input","alignItems","submit","Snackbar","autoHideDuration","severity","footer","withStyles","flexDirection","minHeight","main","paper","pape","form","fields","border","paddingLeft","Admin","getStat","loggedIn","user","removeItem","Data","data_access","today","Login","username","password","msg","invalidCredentials","getResponse","bind","submitForm","response","access_token","setItem","token","exact","leftpaper","Container","CssBaseline","Avatar","avatar","fullWidth","autoComplete","background","backgroundImage","backgroundSize","height","Logout","responsiveFontSizes","stuData","Stu","Proposals","StudentContent","handleClickOpen","handleAgreeClickClose","handleCancelClickClose","tabValue","handleTopChange","pn","prefs","preferences","i","Top","handleDosChange","Dos","handleDsopChange","cs","Dsop","handleAgencyChange","Agency","handleMtapChange","Mtap","handleRedChange","Red","handleShrChange","Shr","handleFileChange","selectedFile","handleClick","currentStep","handleSubmit","specialization","details","agency","result","requirements","JSON","_next","_prev","handleNext","prefno","formFilled","Step1","Step2","previousButton","Step3","handleClickClose","aria-describedby","largeWinTabs","centered","tabPanel","typographyFilled","attachPrints","smallWinTabs","scrollButtons","multiline","inputProps","rows","buttonprop","borderTop","tableContainer","table","propF","fill","StudentHomePage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","_id","proposal","approved","propTitle","propApproved","typo","StudentCommentPage","comments","comment","dt","time","author","getHours","getMinutes","days","Presentations","StudentPresentation","presentation","sort","b","scheduled_date","getTime","Presentation","getDay","marks","now","vert_tab_grid","borderRight","divider","hor_tab_grid","borderBottom","large_win_tabs","small_win_tabs","StudentWholePage","obtained","setObtained","setAcademicYear","reqSent","setReqSent","acadYear","orientation","tab","YamiContent","mailHandler","mail","nameHandler","deptHandler","dept","noValidate","InputLabel","deptLabel","Yami","ProjectContext","createContext","ProjectContextProvider","projects","isapproved","Approve","project","addComment","Provider","ProjectDetails","aboutProps","ProjectList","useContext","FacultyContent","ChangePassword","pushPassword","newPassword","confirmPassword","newpasswordHandler","confirmpasswordHandler","helptext","NotFound","backButton","buttonContainer","Navbar","history","back","typo1","typo2","textAllign","THEME","join","AdminCommentPage","Comments","reverse","d","fontStyle","toString","substr","ControlledExpansionPanels","commentHandler","handleApprove","pid","Gid","group","Proposal1","Proposal2","Proposal3","grid","appliedDate","content","comTitle","comField","comButton","sendComment","HodProjectList","Designation","HodContent","getGroup","Hod","HodCommentPage","HodPrefPage","Groupid","deleteMemberEmail","groupData","AdminGroupsPage","handleDeleteMemberDialogOpen","deleteMemberOpen","handleDeleteMemberDialogClose","handleDeleteMember","gid","handleDeleteProposalsDialogClose","deleteProposalsOpen","handleDeleteProposals","handleDeleteAllUser","deleteAllUserDialog","handleArchieve","archive","archiveSuccess","handleAddMemberDialogOpen","gname","addMemberOpen","handleAddMemberDialogClose","handleMemberNameChange","memberName","handleMemberEmailChange","memberEmail","handleMemberRollnoChange","memberRollno","handleAddMember","groupName","addHodOpen","handleChildClick","stopPropagation","groupDetails","mainAccorContainer","endIcon","proposal1Stat","proposal2Stat","proposal3Stat","mainAccor","accorStyle","groupCard","dmemberEmail","deleteIconStyle","handleDeleteProposalsDialogOpen","presCard","pres","memberHolder","dguideId","dguideEmail","dguideName","checkHod","dHodId","guideData","AdminGuidePage","handleDeleteHodDialogOpen","deleteHodOpen","handleDeleteHodDialogClose","handleDeleteHod","handleAddHodDialogOpen","handleAddHodDialogClose","handleHodNameChange","handleHodEmailChange","hodEmail","handleAddHod","Open","handleCloseCancel","handleCloseSubmit","Loading","guideName","guideEmail","handleDeleteDialogOpen","deleteOpen","handleDeleteDialogClose","handleDeleteGuide","handleGNameChange","handleGEmailChange","getGuide","guideDetails","mHodContainer","guideListHolder","guideList","fontWeightRegular","dArchiveId","archData","AdminArchives","handleDeleteArchiveDialogOpen","deleteDialogOpen","handleDeleteArchiveDialogClose","handleDeleteArchive","getArchive","archiveData","archId","groups","GuideGroupList","setAdData","setFilled","setLoading","sche_pres","dateTime","toISOString","scheduleLoading","datetime","handleDateTimeChange","handleMarkSubmit","groupID","presentationID","totalMarks","parseInt","handleMarks","handleTotalMarks","handleDeletePresentation","PID","GID","match","params","defaultValue","textField","InputLabelProps","shrink","forgetPassword","openInfo","resetPassword","openSuccees","done","HodgroupsPage","setUser","setGroupDetails","App","path","Faculty","Student","PrefPage","GuidePrefPage","HodGroupsPage","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","register","error","message"],"mappings":"mJAAAA,EAAOC,QAAU,IAA0B,oC,uYCI5BC,EAHG,G,oECiBZC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,EACVK,UAAW,QAEbC,SAAS,eACNR,EAAMS,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,SAGbC,QAAQ,eACLZ,EAAMS,YAAYI,KAAK,MAAQ,CAC9BF,QAAS,aAKA,SAASG,IACtB,IAAMC,EAAUjB,IADmB,EAGHkB,IAAMC,SAAS,MAHZ,mBAG5BC,EAH4B,KAGlBC,EAHkB,KAI7BC,EAAOC,QAAQH,GAMfI,EAAc,WAClBH,EAAY,OAGd,OACE,yBAAKI,UAAWR,EAAQd,MACtB,kBAACuB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,SAClD,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,GAAG,IACHH,MAAO,CAAEI,eAAgB,OAAQC,MAAO,OAAQ3B,YAAY,QAE5D,kBAAC4B,EAAA,EAAD,CAAQD,MAAM,UAAUE,QAAQ,aAC9B,kBAAC,IAAD,QAGJ,kBAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKV,UAAWR,EAAQT,OAA5C,6BAIE,yBAAKiB,UAAWR,EAAQP,UACtB,kBAAC2B,EAAA,EAAD,CACEC,aAAW,0BACXC,gBAAc,cACdC,gBAAc,OACdC,QA7BK,SAAAC,GACjBrB,EAAYqB,EAAMC,gBA6BNV,MAAM,WAEN,kBAAC,IAAD,CAAeL,MAAO,CAAEgB,SAAU,OAEpC,kBAACC,EAAA,EAAD,CACEC,GAAG,cACH1B,SAAUA,EACV2B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEd3B,KAAMA,EACN8B,QAAS5B,GAET,kBAAC6B,EAAA,EAAD,CAAUZ,QAASjB,GACjB,kBAAC,IAAD,CACEO,GAAG,eACHH,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAF1C,oBAOF,kBAACoB,EAAA,EAAD,CAAUZ,QAASjB,GACjB,kBAAC,IAAD,CACEO,GAAG,UACHH,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAF1C,aAUR,kBAAC,IAAD,CACEF,GAAG,eACHN,UAAWR,EAAQH,QACnBc,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAExC,kBAACC,EAAA,EAAD,CACED,MAAM,UACNE,QAAQ,YACRmB,UAAW,kBAAC,IAAD,OAHb,oBAQF,kBAAC,IAAD,CACEvB,GAAG,UACHN,UAAWR,EAAQH,QACnBc,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAExC,kBAACC,EAAA,EAAD,CACED,MAAM,UACNE,QAAQ,YACRP,MAAO,CAAE2B,WAAY,QACrBD,UAAW,kBAAC,IAAD,OAJb,c,IClHGE,E,kDAfb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,GAHI,E,qDAOjB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC3C,EAAD,W,GAVmB4C,a,sDCIrB5D,EAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAK,aACHM,UAAW,OACXoD,MAAO,MACPN,WAAY,OACZjD,YAAa,OACbwD,QAAS,OACT,gBAAmB,OACnB,oBAAqB,QACrB,oBAAqB,QAEpB5D,EAAMS,YAAYI,KAAK,MAAQ,IAElCP,MAAO,CACLoC,SAAU,OACVmB,cAAe,MACfC,aAAa,OAEfC,OAAK,mBACF/D,EAAMS,YAAYC,GAAG,MAAO,CAC3B2C,WAAW,QAFV,cAIFrD,EAAMS,YAAYI,KAAK,MAAO,CAC7B8C,MAAM,QALL,GAQLK,IAAK,CACHF,aAAc,QAIH,SAASG,EAAQV,GAC9B,IAAMxC,EAAUjB,IAChB,OACE,kBAACoE,EAAA,EAAD,CACE3C,UAAWR,EAAQd,KACnBgC,QAAQ,WACRP,MAAO,CACLyC,UAAW,4DACXxC,gBAAiB,OACjByC,aAAc,QAGhB,kBAACC,EAAA,EAAD,KACE,kBAACnC,EAAA,EAAD,CAAYD,QAAQ,KAAKP,MAAO,CAAE4C,WAAY,MAAMC,WAAW,aAAaT,aAAa,SAAzF,kBAKA,kBAAC5B,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAA/B,2EAGA,kBAAC4B,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAA/B,qCACoC,mCADpC,QACoD,oCADpD,WAGA,kBAAC4B,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAA/B,0CACyC,4DADzC,8CAGa,6BACb,yBAAKkE,IAAKC,IAAOlD,UAAYR,EAAQgD,QAAQ,6BAC7C,kBAAC7B,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAA/B,iI,iDC3DFR,G,OAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ0B,gBAAiB,OACjBI,MAAO,OACP2C,WAAY,QAEdC,UAAW,CACTf,QAAS,OAEXgB,KAAM,CACJC,OAAQ,QAEVC,QAAS,CACPlB,QAAS,OACTrD,UAAW,SACXoB,gBAAiB,OACjBkD,OAAQ,UAoEGE,EAhEA,WACb,IAAMhE,EAAUjB,IAChB,OACE,kBAAC,IAAM2D,SAAP,KACE,6BACA,6BACA,6BACA,6BACA,6BACA,gCACE,kBAACuB,EAAA,EAAD,CAAMC,WAAS,EAAC1D,UAAWR,EAAQd,MACjC,kBAAC+E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAACzC,EAAA,EAAD,KAAY,uBAAGR,MAAO,CAACK,MAAM,QAASsD,OAAO,QAAQC,KAAK,eAA9C,YAEd,kBAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAACzC,EAAA,EAAD,8BAEF,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAACzC,EAAA,EAAD,wBAIN,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAAC,IAAD,CAAcjC,SAAS,WAEzB,kBAACsC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAACzC,EAAA,EAAD,yEAKF,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAACzC,EAAA,EAAD,wBAIN,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAAC,IAAD,CAAiBjC,SAAS,WAE5B,kBAACsC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAACzC,EAAA,EAAD,wBAEF,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4D,WACpC,kBAACzC,EAAA,EAAD,0BAIN,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ+D,SACpC,kBAAC5C,EAAA,EAAD,aACS,IAAIqD,MAAOC,cADpB,2C,uFC1ENxF,GAAQyF,eAEdzF,GAAM0F,WAAWC,GAAjB,aACEjD,SAAU,SACV,2BAA4B,CAC1BA,SAAU,SAEX1C,GAAMS,YAAYC,GAAG,MAAQ,CAC5BgC,SAAU,WAId,IAAM5C,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAK,aACH2F,SAAU,IACVjC,MAAO,MACPpD,UAAW,OACXsF,UAAW,OACX/B,aAAc,OACdT,WAAY,OACZjD,YAAa,QACZJ,EAAMS,YAAYI,KAAK,MAAQ,IAElCP,MAAO,CACLoC,SAAU,OACVmB,cAAe,MACfU,WAAW,aACXsB,UAAU,OAEZ7B,IAAK,CACHF,aAAc,IAEhBgC,KAAO,CACLpD,SAAU,OACVX,MAAM,kBAIK,SAASkC,GAAQV,GAC9B,IAAMxC,EAAUjB,KACViG,EAAWxC,EACXyC,EAAazC,EAAMyC,aACzB,OACE,kBAAC9B,EAAA,EAAD,CACE3C,UAAWR,EAAQd,KACnBgC,QAAQ,WACRP,MAAO,CACLyC,UAAW,4DACXxC,gBAAiB,OACjByC,aAAc,QAGhB,kBAACC,EAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,CAAejG,MAAOA,IACpB,kBAACgF,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CAAuB7D,UAAWR,EAAQ+E,QAE5C,kBAACd,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAK,IACpB,6BACA,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGc,GAAI,GAC5B,kBAAChE,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAC7B,qCADF,IACiByF,EAASA,SAASI,OAGrC,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGc,GAAI,GAC5B,kBAAChE,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAC7B,4CADF,IACwByF,EAASA,SAASK,OAG5C,kBAACpB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGc,GAAI,GAC5B,kBAAChE,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAC7B,2CADF,IACuByF,EAASA,SAASM,aAG3C,kBAACrB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGc,GAAI,GAC5B,kBAAChE,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAC7B,qCADF,IACiByF,EAASA,SAASO,QAGrC,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGc,GAAI,GACZ,OAAfF,EACC,kBAAC9D,EAAA,EAAD,CAAYX,UAAWR,EAAQT,OAC7B,6CADF,IACyB0F,GAExB,Y,sLC9FZO,GAAuB,SAAAJ,GAAI,OACtCA,EAAKK,OAAO,GAAGC,cAAgBN,EAAKO,MAAM,I,sEC2B5C,SAASC,GAASpD,GAAQ,IAChBqD,EAAqCrD,EAArCqD,SAAUC,EAA2BtD,EAA3BsD,MAAOC,EAAoBvD,EAApBuD,MAAUC,EADZ,aACsBxD,EADtB,8BAGvB,OACE,uCACEyD,KAAK,WACLC,OAAQJ,IAAUC,EAClBlE,GAAE,8BAAyBkE,GAC3BI,kBAAA,yBAAmCJ,IAC/BC,GAEHF,IAAUC,GACT,kBAACK,GAAA,EAAD,CAAKC,EAAG,GACN,kBAAClF,EAAA,EAAD,CAAYmF,UAAU,QAAQT,KAaxC,SAASU,GAAUR,GACjB,MAAO,CACLlE,GAAG,kBAAD,OAAoBkE,GACtB,gBAAgB,uBAAhB,OAAwCA,IAI5C,IAAMhH,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ0D,MAAO,QAET4D,QAAS,CACP7E,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnClD,WAAY,MACZmD,UAAW,SACXC,WAAY,GAEdC,iBAAkB,CAChBjF,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCzF,MAAO/B,EAAM4H,QAAQC,KAAKC,WAE5BC,MAAO,CACLpE,MAAO,OACPkB,OAAQ,QAEVmD,SAAU,CACRrE,MAAO,OACPkB,OAAQ,QAEVoD,iBAAiB,CACf7D,aAAa,OAEf8D,eAAgB,CACdC,MAAM,QACNtC,UAAU,KACV/B,aAAa,YASF,SAASsE,GAAqB7E,GAC3C,IAAI8E,EAAS9E,EAAM8E,OACfC,EAAUD,EAAO,GAAGC,QACpBC,EAAShF,EAAMgF,OACbC,EAASC,cACT1H,EAAUjB,KALkC,EAMlBkB,IAAMC,UAAS,GANG,mBAM3CyH,EAN2C,KAMjCC,EANiC,KAO5C3I,EAAQ4I,eAPoC,EAQxB5H,IAAMC,SAAS,GARS,mBAQ3C4F,EAR2C,KAQpCgC,EARoC,OASX7H,IAAMC,UAAS,GATJ,mBAS3C6H,EAT2C,KAS7BC,EAT6B,OAUzB/H,IAAMC,SAAS,MAVU,mBAU3C+H,EAV2C,KAUrCC,EAVqC,OAWvBjI,IAAMC,SAAS,MAXQ,mBAW3CiI,EAX2C,KAWpCC,EAXoC,OAYfnI,IAAMC,SAAS,IAAIsE,MAZJ,mBAY3C6D,EAZ2C,KAY7BC,EAZ6B,OAanBrI,IAAMC,UAAS,GAbI,mBAa3CqI,EAb2C,KAa/BC,EAb+B,OAcbvI,IAAMC,UAAS,GAdF,mBAc3CuI,EAd2C,KAc/BC,EAd+B,KAe9CC,GAAa,EAKXC,EAAoB,SAACC,GACzBX,EAASW,EAAEvE,OAAOwB,OAClB0B,EAAOsB,KAAI,SAAAC,GACNA,EAAM3D,OAAOyD,EAAEvE,OAAOwB,OACvBsC,EAAUW,EAAMxD,WASlByD,GAAoB,SAACC,GACzB,OAAIA,GAAK,EACA,IAAMA,EAERA,GA8BHC,GAA+B,WACnCV,GAAS,IAsGHW,GAAe,SAAAC,GAAK,OAAI,SAAC3H,EAAO4H,GACpCzB,IAAYyB,GAAaD,KAK3B,OAAY,OAAT5B,GACU,OAARS,IACDC,EAASV,EAAO,GAAGpC,MACnBgD,EAAUZ,EAAO,GAAGjC,QAGpB,6BAEA,kBAAC+D,GAAA,EAAD,CAAQjJ,KAAMkI,EAAapG,QAAS+G,GAAgC/C,kBAAgB,qBAClF,kBAACoD,GAAA,EAAD,CAAa1H,GAAG,oBAAoBlB,MAAO,CAACmD,OAAO,eAAnD,kBACA,kBAAC0F,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,6BAGE,kBAAC,KAAD,CAAyBC,MAAOC,MAC9B,kBAAC,KAAD,CACEC,QAAM,EACNC,UAAQ,EACR3I,QAAQ,SACR4I,aAAa,WACbC,OAAO,aACPjE,MAAOuC,EACP2B,SAvGO,SAACC,GACtB,IAAIC,EAAmBD,EACjBE,EACFD,EAAiBzF,cACjB,IACAuE,GAAoBkB,EAAiBE,WAAa,GAClD,IACApB,GAAoBkB,EAAiBG,WACzC/B,EAAW6B,IAgGGG,oBAAqB,CAAE5J,SAAU,aAIzC,kBAAC6J,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CAAQO,QAAS0H,GAAgClI,MAAM,WAAvD,UAGA,kBAACC,EAAA,EAAD,CAAQO,QAzIQ,WACxBgJ,QAAQC,IAAIpC,GACZqC,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,iBAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjB1D,QAAQc,IAEV6C,QAAS,CACP,eAAgB,kDAChB,cAAkB,UAAWC,aAAaC,QAAQ,mBAGrDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,eACZc,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLC,MAAM,wBACNpB,QAAQC,IAAIkB,OAmHgC3K,MAAM,WAA5C,YAKJ,8BAIE,yBAAKR,UAAWR,EAAQd,MACtB,kBAACuB,EAAA,EAAD,CAAQC,SAAS,SAASM,MAAM,WAChC,6BACA,kBAACmC,EAAA,EAAD,CAAM3C,UAAWR,EAAQkH,kBACvB,kBAACjD,EAAA,EAAD,CAAMC,WAAS,EAAEvD,MAAO,CAACkC,QAAQ,QAC/B,kBAACoB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGzD,MAAO,CAACmD,OAAO,SAAS,kBAAC3C,EAAA,EAAD,CAAYD,QAAQ,MAApB,WAAqC,mEAA2CqG,EAAQsE,MAAM,KAAK,MAC7I,kBAAC5H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGzD,MAAO,CAACnB,UAAU,UAAU,kBAACyB,EAAA,EAAD,CAAQO,QA9JhC,WAClCgH,GAAS,IA6JiGtH,QAAQ,YAAYF,MAAM,WAA1E,sBAIhD,kBAAC8K,GAAA,EAAD,CACEhG,MAAOA,EACPkE,SAtEU,SAACvI,EAAOsK,GAC5BjE,EAASiE,IAsECC,eAAe,UACfC,UAAU,UACV/K,QAAQ,YACRG,aAAW,2BAEX,kBAAC6K,GAAA,EAAD,eAAKC,MAAM,iBAAoB5F,GAAU,KACzC,kBAAC2F,GAAA,EAAD,eAAKC,MAAM,wBAA2B5F,GAAU,KAChD,kBAAC2F,GAAA,EAAD,eAAKC,MAAM,WAAc5F,GAAU,KACnC,kBAAC2F,GAAA,EAAD,eAAKC,MAAM,eAAkB5F,GAAU,OAG3C,kBAAC,KAAD,CACE6F,KAA0B,QAApBnN,EAAMoN,UAAsB,YAAc,IAChDtG,MAAOD,EACPwG,cA/EgB,SAAAvG,GACxB+B,EAAS/B,KAgFD,kBAACH,GAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAGwG,IAAKtN,EAAMoN,WAEzC/E,EAAOwB,KAAI,SAAA0D,GACX,IAMIC,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GACX+K,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAY,KACZC,GAAqB,EACrBC,GAAqB,EACrBC,GAAqB,EACrBC,GAAmB,EACnBC,GAAmB,EACnBC,GAAmB,EAiBvB,OAf+B,IAA3Bb,EAAMc,UAAUC,SAClBX,EAAQJ,EAAMc,UAAU,GACxBT,EAAQL,EAAMc,UAAU,GACxBR,EAAQN,EAAMc,UAAU,GAExBP,EAAYH,EAAMY,QAAQ3B,MAAM,KAAK,GAErCmB,EAAqBJ,EAAMa,SAASC,MACpCT,EAAqBJ,EAAMY,SAASC,MACpCR,EAAqBJ,EAAMW,SAASC,MACpCP,EAAmBP,EAAMa,SAASE,IAClCP,EAAmBP,EAAMY,SAASE,IAClCN,EAAmBP,EAAMW,SAASE,KAIjCX,GAAsBG,GACtBF,GAAsBG,GACtBF,GACCG,GAC2B,IAA3Bb,EAAMc,UAAUC,QAElB5E,GAAa,EAEX,kBAACiF,GAAA,EAAD,CACEjG,SAAUA,IAAagF,EACvB3C,SAAUb,GAAawD,GACvBnM,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBgH,EAAMpH,OAE7BsH,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CACE0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJV,wBASN,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACnC,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAO5I,YAKtD,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAOzI,aAKtD,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAOE,cAKtD,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqI,GAAWM,EACV,kBAAC5L,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,SAAWE,QAAQ,MAA/C,+BAIA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,OAASE,QAAQ,MAA7C,6BAKJ,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,GAAI,IACK,IAA3BoI,EAAMc,UAAUC,OACf,kBAAC,IAAM7K,SAAP,KACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACnD,EAAA,EAAD,CACEO,QAlIA,WAClBiG,EAAO0G,KAAK,CACVC,SAAS,gBAAD,OAAkBvM,GAC1BY,MAAO,CAAE+J,MAAOA,MAgIAtL,QAAQ,WACRF,MAAM,WAHR,qBAQF,kBAACiD,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GACF,OAAnBoI,EAAMvE,MAAM7C,KACZ,kBAAC,IAAM1C,SAAP,KACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACiK,EAAA,EAAD,CACEC,KAAK,SACLzM,GAAG,cACH0M,QAAM,EACNzI,MAAOmC,EACP+B,SAAUpB,EACV4F,WAAW,uBAEVhH,EAAOsB,KAAI,SAACC,GACX,OACE,kBAAC3G,EAAA,EAAD,CAAUyL,IAAK9E,EAAMxD,MAAOO,MAAOiD,EAAM3D,MAAO2D,EAAM3D,WAK9D,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,IAChB,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACV2D,EAGC,kBAAC0G,GAAA,EAAD,MAFA,kBAACxN,EAAA,EAAD,CAAQN,MAAO,CAACtB,YAAY,QAAS6B,QAAQ,YAAYF,MAAM,YAAYQ,QAAS,SAACqH,GAAD,OA3S1G,SAACA,EAAEhH,GACrB2I,QAAQC,IAAIxC,EAAME,GACP,OAARF,EACD2D,MAAM,gCAEN5D,GAAiB,GACjB0C,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,YAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjB7F,KAAK6C,EACL1C,MAAM4C,EACNuG,QAAQ7M,IAEVqJ,QAAS,CACP,eAAgB,kDAChB,cAAkB,UAAWC,aAAaC,QAAQ,mBAGrDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,aACZzC,GAAiB,GACjBuD,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLC,MAAM,sBACN5D,GAAiB,GACjBwC,QAAQC,IAAIkB,OA6QiHgD,CAAY9F,EAAEhH,KAAvG,kBAOV,kBAAC,IAAMa,SAAP,KACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,CAAYD,QAAQ,KAAKF,MAAM,aAA/B,oBAIF,kBAACiD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,CAAYD,QAAQ,KAAKF,MAAM,aAAawL,EAAMvE,MAAM7C,OAE1D,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACnD,EAAA,EAAD,CAAQC,QAAQ,YAAYF,MAAM,UAAUQ,QAAS,YAzRhE,SAACK,GAC1ByF,EAAOwB,KAAI,SAAA0D,GACNA,EAAM3K,KAAKA,IACZ2K,EAAMvE,MAAM7C,KAAK,KACjBoH,EAAMvE,MAAM1C,MAAM,SAGtB2C,EAAS,MAkRqF0G,CAAkB/M,KAA5E,oBAOR,kBAACZ,EAAA,EAAD,CAAQ4N,UAAQ,EAAC3N,QAAQ,WAAWF,MAAM,aACxC,kBAACG,EAAA,EAAD,qCAST,QAGT,kBAAC,IAAMuB,SAAP,KACI+F,EACA,kBAACxH,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNR,UAAaR,EAAQmH,eACrBxG,MAAO,CAACmO,SAAS,WAAWC,UAAU,SAEtC,kBAACN,GAAA,EAAD,CAAkBH,KAAK,OAAOtN,MAAM,QAAQL,MAAO,CAACkC,QAAQ,aAG9D,kBAAC,IAAMH,SAAP,KACIiG,EACA,kBAAC,IAAMjG,SAAP,KACE,kBAACzB,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNR,UAAaR,EAAQmH,eACrB9E,UAAa,kBAAC,KAAD,MACbb,QA1aE,WAC1BkH,GAAe,GACfgC,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAW,SAChBkQ,aAAc,OACd9D,QAAU,CACR+D,cAAgB,UAAU9D,aAAaC,QAAQ,mBAGlDC,MAAK,SAAAC,GACF,IAAMV,EAAMW,OAAO2D,IAAIC,gBAAgB,IAAIC,KAAK,CAAC9D,EAAIP,QAC/CsE,EAAOC,SAASC,cAAc,KACpCF,EAAK9K,KAAOqG,EACZyE,EAAKG,aAAa,WAAY,qBAC9BF,SAASG,KAAKC,YAAYL,GAC1BA,EAAKM,QACLjH,GAAe,MAElBgD,OAAM,SAAAC,GACHjD,GAAe,GACf8B,QAAQC,IAAIkB,QAgZM,iBAUD,QAKX,kBAAC/F,GAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAGwG,IAAKtN,EAAMoN,WAC1C/E,EAAOwB,KAAI,SAAA0D,GACV,IAMIC,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GACX+K,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAY,KAEZC,GAAqB,EACrBC,GAAqB,EACrBC,GAAqB,EACrBC,GAAmB,EACnBC,GAAmB,EACnBC,GAAmB,EAiBvB,OAf+B,IAA3Bb,EAAMc,UAAUC,SAClBX,EAAQJ,EAAMc,UAAU,GACxBT,EAAQL,EAAMc,UAAU,GACxBR,EAAQN,EAAMc,UAAU,GAExBP,EAAYH,EAAMY,QAAQ3B,MAAM,KAAK,GAErCmB,EAAqBJ,EAAMa,SAASC,MACpCT,EAAqBJ,EAAMY,SAASC,MACpCR,EAAqBJ,EAAMW,SAASC,MACpCP,EAAmBP,EAAMa,SAASE,IAClCP,EAAmBP,EAAMY,SAASE,IAClCN,EAAmBP,EAAMW,SAASE,KAIjCX,IAAuBG,GACvBF,IAAuBG,GACvBF,IACEG,GAC0B,IAA3Bb,EAAMc,UAAUC,OAGhB,kBAACK,GAAA,EAAD,CACEjG,SAAUA,IAAagF,EACvB3C,SAAUb,GAAawD,GACvBnM,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBgH,EAAMpH,OAE7BsH,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CACE0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJV,wBASN,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACnC,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAO5I,YAMtD,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAOzI,aAMtD,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAOE,cAKtD,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqI,GAAWM,EACV,kBAAC5L,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,SAAWE,QAAQ,MAA/C,+BAIA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,OAASE,QAAQ,MAA7C,6BAKJ,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACe,IAA3BoI,EAAMc,UAAUC,OACf,6BACE,kBAACtM,EAAA,EAAD,CACEO,QAnIE,WAClBiG,EAAO0G,KAAK,CACVC,SAAS,gBAAD,OAAkBvM,GAC1BY,MAAO,CAAE+J,MAAOA,MAiIFtL,QAAQ,WACRF,MAAM,WAHR,qBASF,kBAACC,EAAA,EAAD,CAAQ4N,UAAQ,EAAC3N,QAAQ,WAAWF,MAAM,aACxC,kBAACG,EAAA,EAAD,oCAST,SAGX,kBAACyE,GAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAGwG,IAAKtN,EAAMoN,WAC1C/E,EAAOwB,KAAI,SAAA0D,GACV,IAMIC,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GAEnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GACX+K,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAY,KACZ6C,GAAgB,EAChBC,GAAgB,EAChBC,GAAgB,EAapB,OAX+B,IAA3BtD,EAAMc,UAAUC,SAClBX,EAAQJ,EAAMc,UAAU,GACxBT,EAAQL,EAAMc,UAAU,GACxBR,EAAQN,EAAMc,UAAU,GAExBP,EAAYH,EAAMY,QAAQ3B,MAAM,KAAK,GACrC+D,EAAgBhD,EAAMa,SAASC,MAC/BmC,EAAgBhD,EAAMY,SAASC,MAC/BoC,EAAgBhD,EAAMW,SAASC,OAI9BkC,GACAC,GACAC,GAC0B,IAA3BtD,EAAMc,UAAUC,OAuHX,KApHH,kBAACK,GAAA,EAAD,CACEjG,SAAUA,IAAagF,EACvB3C,SAAUb,GAAawD,GACvBnM,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBgH,EAAMpH,OAE7BsH,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CACE0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJV,wBASN,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACnC,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAO5I,MACrB4I,EAAO5I,YAQpB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OACrByI,EAAOzI,aAQpB,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOE,QACrBF,EAAOE,cAOpB,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqI,GAAWM,EACV,kBAAC5L,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,SAAWE,QAAQ,MAA/C,+BAIA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,OAASE,QAAQ,MAA7C,6BAKJ,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACe,IAA3BoI,EAAMc,UAAUC,OACf,6BACE,kBAACtM,EAAA,EAAD,CACEO,QAvIE,WAClBiG,EAAO0G,KAAK,CACVC,SAAS,gBAAD,OAAkBvM,GAC1BY,MAAO,CAAE+J,MAAOA,MAqIFtL,QAAQ,WACRF,MAAM,WAHR,qBASF,kBAACC,EAAA,EAAD,CAAQ4N,UAAQ,EAAC3N,QAAQ,WAAWF,MAAM,aACxC,kBAACG,EAAA,EAAD,wCAapB,kBAACyE,GAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAGwG,IAAKtN,EAAMoN,WAC1C/E,EAAOwB,KAAI,SAAA0D,GACV,IAMIC,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GAEf,OAA+B,IAA3B2K,EAAMc,UAAUC,OAEhB,kBAACK,GAAA,EAAD,CACEjG,SAAUA,IAAagF,EACvB3C,SAAUb,GAAawD,GACvBnM,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBgH,EAAMpH,OAE7BsH,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CACE0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJV,wBASN,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACnC,kBAAChD,EAAA,EAAD,CACEC,WAAS,EACT5E,QAAS,EACTqB,MAAO,CAAEiC,MAAO,OAAQC,QAAS,SAEjC,kBAACoB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAO5I,MACrB4I,EAAO5I,YAQpB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OACrByI,EAAOzI,aAQpB,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOE,QACrBF,EAAOE,cAOpB,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,iEADF,WAEGsL,IAGL,kBAACxI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACe,IAA3BoI,EAAMc,UAAUC,OACf,6BACE,kBAACtM,EAAA,EAAD,CACEO,QA9GE,WAClBiG,EAAO0G,KAAK,CACVC,SAAS,gBAAD,OAAkBvM,GAC1BY,MAAO,CAAE+J,MAAOA,MA4GFtL,QAAQ,WACRF,MAAM,WAHR,qBASF,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWF,MAAM,aAC/B,kBAACG,EAAA,EAAD,oCAST,aAUjB,kBAAC4O,EAAA,EAAD,M,wNCr+BAhR,GAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,EACVK,UAAW,QAEbC,SAAS,eACNR,EAAMS,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,SAGbC,SAAO,mBACJZ,EAAMS,YAAYI,KAAK,MAAQ,CAC9BF,QAAS,SAFN,qBAIC,CACJgD,MAAO,MALJ,yBAOK,CACRA,MAAO,SARJ,GAWPoN,YAAa,CACXhP,MAAO,OACPJ,gBAAiB,UACjBiC,QAAS,UACToN,OAAQ,UACR5M,aAAc,MACdhE,YAAa,OACb,UAAW,CACTuB,gBAAiB,aAKR,SAASsP,GAAS1N,GAC/B,IAAMxC,EAAUjB,KADsB,EAGNkB,IAAMC,SAAS,MAHT,mBAG/BC,EAH+B,KAGrBC,EAHqB,KAIhCC,EAAOC,QAAQH,GAEfgQ,EAAa,SAAA1O,GACjBrB,EAAYqB,EAAMC,gBAGdnB,EAAc,WAClBH,EAAY,OAGRqH,EAASC,cAduB,EAeZzH,IAAMC,SAAS,CACvCkQ,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,IAnB6B,mBAe/B9N,EAf+B,KAexB+N,EAfwB,KAqBhCC,EAAY,CAChB,CACE3J,KAAM,OACN/B,KAAM,kBAAC,KAAD,MACNvD,QAAS,kBAAMiG,EAAO0G,KAAK,YAE7B,CACErH,KAAM,SACN/B,KAAM,kBAAC,KAAD,MACNvD,QAAS,kBAAMiG,EAAO0G,KAAK,mBAE7B,CACErH,KAAM,SACN/B,KAAM,kBAAC,KAAD,MACNvD,QAAS,kBAAMiG,EAAO0G,KAAK,mBAE7B,CACErH,KAAM,WACN/B,KAAM,kBAAC,KAAD,MACNvD,QAAS,kBAAMiG,EAAO0G,KAAK,sBAIzBuC,EAAe,SAACC,EAAQtQ,GAAT,OAAkB,SAAAoB,IAEpB,YAAfA,EAAM4D,MACS,QAAd5D,EAAMoM,KAA+B,UAAdpM,EAAMoM,MAKhC2C,EAAS,6BAAK/N,GAAN,kBAAckO,EAAStQ,OAkCjC,OACE,6BACG,CAAC,QAAQyI,KAAI,SAAA6H,GAAM,OAClB,kBAAC,IAAMjO,SAAP,CAAgBmL,IAAK8C,GACnB,kBAACC,GAAA,EAAD,CACED,OAAQA,EACRtQ,KAAMoC,EAAMkO,GACZxO,QAASuO,EAAaC,GAAQ,IAtC3B,SAAAA,GAAM,OACjB,yBACEnQ,UAAWqQ,aAAK7Q,EAAQ8Q,KAAT,eACZ9Q,EAAQ+Q,SAAsB,QAAXJ,GAA+B,WAAXA,IAE1C1K,KAAK,eACLzE,QAASkP,EAAaC,GAAQ,GAC9BK,UAAWN,EAAaC,GAAQ,IAEhC,kBAACM,GAAA,EAAD,KACGR,EAAU3H,KAAI,SAAC3E,EAAM4B,GAAW,IACvBe,EAAwB3C,EAAxB2C,KAAM/B,EAAkBZ,EAAlBY,KAAMvD,EAAY2C,EAAZ3C,QACpB,OACE,kBAAC,IAAMkB,SAAP,CAAgBmL,IAAK9H,GACnB,kBAACmL,GAAA,EAAD,CACEC,QAAM,EACNtD,IAAK/G,EACLtF,QAASA,EACTb,MAAO,CAAEtB,YAAa,SAErB0F,GAAQ,kBAACqM,GAAA,EAAD,KAAerM,GACxB,kBAACsM,GAAA,EAAD,CAAcC,QAASxK,KAEzB,kBAACyK,GAAA,EAAD,YAiBDT,CAAKH,IAER,yBAAKnQ,UAAWR,EAAQd,MACtB,kBAACuB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,SAClD,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CACEc,SAAS,QACTH,QAASkP,EAAaC,GAAQ,GAC9BnQ,UAAWR,EAAQgQ,YACnBrP,MAAO,KAET,kBAACQ,EAAA,EAAD,CAAYD,QAAQ,KAAKV,UAAWR,EAAQT,OAA5C,6BAIE,yBAAKiB,UAAWR,EAAQP,UACtB,kBAAC2B,EAAA,EAAD,CACEC,aAAW,0BACXC,gBAAc,cACdC,gBAAc,OACdC,QAAS2O,EACTnP,MAAM,WAEN,kBAAC,IAAD,CAAeL,MAAO,CAAEgB,SAAU,OAEpC,kBAACC,EAAA,EAAD,CACEC,GAAG,cACH1B,SAAUA,EACV2B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEd3B,KAAMA,EACN8B,QAAS5B,GAET,kBAAC6B,EAAA,EAAD,CAAUZ,QAASjB,GACjB,kBAAC,IAAD,CACEO,GAAG,eACHH,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAF1C,oBAOF,kBAACoB,EAAA,EAAD,CAAUZ,QAASjB,GACjB,kBAAC,IAAD,CACEO,GAAG,UACHH,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAF1C,aAUR,kBAAC,IAAD,CACEF,GAAG,eACHN,UAAWR,EAAQH,QACnBc,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAExC,kBAACC,EAAA,EAAD,CACED,MAAM,UACNE,QAAQ,YACRmB,UAAW,kBAAC,IAAD,OAHb,oBAQF,kBAAC,IAAD,CACEvB,GAAG,UACHN,UAAWR,EAAQH,QACnBc,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAExC,kBAACC,EAAA,EAAD,CACED,MAAM,UACNE,QAAQ,YACRP,MAAO,CAAE2B,WAAY,QACrBD,UAAW,kBAAC,IAAD,OAJb,mBCnNlB,SAAS2G,GAAoBC,GAC3B,OAAIA,GAAK,EACA,IAAMA,EAERA,EAIT,IAAIuI,GAAW,IAAIhN,KACfyF,GACFuH,GAAS/M,cACT,IACAuE,GAAoBwI,GAASpH,WAAa,GAC1C,IACApB,GAAoBwI,GAASnH,WAG/B,SAASoH,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAEtD,IAAIwC,GAAW,GACX2M,GAAK,KAELrK,GAAS,KACTE,GAAO,KA8DPoK,GAAI,IAAIpN,KACRqN,GAAmB,CAAC,GAAD,OAAID,GAAEnN,cAAc,EAApB,YAAyBmN,GAAEnN,eAA3B,UAA8CmN,GAAEnN,cAAhD,YAAiEmN,GAAEnN,cAAc,GAAjF,UAAwFmN,GAAEnN,cAAc,EAAxG,YAA6GmN,GAAEnN,cAAc,IAE9IqN,G,kDACJ,WAAYtP,GAAQ,IAAD,8BACjB,cAAMA,IA0BRuP,iBAAmB,SAAA9H,GACjB,IAAIC,EAAmBD,EACnBE,EACFD,EAAiBzF,cACjB,IACA,EAAKuE,oBAAoBkB,EAAiBE,WAAa,GACvD,IACA,EAAKpB,oBAAoBkB,EAAiBG,WAC5C,EAAKmG,SAAS,CAAEwB,YAAa7H,IACrB,IAAI3F,KAAK,eApCA,EA8CnByN,mBAAqB,SAAApJ,GACnB,EAAK2H,SAAS,CAAE0B,aAAcrJ,EAAEvE,OAAOwB,SA/CtB,EAkDnBqM,WAAa,SAAAtJ,GACX,EAAK2H,SAAS,CAAE7C,IAAK9E,EAAEvE,OAAOwB,SAnDb,EAqDnBsM,eAAiB,SAAAvJ,GACf,EAAK2H,SAAS,CAAE6B,QAASxJ,EAAEvE,OAAOwB,SAtDjB,EAyEnBvF,YAAc,SAACkB,EAAO6Q,GACL,cAAXA,GAGJ,EAAK9B,SAAS,CACZ+B,aAAa,EACbC,aAAa,EACbC,OAAQ,QAhFO,EAoFnBC,cAAgB,SAAA7J,GACdA,EAAE8J,iBACF,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,UAAW,EAAKrQ,MAAM4P,SACtCO,EAASE,OAAO,WAAY,EAAKrQ,MAAMkL,KACvCiF,EAASE,OAAO,eAAgB,EAAKrQ,MAAMsQ,cAC3CH,EAASE,OAAO,UAAW,EAAKrQ,MAAMuP,aACtCY,EAASE,OAAO,WAAY,EAAKrQ,MAAMyP,cACvC,EAAK1B,SAAS,CAAEwC,SAAS,IACzBtI,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,SAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAM6H,EACN1H,QAAS,CACP,eAAgB,sBAChB+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CAAE+B,aAAa,EAAMS,SAAS,IAC5CzH,OAAOC,SAASC,QAAO,MAExBC,OAAM,SAAAC,GAEL,GADA,EAAK6E,SAAS,CAAEgC,aAAa,EAAMQ,SAAS,IACxCrH,EAAK,MAAMA,KAEnB,EAAK6E,SAAS,CAAE7C,IAAK,GAAIoF,aAAc,KAAMV,QAAS,MAhHrC,EAmHnBY,eAAiB,SAAApK,GACf,IAAIqK,EAAY5D,SAAS6D,eAAe,QAGpCC,EAAWF,EAAUpN,MAKzB,IAFwB,mBAEDuN,KAAKD,GAG1B,OAFAxH,MAAM,qBACNsH,EAAUpN,MAAQ,IACX,EAEP,EAAK0K,SACH,CAAEuC,aAAclK,EAAEvE,OAAOgP,MAAM,MA9HnC,EAAK7Q,MAAQ,CACXkL,IAAK,GACL0E,QAAS,GACTU,aAAc,KACdN,OAAQ,KACRc,QA7EO,EA8EPhB,aAAa,EACbC,aAAa,EACbQ,SAAS,EACThB,YAAa/H,GACbiI,aAAcL,GAAiB,IAdhB,E,gEAoBC5I,GAClB,OAAIA,GAAK,EACA,IAAMA,EAERA,I,kCAgHI,IAAD,OACVyB,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,wBAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJqG,GAAKrG,EAAIP,KAAKwC,OAEdjG,GAASgE,EAAIP,KACb,EAAKyF,SAAS,CACZiC,OAAQ,MACRc,QAAQ,OAIX7H,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,Q,oCAIhBjB,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,YAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGnDC,MAAK,SAAAC,GACJ9D,GAAS8D,EAAIP,QAGdW,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,Q,+BAKd,IAAI1G,EAAauO,KAAK/Q,MAAMyP,aAEpBlS,EAAYwT,KAAKhR,MAAjBxC,QACR,OAAIwT,KAAK/Q,MAAMuQ,QAEX,yBAAKrS,MAAO,CAAEmD,OAAQ,SACpB,kBAAC,EAAD,MACA,kBAACiM,EAAA,EAAD,QAIoB,OAAtByD,KAAK/Q,MAAMgQ,QAA4B,OAATjL,KAChCgM,KAAKC,YACLD,KAAKE,eAEP1O,GAAWwO,KAAKhR,MAAMwC,UAEI,IAAtBwO,KAAK/Q,MAAM8Q,OAkOD,kBAACxD,EAAA,EAAD,MAjOD,IAAP4B,GAEA,yBAAKnR,UAAWR,EAAQd,MACtB,kBAACgR,GAAD,MACA,kBAAC,GAAD,CAASlL,SAAUA,GAAUC,aAAc,OAC3C,kBAAC,EAAD,MACA,yBACEtE,MAAO,CACLiC,MAAO,MACPkB,OAAQ,YACRV,UACE,4DACFxC,gBAAiB,SAGnB,0BACED,MAAO,CACLC,gBAAiB,OACjBkE,UAAW,OACXjC,QAAS,aAEX8Q,SAAUH,KAAKd,eAEf,kBAACvR,EAAA,EAAD,CAAYD,QAAQ,KAAKP,MAAO,CAAE4C,WAAY,MAAMC,WAAW,aAAaT,aAAa,SAAzF,uBAGA,wBAAIuL,KAAO,IAAItN,MAAQ,SACvB,6BAAK,6BACL,kBAACiD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4T,WACpC,kBAACzS,EAAA,EAAD,CAAYX,UAAWR,EAAQ6T,YAA/B,sCAIF,kBAAC5P,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQ4T,WAEnB,kBAACvF,EAAA,EAAD,CACEC,KAAK,QACLpN,QAAQ,WACRW,GAAG,UACHsK,MAAM,gCACNrG,MAAO0N,KAAK/Q,MAAM4P,QAClBrI,SAAUwJ,KAAKpB,eACf5R,UAAWR,EAAQ8T,WACnBjK,UAAQ,EACRkK,WAAS,KAGb,kBAAC9P,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQ4T,WAEnB,kBAACvF,EAAA,EAAD,CACEC,KAAK,QACLpN,QAAQ,WACRW,GAAG,MACHsK,MAAM,iCACNrG,MAAO0N,KAAK/Q,MAAMkL,IAClB3D,SAAUwJ,KAAKrB,WACf3R,UAAWR,EAAQ8T,WACnBjK,UAAQ,KAQZ,kBAAC5F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC7B,kBAAClB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4T,WACpC,kBAACzS,EAAA,EAAD,CAAYX,UAAWR,EAAQ6T,YAA/B,yBAIF,kBAAC5P,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZ,IACD,kBAAC4P,GAAA,EAAD,CACE9S,QAAQ,WACRiL,MAAM,gBACNxL,MAAO,CAAEiC,MAAO,MAAOC,QAAS,QAEhC,kBAACoR,GAAA,EAAD,CACEpK,UAAQ,EACR/D,MAAO0N,KAAK/Q,MAAMyP,aAClBlI,SAAUwJ,KAAKvB,mBACf7M,KAAK,iBAEP,kBAAChD,EAAA,EAAD,CAAU0D,MAAO+L,GAAiB,IAAKA,GAAiB,IACxD,kBAACzP,EAAA,EAAD,CAAU0D,MAAO+L,GAAiB,IAAKA,GAAiB,IACxD,kBAACzP,EAAA,EAAD,CAAU0D,MAAO+L,GAAiB,IAAKA,GAAiB,SAMhE,kBAAC5N,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC7B,kBAAClB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4T,WACpC,kBAACzS,EAAA,EAAD,CAAYX,UAAWR,EAAQ6T,YAA/B,4CAIF,kBAAC5P,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC,KAAD,CAAyBsF,MAAOC,MAC9B,kBAAC,KAAD,CACEC,QAAM,EACNC,UAAQ,EACR3I,QAAQ,SACR4I,aAAa,WACbC,OAAO,aACPjE,MAAO0N,KAAK/Q,MAAMuP,YAClB1H,oBAAqB,CAAE5J,SAAU,SACjCsJ,SAAUwJ,KAAKzB,iBACfpR,MAAO,CAAEiC,MAAO,MAAOC,QAAS,aAO1C,kBAACoB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAAClD,EAAA,EAAD,CAAYX,UAAWR,EAAQ6T,YAA/B,+BAIF,kBAAC5P,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQ4T,WAEnB,kBAACM,GAAA,EAAD,CACE1T,UAAWR,EAAQkU,MACnB7O,KAAK,OACLxD,GAAG,OACHuD,KAAK,eACL4E,SAAUwJ,KAAKP,eACftS,MAAO,CACLiC,MAAO,MACPC,QAAS,QAEXgH,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4T,WACpC,yBAAKjT,MAAO,CAAEwT,WAAY,SAAUrQ,OAAQ,UAC1C,kBAAC7C,EAAA,EAAD,CACEoE,KAAK,SACLrE,MAAM,UACNE,QAAQ,YACRV,UAAWR,EAAQoU,OACnB/R,UAAW,kBAAC,IAAD,MACX1B,MAAO,CACLkC,QAAS,WACTlB,SAAU,OACVf,gBAAiB,UACjBkD,OAAQ,SAVZ,UAeA,kBAACuQ,GAAA,EAAD,CACEhU,KAAMmT,KAAK/Q,MAAM8P,YACjB+B,iBAAkB,IAClBnS,QAASqR,KAAKjT,aAEd,kBAAC,GAAD,CAAO4B,QAASqR,KAAKjT,YAAagU,SAAS,WAA3C,gCAIF,kBAACF,GAAA,EAAD,CACEhU,KAAMmT,KAAK/Q,MAAM+P,YACjB8B,iBAAkB,IAClBnS,QAASqR,KAAKjT,aAEd,kBAAC,GAAD,CAAO4B,QAASqR,KAAKjT,YAAagU,SAAS,SAA3C,yCASZ,4BAAQ/T,UAAWR,EAAQwU,QACzB,kBAAC,EAAD,QAKG,IAAP7C,GAEA,kBAAC,IAAMjP,SAAP,KACE,kBAACwN,GAAD,MACA,kBAAC,GAAD,CAASjL,aAAcA,EAAcD,SAAUA,KAC/C,yBACErE,MAAO,CACLiC,MAAO,MACPkB,OAAQ,OACRtE,UAAW,OACXsF,UAAW,OACX1B,UACE,6DAEJ5C,UAAWR,EAAQd,MAGnB,kBAAC,GAAD,CAAaoI,OAAQA,GAAQE,OAAQA,MAEvC,4BAAQhH,UAAWR,EAAQwU,QACzB,kBAAC,EAAD,aApBR,O,GA7YqB7R,aA0aZ8R,iBAzeG,SAAAxV,GAAK,YAAK,CAC1BC,KAAM,CACJU,QAAS,OACT8U,cAAe,SACfC,UAAW,QAEbC,KAAM,CACJ9P,UAAW7F,EAAMK,QAAQ,GACzByD,aAAc9D,EAAMK,QAAQ,IAE9BkV,OAAQ,CACN1P,UAAW,QAEb+P,OAAK,GACH/P,UAAW7F,EAAMK,QAAQ,GACzBsD,MAAO,MACPhD,QAAS,OACT8U,cAAe,UAJZ,cAKFzV,EAAMS,YAAYI,KAAK,MAAQ,CAC9B8C,MAAO,QANN,uBAQK,QARL,2BASS,UATT,GAWLkS,KAAM,CACJjS,QAAS5D,EAAMK,QAAQ,GACvBE,UAAW,SACXoB,gBAAiB,QAGnBmU,KAAM,CACJnS,MAAO,MACPkC,UAAW7F,EAAMK,QAAQ,IAE3B8U,OAAQ,CACNtQ,OAAQ7E,EAAMK,QAAQ,EAAG,EAAG,IAE9B0V,OAAQ,CACNpU,gBAAiB,QAEnBsT,MAAO,CACLtR,MAAO,MACPqS,OAAQ,oBACRpS,QAAS,UACTQ,aAAc,OAEhByQ,WAAY,CACVlR,MAAO,MACPC,QAAS,OAEX+Q,UAAW,CACT/Q,QAAS,oBAEXgR,WAAY,CACVrU,UAAW,OACX0V,YAAa,OACbvT,SAAU,OACV4B,WAAY,UAgbDkR,CAAsB3C,ICvhBhBqD,G,kDACnB,WAAY3S,GAAQ,IAAD,uBACjB,cAAMA,IAaR4S,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CACZ6E,UAAU,EACVC,KAAMhK,EAAIP,UAIbW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CACZ6E,UAAU,EACVC,KAAM,YAERnK,aAAaoK,WAAW,aAjC5B,IACIF,GAAW,EAHE,MAIH,UAFAlK,aAAaC,QAAQ,WAGjCiK,GAAW,GAGb,EAAK5S,MAAQ,CACX4S,WACAC,KAAM,IAVS,E,qDAuCjB,MAAwB,KAApB9B,KAAK/Q,MAAM6S,MACb9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,OAC2B,UAAzByD,KAAK/Q,MAAM6S,KAAKjQ,KAEvB,6BACE,kBAAC,IAAM3C,SAAP,KACE,kBAAC,GAAD,CAAcsC,SAAUwO,KAAK/Q,MAAM6S,SAKlC,kBAAC,IAAD,CAAUxU,GAAG,U,GApDS6B,a,+ECQnC,SAAS8O,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAGtD,IAAIgT,GAAO,GACPC,GAAc,GAEdC,GAAQ,IAAIlR,KACdyF,GACEyL,GAAMrL,UACN,IACAqL,GAAMtL,WACN,IACAsL,GAAMjR,cAJNiR,WAQAA,GAAMrL,UAyDJsL,G,kDACJ,WAAYnT,GAAQ,IAAD,uBACjB,cAAMA,IA2BR2G,aAAe,SAAA/D,GAAI,OAAI,YAA4B,IAAfU,EAAc,EAAxBxB,OAAUwB,MAClC,EAAK0K,SAAL,eAAiBpL,EAAOU,MA3BxB,IACIuP,GAAW,EAHE,OAKJ,MAHClK,aAAaC,QAAQ,WAIjCiK,GAAW,GAGb,EAAK5S,MAAQ,CACXmT,SAAU,GACVC,SAAU,GACVR,WACAC,KAAM,GACNQ,IAAK,GACLC,oBAAoB,EACpBC,aAAa,GAEf,EAAKhM,SAAW,EAAKA,SAASiM,KAAd,iBAChB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,iBAnBD,E,qDAsBVpN,GACP2K,KAAKhD,SAAL,eACG3H,EAAEvE,OAAOc,KAAOyD,EAAEvE,OAAOwB,U,iCAQnB+C,GAAI,IAAD,OACZA,EAAE8J,iBADU,MAEmBa,KAAK/Q,MAA5BmT,EAFI,EAEJA,SAAUC,EAFN,EAEMA,SAElBrC,KAAKhD,SAAS,CAAEwF,aAAa,IAE7BtL,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAW,SAChB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjB1F,MAAOqQ,EACPC,SAAUA,IAEZ3K,QAAS,CACP,eAAgB,qDAGjBG,KACC,SAAU8K,GACRX,GAAOW,EAASpL,KAAK1F,KACrBoQ,GAAcU,EAASpL,KAAKqL,aAC5BjL,aAAakL,QAAQ,eAAgBF,EAASpL,KAAKqL,cACnD5C,KAAKhD,SAAS,CACZ8E,KAAMa,EAASpL,KAAK1F,KACpBgQ,UAAU,EACVS,IAAK,MACLE,aAAa,KAEfC,KAAKzC,OAGR9H,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,GACZ,EAAK6E,SAAS,CAAEuF,oBAAoB,EAAMC,aAAa,S,kCAK3DtL,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,wBAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAUC,GACTA,EAAIP,QAOVW,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,Q,iCAMF,OADAR,aAAaC,QAAQ,UAEjCoI,KAAKhD,SAAS,CACZ6E,UAAU,M,+BAMN,IAAD,OACCrV,EAAYwT,KAAKhR,MAAjBxC,QAiCR,GA/Ba,UAATwV,IACFhC,KAAKC,YAEM,SAAT+B,IACFrK,aAAakL,QAAQ,QAAS,uBAAyBpM,IAE5C,UAATuL,KACFrK,aAAakL,QAAQ,QAAS,SAC9Bb,GAAO,IAEI,UAATA,KACFrK,aAAakL,QAAQ,QAAS,SAC9Bb,GAAO,IAEI,OAATA,KACFrK,aAAakL,QAAQ,QAAS,WAC9Bb,GAAO,IAEI,QAATA,KACFrK,aAAakL,QAAQ,QAAS,WAC9Bb,GAAO,IAEI,QAATA,KACFrK,aAAakL,QAAQ,QAAS,OAC9Bb,GAAO,IAEI,YAATA,KACFrK,aAAakL,QAAQ,QAAS,WAC9BlL,aAAakL,QAAQ,eAAeZ,KAEtCD,GAAO,GACHhC,KAAK/Q,MAAM4S,SAAU,CACvB,IAAMiB,EAAQnL,aAAaC,QAAQ,SAEnC,GAAIkL,IAAU,uBAAyBrM,GACrC,OAAO,kBAAC,IAAD,CAAUnJ,GAAG,QAAQyV,OAAK,IACnC,GAAc,UAAVD,EAAmB,OAAO,kBAAC,IAAD,CAAUxV,GAAG,SAASyV,OAAK,IACzD,GAAc,YAAVD,EAAqB,OAAO,kBAAC,IAAD,CAAUxV,GAAG,WAAWyV,OAAK,IAC7D,GAAc,YAAVD,EAAqB,OAAO,kBAAC,IAAD,CAAUxV,GAAG,WAAWyV,OAAK,IAC7D,GAAc,QAAVD,EAAiB,OAAO,kBAAC,IAAD,CAAUxV,GAAG,OAAOyV,OAAK,IACrD,GAAc,UAAVD,EAAmB,OAAO,kBAAC,IAAD,CAAUxV,GAAG,SAASyV,OAAK,IAE3D,IAAMhW,EAAc,SAACkB,EAAO6Q,GACX,cAAXA,GAGJ,EAAK9B,SAAS,CAAEuF,oBAAoB,KAKtC,OAAIvC,KAAK/Q,MAAMuT,YACN,kBAACjG,EAAA,EAAD,MAGP,kBAAC,IAAMrN,SAAP,KACE,yBAAKlC,UAAWR,EAAQwW,WACtB,kBAACrV,EAAA,EAAD,CAAYD,QAAQ,KAAKV,UAAWR,EAAQT,OAC1C,yDAEF,kBAACkX,GAAA,EAAD,CAAWnQ,UAAU,OAAOwI,SAAS,KAAKtO,UAAWR,EAAQ6U,OAC3D,kBAAC6B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAQzV,QAAQ,SAASV,UAAWR,EAAQ4W,QAC1C,kBAAC,KAAD,CAAYjV,SAAS,WAEvB,kBAACR,EAAA,EAAD,CAAYmF,UAAU,KAAKpF,QAAQ,MACjC,0CAEF,0BAAMV,UAAWR,EAAQ+U,KAAMpB,SAAUH,KAAK0C,YAC5C,kBAAC7H,EAAA,EAAD,CACEhJ,KAAK,QACLnE,QAAQ,SACR4C,OAAO,SACP+F,UAAQ,EACRgN,WAAS,EACThV,GAAG,WACHsK,MAAM,WACNrG,MAAO0N,KAAK/Q,MAAMmT,SAClB5L,SAAUwJ,KAAKrK,aAAa,YAC5B3I,UAAWR,EAAQgV,SAErB,kBAAC3G,EAAA,EAAD,CACEnN,QAAQ,SACR4C,OAAO,SACP+F,UAAQ,EACRgN,WAAS,EACT1K,MAAM,WACN9G,KAAK,WACLxD,GAAG,WACHiE,MAAO0N,KAAK/Q,MAAMoT,SAClB7L,SAAUwJ,KAAKrK,aAAa,YAC5B2N,aAAa,mBACbtW,UAAWR,EAAQgV,SAGrB,kBAAC/T,EAAA,EAAD,CACEoE,KAAK,SACLwR,WAAS,EACT3V,QAAQ,YACRF,MAAM,UACNR,UAAWR,EAAQoU,QALrB,WAUF,kBAAC,IAAD,CACEtT,GAAG,kBACHH,MAAO,CAAEI,eAAgB,YAAaC,MAAO,OAAQ3B,YAAY,QAFnE,+BAMA,kBAACgV,GAAA,EAAD,CACEhU,KAAMmT,KAAK/Q,MAAMsT,mBACjBzB,iBAAkB,IAClBnS,QAAS5B,GAET,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,SAAtC,sD,GA/NM5R,aA0OL8R,iBAjSG,SAAAxV,GAAK,YAAK,CAC1B4V,MAAM,aACJkC,WAAY,cAEZ1T,aAAc,MACd+D,MAAO,SACPxH,QAAS,OACT8U,cAAe,SACfP,WAAY,SACZnT,MAAO,OACP2C,WAAY,QACX1E,EAAMS,YAAYI,KAAK,OAAS,CAC/B6D,WAAY,SAGhB6S,UAAW,CACTQ,gBAAgB,OAAD,OAAStT,KAAT,KACfuT,eAAgB,QAChBC,OAAQ,QAEVN,OAAQ,CACN9S,OAAQ7E,EAAMK,QAAQ,GACtBsB,gBAAiB,UACjBsW,OAAQ,OACRtU,MAAO,OACPkC,UAAW,QAEbiQ,KAAM,CACJnS,MAAO,MACPkC,UAAW7F,EAAMK,QAAQ,IAE3B8U,OAAQ,CACNtQ,OAAQ7E,EAAMK,QAAQ,EAAG,EAAG,GAC5BuD,QAAS,OACTlB,SAAU,OACV4B,WAAY,SACZ3C,gBAAiB,UACjBmC,aAAc,QAEhBiS,OAAQ,CACNpU,gBAAiB,OACjByC,aAAc,OAEhB9D,OAAK,GACHoE,WAAY,OACZ3C,MAAO,QAFJ,cAGF/B,EAAMS,YAAYI,KAAK,OAAS,CAC/B6B,SAAU,SAJT,cAMF1C,EAAMS,YAAYI,KAAK,OAAS,CAC/B6B,SAAU,SAPT,MAsPQ8S,CAAsBkB,ICnUhBwB,G,kDACnB,WAAY3U,GAAQ,IAAD,6BACjB,cAAMA,GACN2I,aAAaoK,WAAW,SACxBpK,aAAaoK,WAAW,gBAHP,E,qDAOjB,OACE,6BACE,wDACA,4BAAQ/T,QAAS,WAAO+J,OAAOC,SAASC,QAAO,KAAS,kBAAC,IAAD,CAAM3K,GAAG,KAAT,qB,GAX5B6B,a,mBCUhC1D,GAAQyF,eAGZ,SAAS+M,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAHtDvD,GAAQmY,aAAoBnY,IAK5B,IAAIoY,GAAU,KACVC,GAAM,KACN/D,IAAS,EACTgE,GAAY,KACZ3K,GAAM,GACNC,GAAM,GACNC,GAAM,GA0CV,SAASlH,GAASpD,GAAQ,IAChBqD,EAAqCrD,EAArCqD,SAAUC,EAA2BtD,EAA3BsD,MAAOC,EAAoBvD,EAApBuD,MAAUC,EADZ,aACsBxD,EADtB,8BAGvB,OACE,uCACEyD,KAAK,WACLC,OAAQJ,IAAUC,EAClBlE,GAAE,0BAAqBkE,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GAEHF,IAAUC,GACT,kBAACK,GAAA,EAAD,CAAKC,EAAG,GACN,kBAAClF,EAAA,EAAD,CAAYmF,UAAU,QAAQT,KAaxC,SAASU,GAAUR,GACjB,MAAO,CACLlE,GAAG,cAAD,OAAgBkE,GAClB,gBAAgB,mBAAhB,OAAoCA,I,IAIlCyR,G,kDAGJ,WAAYhV,GAAQ,IAAD,8BACjB,cAAMA,IAoDRiV,gBAAkB,WAChB,EAAKjH,SAAS,CAACnQ,MAAK,KAtDH,EAyDnBqX,sBAAwB,WACtBJ,GAAI,EACJ,EAAK9G,SAAS,CAACnQ,MAAK,KA3DH,EA6DnBsX,uBAAyB,WACvB,EAAKnH,SAAS,CAACnQ,MAAK,KA9DH,EAiEnBE,YAAc,SAACkB,EAAO6Q,GACL,cAAXA,GAGJ,EAAK9B,SAAS,CACZ+B,aAAa,EACbC,aAAa,EACb6E,QAAS,QAxEM,EA4EnBlO,aAAe,SAAC1H,EAAOsK,GACrB,EAAKyE,SAAS,CACZoH,SAAU7L,KA9EK,EAkFnB8L,gBAAkB,SAAChP,EAAGiP,GAEpB,IADA,IAAIC,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IAEjBA,IAAMH,EAAK,IAEbC,EAAME,GAAGC,IAAMrP,EAAEvE,OAAOwB,MAExB,EAAK0K,SAAS,CAAEwH,YAAaD,MA1FhB,EAiGnBI,gBAAkB,SAACtP,EAAGiP,GAEpB,IADA,IAAIC,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,IAAMH,EAAK,IAEbC,EAAME,GAAGG,IAAMvP,EAAEvE,OAAOwB,MAExB,EAAK0K,SAAS,CAAEwH,YAAaD,MAxGhB,EA8GnBM,iBAAmB,SAACxP,EAAGyP,GAErB,IADA,IAAIP,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,IAAMK,EAAK,IAEbP,EAAME,GAAGM,KAAO1P,EAAEvE,OAAOwB,MAEzB,EAAK0K,SAAS,CAAEwH,YAAaD,MArHhB,EA2HnBS,mBAAqB,SAAC3P,EAAGyP,GAEvB,IADA,IAAIP,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,IAAMK,EAAK,IAEbP,EAAME,GAAGQ,OAAS5P,EAAEvE,OAAOwB,MAE3B,EAAK0K,SAAS,CAAEwH,YAAaD,MAlIhB,EAwInBW,iBAAmB,SAAC7P,EAAGyP,GAErB,IADA,IAAIP,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,IAAMK,EAAK,IAEbP,EAAME,GAAGU,KAAO9P,EAAEvE,OAAOwB,MAEzB,EAAK0K,SAAS,CAAEwH,YAAaD,MA/IhB,EAqJnBa,gBAAkB,SAAC/P,EAAGyP,GAEpB,IADA,IAAIP,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,IAAMK,EAAK,IAEbP,EAAME,GAAGY,IAAMhQ,EAAEvE,OAAOwB,MAExB,EAAK0K,SAAS,CAAEwH,YAAaD,MA5JhB,EAkKnBe,gBAAkB,SAACjQ,EAAGyP,GAEpB,IADA,IAAIP,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,IAAMK,EAAK,IAEbP,EAAME,GAAGc,IAAMlQ,EAAEvE,OAAOwB,MAExB,EAAK0K,SAAS,CAAEwH,YAAaD,MAzKhB,EA+KnBiB,iBAAmB,SAACnQ,EAAGyP,GAErB,IADA,IAAIP,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,IAAMK,EAAK,IACbP,EAAME,GAAGgB,aAAepQ,EAAEvE,OAAOgP,MAAM,GACvC,EAAK9C,SAAS,CAAEwH,YAAaD,MApLhB,EAyLnBmB,YAAc,SAACrQ,EAAGiP,GAEhB,GADAjP,EAAE8J,iBAC6B,IAA3B,EAAKlQ,MAAM0W,YAAmB,CAChC3O,QAAQC,IAAI,SAEZ,IADA,IAAIsN,EAAK,aAAO,EAAKtV,MAAMuV,aAClBC,EAAI,EAAGA,EAAI,EAAGA,IACjBA,IAAMH,EAAK,IAEbC,EAAME,GAAG1E,QAAS,EAElB,EAAK/C,SAAS,CAAEwH,YAAaD,IAC7BvN,QAAQC,IAAIsN,EAAME,GAAG1E,QACrB,EAAK6F,aAAavQ,QAGjB,CACL,IAAIkP,EAAK,aAAO,EAAKtV,MAAMuV,aAC3B,IAAKC,EAAI,EAAGA,EAAI,EAAGA,IACbA,IAAMH,EAAK,IAEbC,EAAME,GAAG1E,QAAS,EAElB,EAAK/C,SAAS,CAAEwH,YAAaD,IAC7BvN,QAAQC,IAAIsN,EAAME,GAAG1E,SAK3B/I,QAAQC,IAAI,EAAKhI,MAAMuV,cArNN,EAwNnBoB,aAAe,SAAAvQ,GACbA,EAAE8J,iBACF,IAAI/F,EAAQ,EAAKnK,MAAMuV,YAAY,GAC/BnL,EAAQ,EAAKpK,MAAMuV,YAAY,GAC/BlL,EAAQ,EAAKrK,MAAMuV,YAAY,GAE/B1K,EAAY,CACd,CACE/N,MAAOqN,EAAMsL,IACbmB,eAAgBzM,EAAMwL,IACtBkB,QAAS1M,EAAM2L,KACfgB,OAAQ3M,EAAM6L,OACd9N,OAAQiC,EAAM+L,KACda,OAAQ5M,EAAMiM,IACdY,aAAc7M,EAAMmM,KAEtB,CACExZ,MAAOsN,EAAMqL,IACbmB,eAAgBxM,EAAMuL,IACtBkB,QAASzM,EAAM0L,KACfgB,OAAQ1M,EAAM4L,OACd9N,OAAQkC,EAAM8L,KACda,OAAQ3M,EAAMgM,IACdY,aAAc5M,EAAMkM,KAEtB,CACExZ,MAAOuN,EAAMoL,IACbmB,eAAgBvM,EAAMsL,IACtBkB,QAASxM,EAAMyL,KACfgB,OAAQzM,EAAM2L,OACd9N,OAAQmC,EAAM6L,KACda,OAAQ1M,EAAM+L,IACdY,aAAc3M,EAAMiM,MAGpBnG,EAAW,IAAIC,SACnBD,EAASE,OAAO,YAAa4G,KAAKzO,UAAUqC,IAC5CsF,EAASE,OAAO,QAAS,EAAKrQ,MAAMuV,YAAY,GAAGiB,cACnDrG,EAASE,OAAO,QAAS,EAAKrQ,MAAMuV,YAAY,GAAGiB,cACnDrG,EAASE,OAAO,QAAS,EAAKrQ,MAAMuV,YAAY,GAAGiB,cACnDzO,QAAQC,IAAI6C,GACZ,EAAKkD,SAAS,CAAEwC,SAAS,IACzBtI,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,WAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAM6H,EACN1H,QAAS,CACP,eAAgB,sBAChB+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CAAE+B,aAAa,EAAMS,SAAS,IAC5CzH,OAAOC,SAASC,QAAO,MAExBC,OAAM,SAAAC,GAEL,GADA,EAAK6E,SAAS,CAAEgC,aAAa,EAAMQ,SAAS,IACxCrH,EAAK,MAAMA,KAGnBnB,QAAQC,IAAI,EAAKhI,MAAMuV,cAtRN,EAyRnBvE,UAAY,WACV/I,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,SAClBgM,iBAAiB,EACjBI,QAAU,CACA+D,cAAgB,UAAU9D,aAAaC,QAAQ,mBAGxDC,MAAK,SAAAC,GACJgM,GAAMhM,EAAIP,KAAKuC,UAAUC,OACzBgK,GAAYjM,EAAIP,KAAKuC,UAErBV,GAAQ2K,GAAU,GAClB1K,GAAQ0K,GAAU,GAClBzK,GAAQyK,GAAU,GAElB,EAAK/G,SAAS,CACZ6G,QAAS,MACT9D,QAAQ,OAGX7H,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,OAhTC,EAoTnBgO,MAAQ,SAAA9Q,GACN,IAAIsQ,EAAc,EAAK1W,MAAM0W,YAC7BA,EAAcA,GAAe,EAAI,EAAIA,EAAc,EACnD,EAAK3I,SAAS,CACZ2I,YAAaA,IAEf,EAAKD,YAAYrQ,EAAGsQ,EAAc,IA1TjB,EA6TnBS,MAAQ,WACN,IAAIT,EAAc,EAAK1W,MAAM0W,YAC7BA,EAAcA,GAAe,EAAI,EAAIA,EAAc,EACnD,EAAK3I,SAAS,CACZ2I,YAAaA,KAjUE,EAqUnBU,WAAa,SAAAhR,GACXA,EAAE8J,iBACF,IAAIwG,EAAc,EAAK1W,MAAM0W,YAFb,EAYZ,EAAK1W,MAAMuV,YAAYmB,EAAc,GARvCjB,EAJc,EAIdA,IACAE,EALc,EAKdA,IACAG,EANc,EAMdA,KACAE,EAPc,EAOdA,OACAE,EARc,EAQdA,KACAE,EATc,EASdA,IACAE,EAVc,EAUdA,IACAE,EAXc,EAWdA,aAGQ,KAARf,GACQ,KAARE,GACS,KAATG,GACW,KAAXE,GACS,KAATE,GACQ,KAARE,GACQ,KAARE,GACiB,OAAjBE,EAEArN,MAAM,mDAGN,EAAK4E,SAAS,CAAEnQ,MAAM,IACtB,EAAKsZ,MAAM9Q,KA9Vb,EAAKpG,MAAQ,CACXuV,YAAa,CACX,CACEzE,QAAQ,EACRuG,OAAQ,EACR5B,IAAK,GACLE,IAAK,GACLG,KAAM,GACNE,OAAQ,GACRE,KAAM,GACNE,IAAK,GACLE,IAAK,GACLE,aAAc,MAEhB,CACE1F,QAAQ,EACRuG,OAAQ,EACR5B,IAAK,GACLE,IAAK,GACLG,KAAM,GACNE,OAAQ,GACRE,KAAM,GACNE,IAAK,GACLE,IAAK,GACLE,aAAc,MAEhB,CACE1F,QAAQ,EACRuG,OAAQ,EACR5B,IAAK,GACLE,IAAK,GACLG,KAAM,GACNE,OAAQ,GACRE,KAAM,GACNE,IAAK,GACLE,IAAK,GACLE,aAAc,OAGlBE,YAAa,EACb9B,QAAS,KACTO,SAAU,EACVrE,UACAhB,aAAa,EACbC,aAAa,EACbuH,YAAY,EACZ/G,SAAS,EACT3S,MAAK,GAjDU,E,qDAoWT,IACAL,EAAYwT,KAAKhR,MAAjBxC,QAGR,GAFAqX,GAAU7D,KAAK/Q,MAAM4U,QACrB9D,GAASC,KAAK/Q,MAAM8Q,OAChBC,KAAK/Q,MAAMuQ,QACb,OACE,yBAAKrS,MAAO,CAAEmD,OAAQ,SACpB,kBAAC2K,GAAA,EAAD,OAON,GAHgB,OAAZ4I,IACF7D,KAAKC,aAEQ,IAAXF,GAAiB,CACnB,GAAY,IAAR+D,GACF,OACE,kBAAC,IAAM5U,SAAP,KACE,8BACE,kBAACsX,GAAD,CACEha,QAASA,EACTmZ,YAAa3F,KAAK/Q,MAAM0W,YACxBnB,YAAaxE,KAAK/Q,MAAMuV,YACxBH,gBAAiBrE,KAAKqE,gBACtBM,gBAAiB3E,KAAK2E,gBACtBE,iBAAkB7E,KAAK6E,iBACvBG,mBAAoBhF,KAAKgF,mBACzBU,YAAa1F,KAAK0F,YAClBW,WAAYrG,KAAKqG,WACjBnB,iBAAkBlF,KAAKkF,iBACvBE,gBAAiBpF,KAAKoF,gBACtBE,gBAAiBtF,KAAKsF,gBACtBvY,YAAaiT,KAAKjT,YAClByY,iBAAkBxF,KAAKwF,mBAEzB,kBAACiB,GAAD,CACEja,QAASA,EACTmZ,YAAa3F,KAAK/Q,MAAM0W,YACxBnB,YAAaxE,KAAK/Q,MAAMuV,YACxBH,gBAAiBrE,KAAKqE,gBACtBM,gBAAiB3E,KAAK2E,gBACtBE,iBAAkB7E,KAAK6E,iBACvBG,mBAAoBhF,KAAKgF,mBACzBU,YAAa1F,KAAK0F,YAClBW,WAAYrG,KAAKqG,WACjBnB,iBAAkBlF,KAAKkF,iBACvBE,gBAAiBpF,KAAKoF,gBACtBE,gBAAiBtF,KAAKsF,gBACtBE,iBAAkBxF,KAAKwF,iBACvBkB,eAAgB1G,KAAK0G,eACrB3Z,YAAaiT,KAAKjT,YAClBqZ,MAAOpG,KAAKoG,QAEd,kBAACO,GAAD,CACEna,QAASA,EACTuS,YAAaiB,KAAK/Q,MAAM8P,YACxBC,YAAagB,KAAK/Q,MAAM+P,YACxBjS,YAAaiT,KAAKjT,YAClB4Y,YAAa3F,KAAK/Q,MAAM0W,YACxBnB,YAAaxE,KAAK/Q,MAAMuV,YACxBH,gBAAiBrE,KAAKqE,gBACtBM,gBAAiB3E,KAAK2E,gBACtBE,iBAAkB7E,KAAK6E,iBACvBG,mBAAoBhF,KAAKgF,mBACzBU,YAAa1F,KAAK0F,YAClBE,aAAc5F,KAAK4F,aACnBV,iBAAkBlF,KAAKkF,iBACvBE,gBAAiBpF,KAAKoF,gBACtBE,gBAAiBtF,KAAKsF,gBACtBE,iBAAkBxF,KAAKwF,iBACvBkB,eAAgB1G,KAAK0G,eACrBN,MAAOpG,KAAKoG,UAOtB,GAAY,IAARtC,GAAW,CACb,IAAIxR,EAAM0N,KAAK/Q,MAAMmV,SACnB,OACE,kBAAC,IAAMlV,SAAP,KACKkK,GAAMa,SAASC,OAAOb,GAAMY,SAASC,OAAOZ,GAAMW,SAASC,MA2B3D,KA1BD,kBAAC,IAAMhL,SAAP,KACE,kBAACzB,EAAA,EAAD,CAAQO,QAASgS,KAAKiE,gBAAiB9W,MAAO,CAACyG,MAAM,QAAQtD,OAAO,SAAU5C,QAAQ,YAAYF,MAAM,aAAxG,sBAGA,kBAACsI,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAMpC,KACjB8B,QAASqR,KAAK4G,iBACdjU,kBAAgB,qBAChBkU,mBAAiB,4BAEjB,kBAAC9Q,GAAA,EAAD,CAAa1H,GAAG,sBAAsB,2BACtC,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5H,GAAG,4BAAtB,sJAIF,kBAAC0I,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CAAQO,QAASgS,KAAKmE,uBAAwB3W,MAAM,UAAU+S,WAAS,GAAvE,UAGA,kBAAC9S,EAAA,EAAD,CAAQO,QAASgS,KAAKkE,sBAAuB1W,MAAM,UAAU+S,WAAS,GAAtE,YAOR,yBAAKvT,UAAWR,EAAQsa,cACtB,kBAAC7Z,EAAA,EAAD,CAAQC,SAAS,SAASM,MAAM,WAC9B,kBAAC8K,GAAA,EAAD,CAAMhG,MAAOA,EAAOkE,SAAUwJ,KAAKrK,aAAc9H,aAAW,sBAAsB2K,eAAe,YAAYC,UAAU,YAAYsO,UAAQ,GACzI,kBAACrO,GAAA,EAAD,eAAKvL,MAAO,CAACK,MAAM,SAAUmL,MAAM,gBAAmB5F,GAAU,KAChE,kBAAC2F,GAAA,EAAD,eAAKvL,MAAO,CAACK,MAAM,SAAUmL,MAAM,gBAAmB5F,GAAU,KAChE,kBAAC2F,GAAA,EAAD,eAAKvL,MAAO,CAACK,MAAM,SAAUmL,MAAM,gBAAmB5F,GAAU,OAGpE,kBAAC,GAAD,CAAU/F,UAAWR,EAAQwa,SAAU1U,MAAOA,EAAOC,MAAO,GAC1D,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC1D,kBAAClD,EAAA,EAAD,KAAY,uDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC1D,kBAAClD,EAAA,EAAD,KAAayL,GAAMrN,QAErB,kBAAC0E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC1D,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAMyM,iBAErB,kBAACpV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAM0M,UAErB,kBAACrV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,2FAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAM2M,SAErB,kBAACtV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAMjC,SAErB,kBAAC1G,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,oDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAM4M,SAErB,kBAACvV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,sEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAM6M,eAErB,kBAACxV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GAC3D,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,UACKvB,EADL,YACmB8N,GAAM8N,iBAL7B,wBAcJ,kBAAC,GAAD,CAAUla,UAAWR,EAAQwa,SAAU1U,MAAOA,EAAOC,MAAO,GAC1D,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC1D,kBAAClD,EAAA,EAAD,KAAY,uDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAMtN,QAErB,kBAAC0E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAMwM,iBAErB,kBAACpV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAMyM,UAErB,kBAACrV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,2FAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAM0M,SAErB,kBAACtV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAMlC,SAErB,kBAAC1G,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,oDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAM2M,SAErB,kBAACvV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,sEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAM4M,eAErB,kBAACxV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GAC3D,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,UACKvB,EADL,YACmB+N,GAAM6N,iBAL7B,wBAcJ,kBAAC,GAAD,CAAUla,UAAWR,EAAQwa,SAAU1U,MAAOA,EAAOC,MAAO,GAC1D,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC1D,kBAAClD,EAAA,EAAD,KAAY,uDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMvN,QAErB,kBAAC0E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMuM,iBAErB,kBAACpV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMwM,UAErB,kBAACrV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,2FAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMyM,SAErB,kBAACtV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMnC,SAErB,kBAAC1G,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,oDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAM0M,SAErB,kBAACvV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,sEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAM2M,eAErB,kBAACxV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GAC3D,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,UACKvB,EADL,YACmBgO,GAAM4N,iBAL7B,yBAeN,yBAAKla,UAAWR,EAAQ2a,cACtB,kBAACla,EAAA,EAAD,CAAQC,SAAS,SAASM,MAAM,WAC9B,kBAAC8K,GAAA,EAAD,CAAM5K,QAAQ,aAAa0Z,cAAc,KAAK9U,MAAOA,EAAOkE,SAAUwJ,KAAKrK,aAAc9H,aAAW,sBAAsB2K,eAAe,YAAYC,UAAU,aAC7J,kBAACC,GAAA,EAAD,eAAKvL,MAAO,CAACK,MAAM,SAAUmL,MAAM,gBAAmB5F,GAAU,KAChE,kBAAC2F,GAAA,EAAD,eAAKvL,MAAO,CAACK,MAAM,SAAUmL,MAAM,gBAAmB5F,GAAU,KAChE,kBAAC2F,GAAA,EAAD,eAAKvL,MAAO,CAACK,MAAM,SAAUmL,MAAM,gBAAmB5F,GAAU,OAGpE,kBAAC,GAAD,CAAU/F,UAAWR,EAAQwa,SAAU1U,MAAOA,EAAOC,MAAO,GAC1D,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC1D,kBAAClD,EAAA,EAAD,KAAY,uDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAMrN,QAErB,kBAAC0E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAMyM,iBAErB,kBAACpV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAM0M,UAErB,kBAACrV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,2FAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAM2M,SAErB,kBAACtV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAMjC,SAErB,kBAAC1G,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,oDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAM4M,SAErB,kBAACvV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,sEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAayL,GAAM6M,eAErB,kBAACxV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GAC3D,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,UACKvB,EADL,YACmB8N,GAAM8N,iBAL7B,wBAcJ,kBAAC,GAAD,CAAUla,UAAWR,EAAQwa,SAAU1U,MAAOA,EAAOC,MAAO,GAC1D,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC1D,kBAAClD,EAAA,EAAD,KAAY,uDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAMtN,QAErB,kBAAC0E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAMwM,iBAErB,kBAACpV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAMyM,UAErB,kBAACrV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,2FAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAM0M,SAErB,kBAACtV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAMlC,SAErB,kBAAC1G,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,oDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAM2M,SAErB,kBAACvV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,sEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa0L,GAAM4M,eAErB,kBAACxV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GAC3D,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,UACKvB,EADL,YACmB+N,GAAM6N,iBAL7B,wBAcJ,kBAAC,GAAD,CAAUla,UAAWR,EAAQwa,SAAU1U,MAAOA,EAAOC,MAAO,GAC1D,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC1D,kBAAClD,EAAA,EAAD,KAAY,uDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMvN,QAErB,kBAAC0E,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMuM,iBAErB,kBAACpV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,iEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMwM,UAErB,kBAACrV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,2FAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMyM,SAErB,kBAACtV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAMnC,SAErB,kBAAC1G,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,oDAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAM0M,SAErB,kBAACvV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,sEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAa2L,GAAM2M,eAErB,kBAACxV,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GACzD,kBAAClD,EAAA,EAAD,KAAY,uEAEd,kBAAC8C,EAAA,EAAD,CAAMzD,UAAWR,EAAQya,iBAAkBtW,MAAI,EAACC,GAAI,GAAGC,GAAI,GAC3D,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,UACKvB,EADL,YACmBgO,GAAM4N,iBAL7B,2BAmBhB,OACE,kBAAC,IAAMhY,SAAP,KACE,kBAAC+L,GAAA,EAAD,W,GAj2BqB9L,aAu2B7B,SAASqX,GAAMxX,GACb,IAAMxC,EAAUwC,EAAMxC,QACtB,OAA0B,IAAtBwC,EAAM2W,YACD,KAGL,kBAAC,IAAMzW,SAAP,KACE,kBAACwC,GAAA,EAAD,CAAejG,MAAOA,IACtB,kBAACgF,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMqC,UAAW,OAAQnC,MAAI,EAACC,GAAI,IAChC,kBAACjD,EAAA,EAAD,CAAYmF,UAAW,OAAQpF,QAAQ,MAAvC,iBAIF,kBAAC+C,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,2BAEF,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGE,IAC5BlO,SAAU,SAAAnB,GACRrG,EAAMqV,gBAAgBhP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,6BAC6B,MAG/B,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXuU,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNlZ,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGI,IAC5BpO,SAAU,SAAAnB,GACRrG,EAAM2V,gBAAgBtP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,kCACkC,MAGpC,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXuU,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNlZ,GAAG,OACHuD,KAAK,OACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGO,KAC5BvO,SAAU,SAAAnB,GACRrG,EAAM6V,iBAAiBxP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,kEACkE,MAGpE,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXuU,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNlZ,GAAG,SACHuD,KAAK,SACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGS,OAC5BzO,SAAU,SAAAnB,GACRrG,EAAMgW,mBAAmB3P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEnDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wCACwC,MAG1C,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXuU,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNlZ,GAAG,OACHuD,KAAK,OACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGW,KAC5B3O,SAAU,SAAAnB,GACRrG,EAAMkW,iBAAiB7P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wBAEF,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGa,IAC5B7O,SAAU,SAAAnB,GACRrG,EAAMoW,gBAAgB/P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,uCACuC,MAGzC,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGe,IAC5B/O,SAAU,SAAAnB,GACRrG,EAAMsW,gBAAgBjQ,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wCACwC,MAG1C,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXzE,GAAG,OACHuD,KAAK,OACLC,KAAK,OACL2E,SAAU,SAAAnB,GACRrG,EAAMwW,iBAAiBnQ,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACnD,EAAA,EAAD,CACET,UAAWR,EAAQgb,WACnB9Z,QAAQ,YACRoF,UAAW,OACX9E,QAASgB,EAAMqX,YAJjB,SASF,kBAAC5V,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,OAQzB,SAAS6V,GAAMzX,GACb,IAAMxC,EAAUwC,EAAMxC,QACtB,OAA0B,IAAtBwC,EAAM2W,YACD,KAGL,kBAAC,IAAMzW,SAAP,KACE,kBAACwC,GAAA,EAAD,CAAejG,MAAOA,IACtB,kBAACgF,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMqC,UAAW,OAAQnC,MAAI,EAACC,GAAI,IAChC,kBAACjD,EAAA,EAAD,CAAYmF,UAAW,OAAQpF,QAAQ,MAAvC,iBAIF,kBAAC+C,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,2BAEF,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGE,IAC5BlO,SAAU,SAAAnB,GACRrG,EAAMqV,gBAAgBhP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,6BAC6B,MAG/B,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGI,IAC5BpO,SAAU,SAAAnB,GACRrG,EAAM2V,gBAAgBtP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,kCACkC,MAGpC,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,OACHuD,KAAK,OACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGO,KAC5BvO,SAAU,SAAAnB,GACRrG,EAAM6V,iBAAiBxP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,kEACkE,MAGpE,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,SACHuD,KAAK,SACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGS,OAC5BzO,SAAU,SAAAnB,GACRrG,EAAMgW,mBAAmB3P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEnDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wCACwC,MAG1C,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,OACHuD,KAAK,OACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGW,KAC5B3O,SAAU,SAAAnB,GACRrG,EAAMkW,iBAAiB7P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wBAEF,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGa,IAC5B7O,SAAU,SAAAnB,GACRrG,EAAMoW,gBAAgB/P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,uCACuC,MAGzC,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGe,IAC5B/O,SAAU,SAAAnB,GACRrG,EAAMsW,gBAAgBjQ,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wCACwC,MAG1C,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXzE,GAAG,OACHuD,KAAK,OACLC,KAAK,OACL2E,SAAU,SAAAnB,GACRrG,EAAMwW,iBAAiBnQ,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACnD,EAAA,EAAD,CACET,UAAWR,EAAQgb,WACnB9Z,QAAQ,YACRoF,UAAW,OACX9E,QAASgB,EAAMoX,OAJjB,aASF,kBAAC3V,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACnD,EAAA,EAAD,CACET,UAAWR,EAAQgb,WACnB9Z,QAAQ,YACRoF,UAAW,OACX9E,QAASgB,EAAMqX,YAJjB,SAcF,kBAAC5V,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,OAQzB,SAAS+V,GAAM3X,GACb,IAAMxC,EAAUwC,EAAMxC,QACtB,OAA0B,IAAtBwC,EAAM2W,YACD,KAGL,kBAAC,IAAMzW,SAAP,KACE,kBAACwC,GAAA,EAAD,CAAejG,MAAOA,IACtB,kBAACgF,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMqC,UAAW,OAAQnC,MAAI,EAACC,GAAI,IAChC,kBAACjD,EAAA,EAAD,CAAYmF,UAAW,OAAQpF,QAAQ,MAAvC,iBAIF,kBAAC+C,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,2BAEF,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGE,IAC5BlO,SAAU,SAAAnB,GACRrG,EAAMqV,gBAAgBhP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,6BAC6B,MAG/B,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGI,IAC5BpO,SAAU,SAAAnB,GACRrG,EAAM2V,gBAAgBtP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,kCACkC,MAGpC,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,OACHuD,KAAK,OACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGO,KAC5BvO,SAAU,SAAAnB,GACRrG,EAAM6V,iBAAiBxP,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,kEACkE,MAGpE,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,SACHuD,KAAK,SACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGS,OAC5BzO,SAAU,SAAAnB,GACRrG,EAAMgW,mBAAmB3P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEnDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wCACwC,MAG1C,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,OACHuD,KAAK,OACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGW,KAC5B3O,SAAU,SAAAnB,GACRrG,EAAMkW,iBAAiB7P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wBAEF,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGa,IAC5B7O,SAAU,SAAAnB,GACRrG,EAAMoW,gBAAgB/P,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,uCACuC,MAGzC,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACR2Z,WAAS,EACTC,WAAY,CAACna,MAAO,CAACgB,SAAU,KAC/BoZ,KAAM,EACNzU,UAAW,OACXzE,GAAG,MACHuD,KAAK,MACLC,KAAK,OACLS,MAAOtD,EAAMwV,YAAY,GAAGe,IAC5B/O,SAAU,SAAAnB,GACRrG,EAAMsW,gBAAgBjQ,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEhDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAMzD,UAAWR,EAAQ2E,WAAYR,MAAI,EAACC,GAAI,GAAGC,GAAI,GACnD,kBAAClD,EAAA,EAAD,CAAYmF,UAAW,QAAvB,wCACwC,MAG1C,kBAACrC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAGC,GAAI,GACpB,kBAACgK,EAAA,EAAD,CACE7N,UAAWR,EAAQqO,UACnBnN,QAAQ,WACRoF,UAAW,OACXzE,GAAG,OACHuD,KAAK,OACLC,KAAK,OACL2E,SAAU,SAAAnB,GACRrG,EAAMwW,iBAAiBnQ,EAAGrG,EAAMwV,YAAY,GAAG8B,SAEjDjQ,UAAQ,KAGZ,kBAAC5F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACnD,EAAA,EAAD,CACET,UAAWR,EAAQgb,WACnB9Z,QAAQ,YACRoF,UAAW,OACX9E,QAASgB,EAAMoX,OAJjB,aASF,kBAAC3V,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACnD,EAAA,EAAD,CACET,UAAWR,EAAQgb,WACnB9Z,QAAQ,YACRoF,UAAW,OACXjB,KAAK,SACL7D,QAAS,SAAAqH,GACPrG,EAAM0W,YAAYrQ,EAAGrG,EAAM2W,eAN/B,UAWA,kBAAC9E,GAAA,EAAD,CACEhU,KAAMmC,EAAM+P,YACZ+B,iBAAkB,IAClBnS,QAASK,EAAMjC,aAEf,kBAAC,GAAD,CAAO4B,QAASK,EAAMjC,YAAagU,SAAS,WAA5C,uCAIF,kBAACF,GAAA,EAAD,CACEhU,KAAMmC,EAAMgQ,YACZ8B,iBAAkB,IAClBnS,QAASK,EAAMjC,aAEf,kBAAC,GAAD,CAAO4B,QAASK,EAAMjC,YAAagU,SAAS,SAA5C,4CAKJ,kBAACtQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,OAQVqQ,qBAxkDG,SAAAxV,GAAK,MAAK,CAC1B+b,WAAY,CACVnY,QAAS,OACTlB,SAAU,OACVX,MAAO,OACPuC,WAAY,SACZ3C,gBAAiB,UACjBmC,aAAc,QAEhBsL,UAAW,CACTzL,MAAO,QAET+B,WAAW,CACThD,SAAS,OACT/B,QAAQ,OACRJ,UAAU,QAEZib,iBAAiB,CACflX,WAAW,MACX5B,SAAS,OACT/B,QAAQ,OACRJ,UAAU,QAEZgb,SAAS,CACPS,UAAU,iBACVrY,MAAM,QAER0X,aAAa,eACVrb,EAAMS,YAAYI,KAAK,OAAS,CAC/BF,QAAQ,SAGZ+a,aAAa,eACV1b,EAAMS,YAAYC,GAAG,OAAS,CAC7BC,QAAQ,YAsiDC6U,CAAsB+C,I,sECllDjC/K,GAAU,KACVM,GAAY,KACZ9N,GAAQyF,eACZzF,GAAQmY,aAAoBnY,IAE5B,IAAMF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCic,eAAgB,CACdpW,UAAW,OACX/B,aAAc,QAEhBoY,MAAO,CACLtW,SAAU,SAIVuW,IAAQ,EACRC,IAAO,EACP7O,GAAQ,KA+NG8O,GA7NS,SAAC9Y,GAErBgK,GAAMhK,EAAMgK,MACZO,GAAUvK,EAAMuK,UAChBN,GAAQjK,EAAMiK,QACd,IAEMzM,EAAUjB,KA0ElB,GAzE8B,IAAzByN,GAAMc,UAAUC,SACjB6N,IAAM,IAERC,IANe,IA4ELD,GAAO,CACjB,IAAInD,EAAI,EADS,EAEgCzL,GAAzClH,EAFS,EAETA,WAAYF,EAFH,EAEGA,KAAMsH,EAFT,EAESA,QAASY,EAFlB,EAEkBA,UACnC,OACE,kBAAC,IAAM5K,SAAP,KACE,kBAACwC,GAAA,EAAD,CAAejG,MAAOA,IACpB,kBAACkC,EAAA,EAAD,CAAYD,QAAQ,MAApB,iBACA,kBAACqa,GAAA,EAAD,CACE5a,MAAO,CAAEC,gBAAiB,WAC1BJ,UAAWR,EAAQkb,eACnB5U,UAAWkV,MAEX,kBAACC,GAAA,EAAD,CACEjb,UAAWR,EAAQmb,MACnB7M,KAAK,QACLjN,aAAW,iBAEX,kBAACqa,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,aACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,gBAGJ,kBAACC,GAAA,EAAD,KACGpP,EAAQ5D,KAAI,SAAAkF,GAAM,OACjB,kBAAC2N,GAAA,EAAD,CAAU9N,IAAKG,EAAO+N,KACpB,kBAACH,GAAA,EAAD,CAAWC,MAAM,UAAU7N,EAAO5I,MAClC,kBAACwW,GAAA,EAAD,CAAWC,MAAM,UAAU7N,EAAOE,QAClC,kBAAC0N,GAAA,EAAD,CAAWC,MAAM,UAAU7N,EAAOzI,OAClC,kBAACqW,GAAA,EAAD,CAAWC,MAAM,UAAUzW,GAC3B,kBAACwW,GAAA,EAAD,CAAWC,MAAM,UAAUvW,UAMrC,kBAACnE,EAAA,EAAD,CAAYR,MAAO,CAAEmE,UAAW,QAAU5D,QAAQ,MAAlD,mBAGA,kBAACqa,GAAA,EAAD,CACE5a,MAAO,CAAEC,gBAAiB,WAC1BJ,UAAWR,EAAQkb,eACnB5U,UAAWkV,MAEX,kBAACC,GAAA,EAAD,CACEjb,UAAWR,EAAQmb,MACnB7M,KAAK,QACLjN,aAAW,iBAEX,kBAACqa,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,kBACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,wBAGJ,kBAACC,GAAA,EAAD,KACGxO,EAAUxE,KAAI,SAAAkT,GAAQ,OACrB,kBAACL,GAAA,EAAD,CAAU9N,IAAKmO,EAASzc,OACtB,kBAACqc,GAAA,EAAD,CAAWC,MAAM,UAAU5D,KAC3B,kBAAC2D,GAAA,EAAD,CAAWC,MAAM,UAAUG,EAASzc,OACpC,kBAACqc,GAAA,EAAD,CAAWC,MAAM,UACdG,EAASvO,SAASC,MAAQ,WAAa,gBAE1C,kBAACkO,GAAA,EAAD,CAAWC,MAAM,UACdG,EAASvO,SAASE,IAAM,WAAa,uBAzI1D,SAAsBL,GACpB,IAAI2O,GAAW,EACXC,EAAY,GAShB,OARA5O,EAAUxE,KAAI,SAAAkT,GAKZ,OAJIA,EAASvO,SAASC,OAASsO,EAASvO,SAASE,MAC/CsO,GAAW,EACXC,EAAYF,EAASzc,OAEhB,QAGL0c,EACExP,IAAWM,GAEX,kBAAC,IAAMrK,SAAP,KACE,kBAACvB,EAAA,EAAD,CAAYR,MAAO,CAACyG,MAAM,OAAOzF,SAAS,QAAUX,MAAM,UAAUE,QAAQ,MAC1E,gDADF,iCAGA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEmD,OAAQ,SAASsD,MAAM,OAAOzF,SAAS,QAAUT,QAAQ,MAC5E,8CADF,oBACyC,2BAAIgb,GAD7C,oDAOF,kBAAC,IAAMxZ,SAAP,KACE,kBAACvB,EAAA,EAAD,CAAYR,MAAO,CAACyG,MAAM,OAAOzF,SAAS,QAASX,MAAM,YAAYE,QAAQ,MAC3E,gDADF,8BAGA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAACyG,MAAM,OAAQtD,OAAQ,SAASnC,SAAS,QAAUT,QAAQ,MAC5E,8CADF,oBACyC,2BAAIgb,GAD7C,oDAOFzP,IAAWM,GAEX,kBAAC,IAAMrK,SAAP,KACE,kBAACvB,EAAA,EAAD,CAAYR,MAAO,CAACyG,MAAM,OAAOzF,SAAS,QAASX,MAAM,UAAUE,QAAQ,MACzE,gDADF,iCAGA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEmD,OAAQ,SAASsD,MAAM,OAAOzF,SAAS,QAAWT,QAAQ,MAC7E,8CADF,wEAOF,kBAAC,IAAMwB,SAAP,KACE,kBAACvB,EAAA,EAAD,CAAYH,MAAM,YAAYE,QAAQ,MAAtC,2BAGA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEmD,OAAQ,UAAY5C,QAAQ,MAAjD,qEA2FDib,CAAa7O,KAKtB,GAAI+N,KAASD,GAAO,CAAC,IAAD,EAC+B5O,GAAzClH,EADU,EACVA,WAAYF,EADF,EACEA,KAAMsH,EADR,EACQA,QAASY,EADjB,EACiBA,UACnC,OACE,kBAAC,IAAM5K,SAAP,KACE,kBAACwC,GAAA,EAAD,CAAejG,MAAOA,IACpB,kBAACkC,EAAA,EAAD,CAAYD,QAAQ,MAApB,iBACA,kBAACqa,GAAA,EAAD,CACE5a,MAAO,CAAEC,gBAAiB,WAC1BJ,UAAWR,EAAQkb,eACnB5U,UAAWkV,MAEX,kBAACC,GAAA,EAAD,CACEjb,UAAWR,EAAQmb,MACnB7M,KAAK,QACLjN,aAAW,iBAEX,kBAACqa,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,aACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,gBAGJ,kBAACC,GAAA,EAAD,KACGpP,EAAQ5D,KAAI,SAAAkF,GAAM,OACjB,kBAAC2N,GAAA,EAAD,CAAU9N,IAAKG,EAAO+N,KACpB,kBAACH,GAAA,EAAD,CAAWC,MAAM,UAAU7N,EAAO5I,MAClC,kBAACwW,GAAA,EAAD,CAAWC,MAAM,UAAU7N,EAAOE,QAClC,kBAAC0N,GAAA,EAAD,CAAWC,MAAM,UAAU7N,EAAOzI,OAClC,kBAACqW,GAAA,EAAD,CAAWC,MAAM,UAAUzW,GAC3B,kBAACwW,GAAA,EAAD,CAAWC,MAAM,UAAUvW,UAMf,IAArBgI,EAAUC,OACT,kBAACpM,EAAA,EAAD,CAAYR,MAAO,CAAEoC,aAAc,QAAU7B,QAAQ,MACnD,iEADF,WACwDuL,IAEtD,KAIJ,kBAACtL,EAAA,EAAD,CAAYH,MAAM,QAAQL,MAAO,CAACyG,MAAM,OAAOzF,SAAS,QAAUT,QAAQ,MAA1E,yCAEa,6BACb,kBAACC,EAAA,EAAD,CAAYH,MAAM,QAAQL,MAAO,CAAEoC,aAAc,OAAOqE,MAAM,OAAOzF,SAAS,QAAUT,QAAQ,MAAhG,yDACwD,gCAMhE,OAAO,kBAACuN,GAAA,EAAD,OC1PH1P,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmd,KAAK,CACD5c,UAAU,YAIdgN,GAAQ,KAmDG6P,GAjDY,SAAC7Z,GACxBgK,GAAQhK,EAAMgK,MACd,IAAMxM,EAAUjB,KAGhB,GAAa,OAAVyN,GACC,OACI,yBAAK7L,MAAO,CAAEmD,OAAQ,SAClB,kBAAC2K,GAAA,EAAD,OAGN,IACK6N,EAAY9P,GAAZ8P,SACP,OAAuB,IAApBA,EAAS/O,OAEJ,kBAAC,IAAM7K,SAAP,KACI,kBAACvB,EAAA,EAAD,CAAYD,QAAQ,MAApB,gCAKRob,EAASxT,KAAI,SAAAyT,GACT,IAAIC,EAAK,IAAIhY,KAAK+X,EAAQE,MAC1B,OACI,kBAAC,IAAM/Z,SAAP,CAAgBmL,IAAK0O,EAAQR,KACzB,kBAACP,GAAA,EAAD,CAAO7a,MAAO,CAACC,gBAAgB,YAC3B,kBAACqD,EAAA,EAAD,CAAMtD,MAAO,CAACmD,OAAO,aAAcI,WAAS,EAAC5E,QAAS,GAClD,kBAAC2E,EAAA,EAAD,CAAMzD,UAAWR,EAAQoc,KAAMjY,MAAI,EAACC,GAAI,GAAIC,GAAI,GAC5C,kBAAClD,EAAA,EAAD,KAAY,qCAAZ,MAA6Bob,EAAQG,SAEzC,kBAACzY,EAAA,EAAD,CAAMzD,UAAWR,EAAQoc,KAAMjY,MAAI,EAACC,GAAI,EAAGC,GAAI,GAC3C,kBAAClD,EAAA,EAAD,KAAY,mCAAZ,MAA2Bqb,EAAGnS,UAA9B,IAA0CmS,EAAGpS,WAAW,EAAxD,IAA4DoS,EAAG/X,gBAEnE,kBAACR,EAAA,EAAD,CAAMzD,UAAWR,EAAQoc,KAAMjY,MAAI,EAACC,GAAI,EAAGC,GAAI,GAC3C,kBAAClD,EAAA,EAAD,KAAY,mCAAZ,MAA2Bqb,EAAGG,WAA9B,IAA2CH,EAAGI,eAGlD,kBAAC3Y,EAAA,EAAD,CAAMzD,UAAWR,EAAQoc,KAAMjY,MAAI,EAACC,GAAI,IACpC,kBAACjD,EAAA,EAAD,KAAY,sCAAZ,MAA8Bob,EAAQzV,cC9CtE7H,GAAQyF,eACZzF,GAAQmY,aAAoBnY,IAC5B,IAAMF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCic,eAAgB,CACZpW,UAAW,OACX/B,aAAc,QAEhBoY,MAAO,CACLtW,SAAU,SAIZgY,GAAK,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YACpErQ,GAAM,KACNsQ,GAAgB,KA0FLC,GAxFa,SAACva,GACzB,IAAMxC,EAAUjB,KAIhB,OAHAyN,GAAMhK,EAAMgK,OACZsQ,GAActQ,GAAMwQ,cACNC,MAAK,SAACrL,EAAEsL,GAAH,OAAQ,IAAI1Y,KAAKoN,EAAEuL,gBAAgBC,UAAU,IAAI5Y,KAAK0Y,EAAEC,gBAAgBC,UAAW,GAAG,KAC9F,OAAR5Q,GAEK,kBAAC,IAAM9J,SAAP,KACI,kBAAC+L,GAAA,EAAD,OAIkB,IAAvBqO,GAAcvP,OAET,kBAAC,IAAM7K,SAAP,KACI,kBAACwC,GAAA,EAAD,CAAejG,MAAOA,IAClB,kBAACkC,EAAA,EAAD,CAAYD,QAAQ,MAApB,wBACA,kBAACqa,GAAA,EAAD,CACI5a,MAAO,CAAEC,gBAAiB,WAC1BJ,UAAWR,EAAQkb,eACnB5U,UAAWkV,MAEX,kBAACC,GAAA,EAAD,CACAjb,UAAWR,EAAQmb,MACnB7M,KAAK,QACLjN,aAAW,iBAEP,kBAACqa,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWC,MAAM,UAAjB,OACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,OACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,WAGJ,kBAACC,GAAA,EAAD,KACKgB,GAAchU,KAAI,SAACuU,EAAatX,GAAd,OACnB,kBAAC4V,GAAA,EAAD,CAAU9N,IAAKwP,EAAatB,KACxB,kBAACH,GAAA,EAAD,CAAWC,MAAM,UAAU9V,EAAM,GACjC,kBAAC6V,GAAA,EAAD,CAAWC,MAAM,UAAU,IAAIrX,KAAK6Y,EAAaF,gBAAgB9S,UAAjE,IAA6E,IAAI7F,KAAK6Y,EAAaF,gBAAgB/S,WAAW,EAA9H,IAAkI,IAAI5F,KAAK6Y,EAAaF,gBAAgB1Y,eACxK,kBAACmX,GAAA,EAAD,CAAWC,MAAM,UAAUgB,GAAK,IAAIrY,KAAK6Y,EAAaF,gBAAgBG,WACpE,IAAI9Y,KAAK6Y,EAAaF,gBAAgBR,WAAW,GAC/C,kBAACf,GAAA,EAAD,CAAWC,MAAM,UACZ,IAAIrX,KAAK6Y,EAAaF,gBAAgBR,WAAW,GADtD,IAC2D,IAAInY,KAAK6Y,EAAaF,gBAAgBP,aADjG,OAIA,kBAAChB,GAAA,EAAD,CAAWC,MAAM,UACZ,IAAIrX,KAAK6Y,EAAaF,gBAAgBR,WAD3C,IACwD,IAAInY,KAAK6Y,EAAaF,gBAAgBP,aAD9F,OAImB,OAArBS,EAAaE,MACX,kBAAC,IAAM7a,SAAP,KACK,IAAI8B,KAAK6Y,EAAaF,gBAAgBC,UAAU5Y,KAAKgZ,MAClD,kBAAC5B,GAAA,EAAD,CAAWC,MAAM,UAAjB,8BAIA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UACb,kBAAC1a,EAAA,EAAD,CAAYR,MAAO,CAACgB,SAAS,MAAOX,MAAM,aAA1C,0BAOZ,kBAAC4a,GAAA,EAAD,CAAWC,MAAM,UACZwB,EAAaE,gBAa9C,kBAACpc,EAAA,EAAD,0FC9EZ6D,GAAW,GACXyH,GAAU,KACVM,GAAY,KAEZ9N,GAAQyF,eAGZ,SAASkB,GAASpD,GAAQ,IAChBqD,EAAqCrD,EAArCqD,SAAUC,EAA2BtD,EAA3BsD,MAAOC,EAAoBvD,EAApBuD,MAAUC,EADZ,aACsBxD,EADtB,8BAGvB,OACE,uCACEyD,KAAK,WACLC,OAAQJ,IAAUC,EAClBlE,GAAE,4BAAuBkE,GACzBI,kBAAA,uBAAiCJ,IAC7BC,GAEHF,IAAUC,GACT,kBAAC0Q,GAAA,EAAD,KACE,kBAACrQ,GAAA,EAAD,KACE,kBAACjF,EAAA,EAAD,CAAYmF,UAAW,QAAST,MAc5C,SAASU,GAAUR,GACjB,MAAO,CACLlE,GAAG,gBAAD,OAAkBkE,GACpB,gBAAgB,qBAAhB,OAAsCA,IAjC1C9G,GAAQmY,aAAoBnY,IAqC5B,IAAMF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,EACVyB,gBAAiB3B,EAAM4H,QAAQkQ,WAAWlC,MAC1CjV,QAAS,OACTkP,SAAU,OACVhK,UAAW,MACX6P,UAAW,QAKb/O,SAAU,CAERhG,QAAS,SAGX6d,cAAe,CACbC,YAAY,aAAD,OAAeze,EAAM4H,QAAQ8W,UAE1CC,aAAc,CACZC,aAAa,aAAD,OAAe5e,EAAM4H,QAAQ8W,UAE3CG,eAAe,aACblb,MAAO,MACPkB,OAAQ,QACP7E,EAAMS,YAAYI,KAAK,OAAS,CAC/BF,QAAS,SAGbme,eAAe,aACbnb,MAAO,MACPkB,OAAQ,QACP7E,EAAMS,YAAYC,GAAG,OAAS,CAC7BC,QAAS,aAKX4M,GAAM,KA2KKwR,GAzKU,SAAAxb,GACvBwC,GAAWxC,EAAMwC,SADe,MAED/E,IAAMC,UAAS,GAFd,mBAEzB+d,EAFyB,KAEhBC,EAFgB,OAGOje,IAAMC,SAAS,IAHtB,mBAGzB+E,EAHyB,KAGZkZ,EAHY,OAIHle,IAAMC,UAAS,GAJZ,mBAIzBke,EAJyB,KAIjBC,EAJiB,KAgChC,IAAMre,EAAUjB,KAhCgB,EAiCNkB,IAAMC,SAAS,GAjCT,mBAiCzB4F,EAjCyB,KAiClBgC,EAjCkB,KAmC1BqB,EAAe,SAAC1H,EAAOsK,GAC3BjE,EAASiE,IAKX,OAHc,IAAXkS,IAA8B,IAAVG,IA7BrBC,GAAW,GACX3T,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,SAClBgM,iBAAiB,EACjBI,QAAQ,CACN+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJkB,GAAQlB,EAAIP,KACZmT,GAAY,GACZzR,GAAUD,GAAMjF,QAAQsE,MAAM,KAAK,GACP,IAAzBW,GAAMc,UAAUC,SACjBR,GAAYP,GAAMc,UAAU,GAAGE,QAAQ3B,MAAM,KAAK,IAEpDsS,EAAgB3R,GAAM8R,aAEvB5S,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,QAaJ,IAAXsS,EAGC,kBAAC,IAAMvb,SAAP,KACE,kBAAC,GAAD,CAASuC,aAAcA,EAAcD,SAAUA,KAC/C,yBACErE,MAAO,CACLyC,UAAW,6DAEb5C,UAAWR,EAAQ+d,gBAEnB,kBAAC9Z,EAAA,EAAD,CAAMC,WAAS,EAAC1D,UAAWR,EAAQd,MACjC,kBAACgG,GAAA,EAAD,CAAejG,MAAOA,IACpB,kBAACgF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI5D,UAAWR,EAAQ4d,cACpC,kBAAC9R,GAAA,EAAD,CACEyS,YAAY,aACZrd,QAAQ,aACR4E,MAAOA,EACPkE,SAAUb,EACV9H,aAAW,kBAEXuZ,cAAc,KACd5O,eAAe,UACfC,UAAU,WAEV,kBAACC,GAAA,EAAD,eAAK1L,UAAWR,EAAQwe,IAAKrS,MAAM,QAAW5F,GAAU,KACxD,kBAAC2F,GAAA,EAAD,eACE1L,UAAWR,EAAQwe,IACnBrS,MAAM,eACF5F,GAAU,KAEhB,kBAAC2F,GAAA,EAAD,eACE1L,UAAWR,EAAQwe,IACnBrS,MAAM,YACF5F,GAAU,KAEhB,kBAAC2F,GAAA,EAAD,eACE1L,UAAWR,EAAQwe,IACnBrS,MAAM,iBACF5F,GAAU,QAMtB,kBAACtC,EAAA,EAAD,CAAMzD,UAAWR,EAAQ4F,SAAUzB,MAAI,EAACC,GAAI,IAC1C,kBAAC,GAAD,CAAU0B,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,GAAD,CAAiByG,MAAOA,GAAOC,QAASA,GAASM,UAAWA,MAE9D,kBAAC,GAAD,CAAUjH,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAUD,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,GAAD,CAAoByG,MAAOA,MAE7B,kBAAC,GAAD,CAAU1G,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,GAAD,CAAqByG,MAAOA,SAMpC,yBACE7L,MAAO,CACLyC,UAAW,6DAEb5C,UAAWR,EAAQ8d,gBAEnB,kBAAC7Z,EAAA,EAAD,CAAMtD,MAAO,CAAEmE,UAAW,OAASZ,WAAS,EAAC1D,UAAWR,EAAQd,MAC9D,kBAACgG,GAAA,EAAD,CAAejG,MAAOA,IACpB,kBAACgF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG5D,UAAWR,EAAQyd,eACnC,kBAAC3R,GAAA,EAAD,CACEyS,YAAY,WACZzY,MAAOA,EACP5E,QAAQ,YACR8I,SAAUb,EACV9H,aAAW,gBACX2K,eAAe,UACfC,UAAU,WAEV,kBAACC,GAAA,EAAD,eAAK1L,UAAWR,EAAQwe,IAAKrS,MAAM,QAAW5F,GAAU,KACxD,kBAAC2F,GAAA,EAAD,eACE1L,UAAWR,EAAQwe,IACnBrS,MAAM,eACF5F,GAAU,KAEhB,kBAAC2F,GAAA,EAAD,eACE1L,UAAWR,EAAQwe,IACnBrS,MAAM,YACF5F,GAAU,KAEhB,kBAAC2F,GAAA,EAAD,eACE1L,UAAWR,EAAQwe,IACnBrS,MAAM,iBACF5F,GAAU,QAKtB,kBAACtC,EAAA,EAAD,CAAMzD,UAAWR,EAAQ4F,SAAUzB,MAAI,EAACC,GAAI,GAC1C,kBAAC,GAAD,CAAU0B,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,GAAD,CAAiByG,MAAOA,GAAOC,QAASA,GAASM,UAAWA,MAE9D,kBAAC,GAAD,CAAUjH,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAUD,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,GAAD,CAAoByG,MAAOA,MAE7B,kBAAC,GAAD,CAAU1G,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,GAAD,CAAqByG,MAAOA,SAMpC,gCACE,kBAAC,EAAD,QAMJ,kBAACiC,GAAA,EAAD,OCnQe0G,G,kDACnB,WAAY3S,GAAQ,IAAD,uBACjB,gBAYF4S,QAAU,WAER1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GAEJ,EAAKkF,SAAS,CACZ6E,UAAU,EACVC,KAAMhK,EAAIP,UAGbW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAE8E,KAAM,YACtBnK,aAAaoK,WAAW,SACxBpK,aAAaoK,WAAW,oBA/B5B,IACIF,GAAW,EAHE,MAIH,YAFAlK,aAAaC,QAAQ,WAGjCiK,GAAW,GAEb,EAAK5S,MAAQ,CACX4S,WACAC,KAAM,IATS,E,qDAsCjB,MAAwB,KAApB9B,KAAK/Q,MAAM6S,MACb9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,OAC2B,YAAzByD,KAAK/Q,MAAM6S,KAAKjQ,KAEvB,6BACE,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAkBL,SAAUwO,KAAK/Q,MAAM6S,QAIpC,kBAAC,IAAD,CAAUxU,GAAG,U,GAlDS6B,a,UCUnC,SAAS8O,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAGtD,IAuCMic,G,kDACJ,WAAYjc,GAAQ,IAAD,8BACjB,cAAMA,IAWRkc,YAAc,SAAAjd,GACZ,EAAK+O,SAAS,CAAEmO,KAAMld,EAAM6C,OAAOwB,SAblB,EAenB8Y,YAAc,SAAAnd,GACZ,EAAK+O,SAAS,CAAEpL,KAAM3D,EAAM6C,OAAOwB,SAhBlB,EAkBnB+Y,YAAc,SAAApd,GACZ,EAAK+O,SAAS,CAAEsO,KAAMrd,EAAM6C,OAAOwB,SAnBlB,EAsBnB4M,cAAgB,SAAAjR,GACdA,EAAMkR,iBADiB,MAEK,EAAKlQ,MAA1B2C,EAFgB,EAEhBA,KAAMuZ,EAFU,EAEVA,KAAMG,EAFI,EAEJA,KAEnBpU,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,QAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjB7F,KAAOA,EACPG,MAAOoZ,EACPrZ,WAAYwZ,IAEd5T,QAAS,CACP,eAAgB,kDAChB+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAA8K,GACJ,EAAK3F,SAAS,CAAC+B,aAAY,OAG5B7G,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAACgC,aAAY,QA3C/B,EAAK/P,MAAQ,CACX8P,aAAc,EACdC,aAAc,EACdpN,KAAK,GACLuZ,KAAM,GACNG,KAAM,oBARS,E,qDAkDT,IAAD,OAEC9e,EAAYwT,KAAKhR,MAAjBxC,QACFO,EAAc,SAACkB,EAAO6Q,GACX,cAAXA,GAGJ,EAAK9B,SAAS,CAACgC,aAAY,EAAMD,aAAY,KAG/C,OACE,6BACE,kBAAC,EAAD,MACA,kBAACkE,GAAA,EAAD,CAAWnQ,UAAU,OAAOwI,SAAS,MACnC,kBAAC4H,GAAA,EAAD,MACA,yBACElW,UAAWR,EAAQ6U,MACnBlU,MAAO,CACLyC,UACE,4DACFxC,gBAAiB,OACjByC,aAAc,QAIhB,0BACE7C,UAAWR,EAAQ+U,KACnBpB,SAAUH,KAAKd,cACfqM,YAAU,GAEV,kBAAC5d,EAAA,EAAD,CAAYD,QAAQ,KAAKP,MAAO,CAAEmE,UAAU,OAAO/B,aAAa,SAAhE,gBAGA,kBAACsL,EAAA,EAAD,CACEnN,QAAQ,WACR4C,OAAO,SACP+F,UAAQ,EACRgN,WAAS,EACThV,GAAG,QACHsK,MAAM,aACNrG,MAAO0N,KAAK/Q,MAAM2C,KAClB4E,SAAUwJ,KAAKoL,YACf7K,WAAS,IACX,kBAAC1F,EAAA,EAAD,CACEnN,QAAQ,WACR4C,OAAO,SACP+F,UAAQ,EACRgN,WAAS,EACThV,GAAG,QACHsK,MAAM,cACNrG,MAAO0N,KAAK/Q,MAAMkc,KAClB3U,SAAUwJ,KAAKkL,cAEjB,kBAACM,GAAA,EAAD,CACAxe,UAAaR,EAAQif,WADrB,sBAEA,kBAAChL,GAAA,EAAD,CACEnO,MAAO0N,KAAK/Q,MAAMqc,KAClB9U,SAAUwJ,KAAKqL,YACf1S,MAAM,aACN0K,WAAS,GAET,kBAACzU,EAAA,EAAD,CAAU0D,MAAM,oBAAhB,oBACA,kBAAC1D,EAAA,EAAD,CAAU0D,MAAM,0BAAhB,0BACA,kBAAC1D,EAAA,EAAD,CAAU0D,MAAM,qCAAhB,qCACA,kBAAC1D,EAAA,EAAD,CAAU0D,MAAM,eAAhB,gBAGF,kBAAC7E,EAAA,EAAD,CACEoE,KAAK,SACLwR,WAAS,EACT3V,QAAQ,YACRF,MAAM,UACNR,UAAWR,EAAQoU,OACnBzT,MAAO,CACLkC,QAAS,OACTlB,SAAU,OACV4B,WAAY,SACZ3C,gBAAiB,UACjBmC,aAAc,SAXlB,WAiBF,kBAACsR,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAM8P,YAAa+B,iBAAkB,IAAMnS,QAAS5B,GACvE,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,WAAtC,yCAIF,kBAACF,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAM+P,YAAa8B,iBAAkB,IAAMnS,QAAS5B,GACvE,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,SAAtC,kG,GA7IY5R,aAyJX8R,iBAhMG,SAAAxV,GAAK,YAAK,CAC1B4V,OAAK,GACH/P,UAAW7F,EAAMK,QAAQ,GACzBM,QAAS,OACT8U,cAAe,UAHZ,cAIFzV,EAAMS,YAAYC,GAAG,MAAQ,CAC5BiD,MAAO,SALN,uBAOK,QAPL,2BAQS,UART,GAWLmS,KAAM,CACJnS,MAAO,MACPkC,UAAW7F,EAAMK,QAAQ,IAG3B8U,OAAQ,CACNtQ,OAAQ7E,EAAMK,QAAQ,EAAG,EAAG,IAE9B0V,OAAQ,CACNpU,gBAAiB,QAEnBsT,MAAO,CACLe,OAAQ,oBACRpS,QAAS,UACTD,MAAO,MACPG,aAAc,OACd+B,UAAW,OACXsC,MAAO,QACP/D,aAAc,OAEhB4b,UAAY,CACVna,UAAW,OACX/B,aAAc,OACdqE,MAAQ,WA6JGqN,CAAsBgK,IChNhBS,G,kDACnB,WAAY1c,GAAQ,IAAD,8BACjB,cAAMA,IAMR4S,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CAAE8E,KAAMhK,EAAIP,UAE3BW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAE8E,KAAM,SACtBnK,aAAaoK,WAAW,aAnB5B,EAAK9S,MAAQ,CACX6S,KAAM,MAHS,E,qDA0BjB,OAAwB,OAApB9B,KAAK/Q,MAAM6S,MACb9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,OAC2B,SAAzByD,KAAK/Q,MAAM6S,KAAKjQ,KAEvB,6BACE,kBAAC,IAAM3C,SAAP,KACE,kBAAC,GAAD,MACA,gCACE,kBAAC,EAAD,SAMD,kBAAC,IAAD,CAAU5B,GAAG,IAAIyV,OAAK,Q,GA1CD5T,aCPrBwc,I,OAAiBC,2BAwDfC,G,4MArDX5c,MAAQ,CACA6c,SAAS,CACL,CAAC/f,MAAM,WAAWggB,YAAW,EAAKhD,QAAQ,GAAG1a,GAAG,GAChD,CAACtC,MAAM,WAAWggB,YAAW,EAAMhD,QAAQ,GAAG1a,GAAG,GACjD,CAACtC,MAAM,WAAWggB,YAAW,EAAMhD,QAAQ,GAAG1a,GAAG,GACjD,CAACtC,MAAM,WAAWggB,YAAW,EAAMhD,QAAQ,GAAG1a,GAAG,GACjD,CAACtC,MAAM,WAAWggB,YAAW,EAAKhD,QAAQ,GAAG1a,GAAG,K,EAG5D2d,QAAU,SAAC3d,GAEP,IADA,IAAIyd,EAAQ,aAAO,EAAK7c,MAAM6c,UACtBrH,EAAE,EAAEA,EAAE,EAAKxV,MAAM6c,SAAS/R,OAAO0K,IACrC,GAAG,EAAKxV,MAAM6c,SAASrH,GAAGpW,KAAKA,EAAG,CAC9B,IAAI4d,EAAO,gBAAOH,EAASrH,KACY,IAApC,EAAKxV,MAAM6c,SAASrH,GAAGsH,WACtB3T,MAAM,qBAEN6T,EAAQF,YAAcE,EAAQF,WAC9BD,EAASrH,GAAGwH,EACZ,EAAKjP,SAAS,CAAC8O,cAK3B9U,QAAQC,IAAI,EAAKhI,Q,EAErBid,WAAa,SAAC7d,EAAG0a,GAGb,IAFA,IAAI+C,EAAQ,aAAO,EAAK7c,MAAM6c,UAEtBrH,EAAE,EAAEA,EAAE,EAAKxV,MAAM6c,SAAS/R,OAAO0K,IACrC,GAAG,EAAKxV,MAAM6c,SAASrH,GAAGpW,KAAKA,EAAG,CAC9B,IAAI4d,EAAO,gBAAOH,EAASrH,KACY,IAApC,EAAKxV,MAAM6c,SAASrH,GAAGsH,WACtB3T,MAAM,qBAEN6T,EAAQlD,QAAUA,EAClB+C,EAASrH,GAAGwH,EACZ,EAAKjP,SAAS,CAAC8O,gB,uDAQ3B,OACI,kBAACH,GAAeQ,SAAhB,CAAyB7Z,MAAK,6BAAM0N,KAAK/Q,OAAX,IAAiB+c,QAAShM,KAAKgM,QAAQE,WAAYlM,KAAKkM,cACjFlM,KAAKhR,MAAMqD,c,GAhDSlD,aCetBid,GAfQ,SAACH,GAKpB,OACQ,kBAAC,IAAD,CAAS3e,GAAI,CAACsN,SAAS,eAAeyR,WAAW,CAACJ,aAC9C,6BACI,2BAAOjf,UAAU,SAAjB,YAAmCif,EAAQA,QAAQlgB,OACnD,2BAAOiB,UAAU,MAAjB,SAA6Bif,EAAQA,QAAQ5d,O,SCwBlDie,I,OA9BK,WAAO,IACjBR,EAAaS,qBAAWZ,IAAxBG,SACR,OAAOA,EAAS/R,OACd,yBAAK/M,UAAU,gBACb,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,iBACA,kBAAC,KAAD,sBAEF,kBAAC,KAAD,KACG8e,EAASxW,KAAI,SAAA2W,GACZ,OAAQA,EAAQF,WACd,kBAAC,GAAD,CAAgBE,QAASA,EAAS5R,IAAK4R,EAAQ5d,KADpB,SAKjC,kBAAC,KAAD,KACGyd,EAASxW,KAAI,SAAA2W,GACZ,OAAQA,EAAQF,WAEZ,KADF,kBAAC,GAAD,CAAgBE,QAASA,EAAS5R,IAAK4R,EAAQ5d,WAOzD,yBAAKrB,UAAU,SAAf,2BCfWwf,GAXQ,SAAAxd,GACrB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,SCHa2S,G,kDACnB,WAAY3S,GAAQ,IAAD,uBACjB,gBAYF4S,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CACZ6E,UAAU,EACVC,KAAMhK,EAAIP,UAGbW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CACZ6E,UAAU,EACVC,KAAM,YAERnK,aAAaoK,WAAW,aA/B5B,IACIF,GAAW,EAHE,MAIH,YAFAlK,aAAaC,QAAQ,WAGjCiK,GAAW,GAEb,EAAK5S,MAAQ,CACX4S,WACAC,KAAM,IATS,E,qDAsCjB,MAAwB,KAApB9B,KAAK/Q,MAAM6S,MACb9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,OAEkB,OAAzByD,KAAK/Q,MAAM6S,KAAKjQ,MACS,QAAzBmO,KAAK/Q,MAAM6S,KAAKjQ,KAGd,6BACE,kBAAC,IAAM3C,SAAP,KACE,kBAAC,GAAD,MACA,gCACE,kBAAC,EAAD,SAMD,kBAAC,IAAD,CAAU5B,GAAG,U,GAzDS6B,a,OCSnC,SAAS8O,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAGtD,IAsCMyd,G,kDACJ,WAAYzd,GAAQ,IAAD,8BACjB,cAAMA,IAYR4S,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CAAE8E,KAAMhK,EAAIP,UAE3BW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAE8E,KAAM,YACtBnK,aAAaoK,WAAW,aA3BX,EA+BnB2K,aAAe,WACbxV,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,kBAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBkV,YAAa,EAAK1d,MAAM0d,YACxBC,gBAAiB,EAAK3d,MAAM2d,kBAE9BlV,QAAS,CACP,eAAgB,kDAChB+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CAAE+B,aAAa,OAE9B7G,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAACgC,aAAc,QAlDhB,EAsDnB6N,mBAAqB,SAAAxX,GACnB,EAAK2H,SAAS,CAAE2P,YAAatX,EAAEvE,OAAOwB,SAvDrB,EAyDnBwa,uBAAyB,SAAAzX,GACvB,EAAK2H,SAAS,CAAE4P,gBAAiBvX,EAAEvE,OAAOwB,SA1DzB,EA6DnBsT,aAAe,SAAAvQ,GACbA,EAAE8J,iBACC,EAAKlQ,MAAM0d,cAAgB,EAAK1d,MAAM2d,gBACvC,EAAK5P,SAAS,CAAC+P,SAAW,6BACnB,EAAK9d,MAAM0d,YAAY5S,OAAS,EACvC,EAAKiD,SAAS,CAAC+P,SAAW,uDAGzB,EAAKL,gBAlER,EAAKzd,MAAQ,CACX6S,KAAM,GACN6K,YAAa,GACbC,gBAAiB,GACjB7N,aAAa,EACbC,aAAa,EACb+N,SAAW,IATI,E,qDAyET,IAAD,OACCvgB,EAAYwT,KAAKhR,MAAjBxC,QACFO,EAAc,SAACkB,EAAO6Q,GACvB,EAAK7P,MAAM8P,aACZ,EAAK/B,SAAS,CAAC+B,aAAa,EAAO+C,KAAM,YACzCnK,aAAaoK,WAAW,UAElB,EAAK9S,MAAM+P,aACjB,EAAKhC,SAAS,CAACgC,aAAc,KAGjC,MAAwB,KAApBgB,KAAK/Q,MAAM6S,MACb9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,OACsB,YAApByD,KAAK/Q,MAAM6S,KACb,kBAAC,IAAD,CAAUxU,GAAG,MAGlB,6BACE,kBAAC,EAAD,MACA,kBAAC2V,GAAA,EAAD,CAAWnQ,UAAU,OAAOwI,SAAS,MACnC,kBAAC4H,GAAA,EAAD,MACA,yBACElW,UAAWR,EAAQ6U,MACnBlU,MAAO,CACLyC,UACE,4DACFxC,gBAAiB,OACjByC,aAAc,QAGhB,kBAACgR,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAM8P,YAAapQ,QAAS5B,GAC/C,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,WAAtC,gFAKF,kBAACF,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAM+P,YAAarQ,QAAS5B,GAC/C,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,SAAtC,8FAIF,0BACE/T,UAAWR,EAAQ+U,KACnBpB,SAAUH,KAAK4F,aACf2F,YAAU,GAEV,kBAAC5d,EAAA,EAAD,CACED,QAAQ,KACRP,MAAO,CAAEmE,UAAW,OAAQ/B,aAAc,SAF5C,mBAMA,kBAACsL,EAAA,EAAD,CACEnN,QAAQ,WACR4C,OAAO,SACPuB,KAAK,WACLwE,UAAQ,EACRgN,WAAS,EACT1K,MAAM,eACNrG,MAAO0N,KAAK/Q,MAAM0d,YAClBnW,SAAUwJ,KAAK6M,mBACftM,WAAS,IAEX,kBAAC1F,EAAA,EAAD,CACEnN,QAAQ,WACRmE,KAAK,WACLvB,OAAO,SACP+F,UAAQ,EACRgN,WAAS,EACT1K,MAAM,mBACNrG,MAAO0N,KAAK/Q,MAAM2d,gBAClBpW,SAAUwJ,KAAK8M,yBAEjB,kBAACnf,EAAA,EAAD,CAAYD,QAAQ,YAAYF,MAAM,SACnCwS,KAAK/Q,MAAM8d,UAEd,kBAACtf,EAAA,EAAD,CACEoE,KAAK,SACLwR,WAAS,EACT3V,QAAQ,YACRF,MAAM,UACNR,UAAWR,EAAQoU,OACnBzT,MAAO,CACLkC,QAAS,OACTlB,SAAU,OACV4B,WAAY,SACZ3C,gBAAiB,UACjBmC,aAAc,SAXlB,2B,GAvJaJ,aAgLd8R,iBAtNG,SAAAxV,GAAK,YAAK,CAC1B4V,OAAK,GACH/P,UAAW7F,EAAMK,QAAQ,GACzBM,QAAS,OACT8U,cAAe,UAHZ,cAIFzV,EAAMS,YAAYC,GAAG,MAAQ,CAC5BiD,MAAO,SALN,uBAOK,QAPL,2BAQS,UART,GAWLmS,KAAM,CACJnS,MAAO,MACPkC,UAAW7F,EAAMK,QAAQ,IAG3B8U,OAAQ,CACNtQ,OAAQ7E,EAAMK,QAAQ,EAAG,EAAG,IAE9B0V,OAAQ,CACNpU,gBAAiB,QAEnBsT,MAAO,CACLe,OAAQ,oBACRpS,QAAS,UACTD,MAAO,MACPG,aAAc,OACd+B,UAAW,OACXsC,MAAO,QACP/D,aAAc,OAEhB4b,UAAW,CACTna,UAAW,OACX/B,aAAc,OACdqE,MAAO,WAmLIqN,CAAsBwL,IChOtBO,GATE,WACb,OACI,kBAAC,IAAM9d,SAAP,KACI,kDACA,6E,wCCEN3D,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCM,MAAO,CACLJ,SAAU,EACVK,UAAW,OACXsE,OAAQ7E,EAAMK,QAAQ,IAExBmhB,WAAY,GACZC,gBAAiB,CACf7d,QAAS,OACTrD,UAAW,cA+BAmhB,GAzBA,WACb,IAAM3gB,EAAUjB,KAEhB,OACE,yBAAKyB,UAAWR,EAAQd,MACtB,kBAACuB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,SAClD,kBAACC,EAAA,EAAD,KAMI,kBAACI,EAAA,EAAD,CAAQN,MAAO,CAACK,MAAM,QAASQ,QAAS,WAAK+J,OAAOqV,QAAQC,QAAU3f,QAAQ,aAC5E,kBAAC,IAAD,OAGJ,kBAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKV,UAAWR,EAAQT,OAA5C,iCC7BJR,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC6hB,MAAO,CACLthB,UAAW,OACX+D,WAAY,UAEdwd,MAAO,CACLC,WAAY,QACZzd,WAAY,aAIV0d,GAAQvc,aAAe,CAC3BC,WAAY,CACVnB,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACA0d,KAAK,QAsHIC,GAlHU,SAAA3e,GACvB,IAAMxC,EAAUjB,KACVud,EAAW9Z,EAAM4e,SACvB,OAAwB,IAApB9E,EAAS/O,QACX/C,QAAQC,IAAI6R,EAAS/O,QAEnB,kBAAC,IAAM7K,SAAP,KACE,kBAACvB,EAAA,EAAD,CAAYD,QAAQ,MAApB,iCAKF,kBAACgE,GAAA,EAAD,CAAejG,MAAOgiB,IACpB,kBAAChd,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,IAC7B,kBAACqW,GAAA,EAAD,CACE7a,MAAO,CACLC,gBAAiB,OACjByC,aAAc,MACdyB,UAAW,OACX/B,aAAc,SAGhB,kBAACyY,GAAA,EAAD,CAAO7a,MAAO,CAAE0C,aAAc,MAC5B,kBAAClC,EAAA,EAAD,CACED,QAAQ,KACRP,MAAO,CAAE4C,WAAY,MAAO/D,UAAW,SAFzC,2BAOD8c,EACE3W,MAAM,GACN0b,UACAvY,KAAI,SAAAyT,GACH,IAAI+E,EAAI,IAAI9c,KAAK+X,EAAQE,MACzB,OACE,kBAAC,IAAM/Z,SAAP,CAAgBmL,IAAK0O,EAAQR,KAC3B,kBAACP,GAAA,EAAD,CAAO7a,MAAO,CAAE0C,aAAc,MAC5B,kBAACY,EAAA,EAAD,CACEC,WAAS,EACTvD,MAAO,CACLmD,OAAQ,OACRgB,UAAW,MACX/B,aAAc,OAEhBzD,QAAS,GAET,kBAAC2E,EAAA,EAAD,CACEzD,UAAWR,EAAQ8gB,MACnB3c,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,GAEJ,kBAAChE,EAAA,EAAD,CACER,MAAO,CACL4C,WAAY,MACZ5B,SAAU,GACV4f,UAAW,UAJf,YAOYhF,EAAQG,SAGtB,kBAACzY,EAAA,EAAD,CAAMzD,UAAWR,EAAQ+gB,MAAO5c,MAAI,EAACC,GAAI,GACvC,kBAACjD,EAAA,EAAD,CACER,MAAO,CACL4C,WAAY,MACZ5B,SAAU,GACV4f,UAAW,SACX/hB,UAAW,SALf,UAQU8hB,EAAEE,WAAWC,OAAO,EAAG,MAGnC,kBAACxd,EAAA,EAAD,CAAMzD,UAAWR,EAAQ+gB,MAAO5c,MAAI,EAACC,GAAI,GACvC,kBAACjD,EAAA,EAAD,CACER,MAAO,CACL4C,WAAY,MACZ5B,SAAU,GACV4f,UAAW,iBACX/hB,UAAW,SALf,UAQU8hB,EAAEE,WAAW7b,MAAM,GAAI,MAGnC,kBAAC1B,EAAA,EAAD,CAAMzD,UAAWR,EAAQ8gB,MAAO3c,MAAI,EAACC,GAAI,IACvC,kBAACjD,EAAA,EAAD,CACER,MAAO,CACL4C,WAAY,MACZ5B,SAAU,GACV4f,UAAW,UAJf,aAOahF,EAAQzV,kBClHjD,SAAS2K,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAGtD,IACImP,GAAK,KACLrK,GAAS,KAwDPoa,G,kDACJ,WAAYlf,GAAQ,IAAD,8BACjB,cAAMA,IAaRmf,eAAiB,SAAA9Y,GACf,IAAI0T,EAAU1T,EAAEvE,OAAOwB,MACvB,EAAK0K,SAAS,CACZ+L,QAASA,KAjBM,EAqBnBhc,YAAc,SAACkB,EAAO6Q,GACL,cAAXA,GAIJ,EAAK9B,SAAS,CACZ+B,aAAa,EACbC,aAAa,EACbC,OAAQ,QA7BO,EA+FnBmP,cAAgB,SAACC,EAAKhgB,GACpB2I,QAAQC,IAAIoX,EAAKhgB,GACjB6I,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,WAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIA,EACJggB,IAAKA,IAEP3W,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAA8K,GACJ3L,QAAQC,IAAI0L,GACZ,EAAK3F,SAAS,CACZiC,OAAQ,KACRc,QAAQ,EACR5B,GAAI,UAIPjG,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OAzHC,EA6HnBxC,aAAe,SAAAC,GAAK,OAAI,SAAC3H,EAAOkG,GAC9B,EAAK6I,SAAS,CACZ7I,WAAUA,GAAWyB,MA5HvB,EAAK3G,MAAQ,CACXkF,SAAU,KACV8K,OAAQ,KACRc,QAjEO,EAkEPgJ,QAAS,GACTN,UAAU,EACV1J,aAAa,EACbC,aAAa,GAVE,E,wDAkCPsP,GAAM,IAAD,OACPvF,EAAY/I,KAAK/Q,MAAjB8Z,QACQ,KAAZA,EACF/I,KAAKhD,SAAS,CACZgC,aAAa,IAGf9H,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,WAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIigB,EACJhM,IAAKyG,IAEPrR,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAA8K,GACJ,EAAK3F,SAAS,CAAE+B,aAAa,EAAMS,SAAS,IAC5CxI,QAAQC,IAAI0L,GACZ,EAAK3F,SAAS,CACZiC,OAAQ,KACR8J,QAAS,QAIZ7Q,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAEgC,aAAa,EAAMQ,SAAS,IAC5CxI,QAAQC,IAAIkB,Q,kCAKP,IAAD,OACVjB,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,wBAClBgM,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJqG,GAAKrG,EAAIP,KAAKwC,OACdjG,GAASgE,EAAIP,KAEb,EAAKyF,SAAS,CACZiC,OAAQ,MACRc,QAAQ,OAGX7H,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,Q,+BAyCR,IAAD,OACCH,EAAagI,KAAKhR,MAAlBgJ,SACAxL,EAAYwT,KAAKhR,MAAjBxC,QACA2H,EAAa6L,KAAK/Q,MAAlBkF,SACF6E,EAAQhB,EAAS/I,MAAM+J,MACvBsV,EAAMtV,EAAM3K,GAMlB,OAH0B,OAAtB2R,KAAK/Q,MAAMgQ,QACbe,KAAKC,aAEmB,IAAtBD,KAAK/Q,MAAM8Q,QAA0B,IAAP5B,GAE9B,kBAAC,IAAMjP,SAAP,KACE,kBAAC,GAAD,MACA,yBAAK/B,MAAO,CAAEiC,MAAO,MAAOkB,OAAQ,SACjCwD,GAAOwB,KAAI,SAAAiZ,GACV,GAAIA,EAAMlgB,KAAO2K,EAAM3K,GAAI,CACzB,IAAI0V,EAAYwK,EAAMzU,UAClB0U,EAAYzK,EAAU,GACtB0K,EAAY1K,EAAU,GACtB2K,EAAY3K,EAAU,GACtB6J,EAAWW,EAAMzF,SACrB,OACE,yBAAKzO,IAAKkU,EAAMlgB,IACd,kBAACoC,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,EAAGkB,UAAWR,EAAQmiB,MAC7C,kBAACle,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYD,QAAQ,MAClB,2BAAIsE,GAAqBgH,EAAMpH,UAIpCmS,EAAUzO,KAAI,SAACkT,EAAUjW,GACxB,IAAMqD,EAAQ4S,EAASzc,MACnBkO,EAAWuO,EAASvO,SACpBoU,EAAM7F,EAASD,IACf+F,EAAMtV,EAAM3K,GACZugB,EAAc,IAAI5d,KAAKwX,EAASxO,SACpC,OACE,kBAACI,GAAA,EAAD,CACEC,IAAKmO,EAASD,IACdpU,SAAUA,IAAayB,EACvBY,SAAU,EAAKb,aAAaC,IAE5B,kBAAC0E,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEFma,EAASvO,SAASC,MACjB,kBAACvM,EAAA,EAAD,CACEX,UAAWR,EAAQwG,QACnB7F,MAAO,CAAEK,MAAO,YAEhB,uCAAa+E,EAAQ,IAGvB,kBAAC5E,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC7B,uCAAaT,EAAQ,IAIzB,kBAAC5E,EAAA,EAAD,CAAYX,UAAWR,EAAQ4G,kBAC5BoV,EAASzc,OAEXyc,EAASvO,SAASC,MACjB,kBAACvM,EAAA,EAAD,CACER,MAAO,CACLK,MAAO,UACP8C,OAAQ,SAGV,kBAAC,KAAD,CAAUwK,KAAK,WAGjB,kBAACnN,EAAA,EAAD,CACER,MAAO,CAAEK,MAAO,MAAO8C,OAAQ,SAE/B,kBAAC,KAAD,CAAWwK,KAAK,YAItB,kBAACL,GAAA,EAAD,CAAkBtN,MAAO,CAAEnB,UAAW,SACpC,kBAACyE,EAAA,EAAD,CACEC,WAAS,EACT1D,UAAWR,EAAQqiB,QACnB/iB,QAAS,GAET,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,yDACC6a,EAASzc,QAGd,kBAAC0E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,qEAGC6a,EAAS1C,UAGd,kBAACrV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,+FAIC6a,EAASzC,SAGd,kBAACtV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,4EAIC6a,EAASrR,SAGd,kBAAC1G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,sEAGC6a,EAASvC,eAId,kBAACxV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,gEACC6a,EAAS3C,iBAGd,kBAACpV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,uDACC6a,EAASxC,SAGd,kBAACvV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,iDACCihB,EAAY/X,UAFf,IAGG+X,EAAYhY,WAAa,EAH5B,IAIGgY,EAAY3d,gBAGjB,kBAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASC,MACR,kBAACvM,EAAA,EAAD,KACE,6DADF,YAKA,kBAACA,EAAA,EAAD,KACE,6DADF,iBAMJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASE,IACR,kBAACxM,EAAA,EAAD,KACE,2DADF,YAKA,kBAACA,EAAA,EAAD,KACE,2DADF,iBAMJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASE,IACR,kBAACxM,EAAA,EAAD,KACE,mDADF,YAIA,kBAACA,EAAA,EAAD,KACE,mDADF,iBAKJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,gCAC2B2b,EAAStB,iBALxC,2BAYF,kBAACzW,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJ1D,MAAO,CAAEnB,UAAW,UAElBwc,EAASvO,SAASC,OACnBsU,EAAUvU,SAASE,KACnBsU,EAAUxU,SAASE,KACnBuU,EAAUzU,SAASE,IAYlB,6BACGqO,EAASvO,SAASE,IACjB,kBAAC1M,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNsN,KAAK,SAHP,6BAOE0N,EAASvO,SAASC,MACpB,kBAACzM,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNsN,KAAK,SAHP,4BAQA,kBAACrN,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNsN,KAAK,SAHP,8BA7BJ,kBAACrN,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNsN,KAAK,QACL9M,QAAS,WACP,EAAKogB,cAAcC,EAAKC,KAL5B,2BA6Cd,yBACEnhB,MAAO,CACLC,gBAAiB,UACjBiC,QAAS,WACTiB,OAAQ,YACRV,UACE,8DAGJ,kBAACa,EAAA,EAAD,CAAMC,WAAS,EAAC1D,UAAWR,EAAQuc,SACjC,kBAACtY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIzD,MAAO,CAAEoC,aAAc,SACxC,kBAAC5B,EAAA,EAAD,CACED,QAAQ,KACRP,MAAO,CAAEnB,UAAW,OAAQ+D,WAAY,QAF1C,aAOF,kBAACU,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQsiB,UAEnB,kBAACnhB,EAAA,EAAD,KACE,8CAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC7B,kBAACkJ,EAAA,EAAD,CACE7N,UAAWR,EAAQuiB,SACnBrhB,QAAQ,WACRoF,UAAW,OACXuU,WAAS,EACTC,WAAY,CAAEna,MAAO,CAAEgB,SAAU,KACjCoZ,KAAM,EACNlZ,GAAG,UACHuD,KAAK,UACLC,KAAK,OACLS,MAAO,EAAKrD,MAAM8Z,QAClBvS,SAAU,EAAK2X,kBAGnB,kBAAC1d,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQwiB,WAEnB,kBAACvhB,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNQ,QAAS,WACP,EAAKihB,YAAYX,KAJrB,gBASA,kBAACzN,GAAA,EAAD,CACEhU,KAAM,EAAKoC,MAAM8P,YACjB+B,iBAAkB,IAClBnS,QAAS,EAAK5B,aAEd,kBAAC,GAAD,CACE4B,QAAS,EAAK5B,YACdgU,SAAS,WAFX,uBAOF,kBAACF,GAAA,EAAD,CACEhU,KAAM,EAAKoC,MAAM+P,YACjB8B,iBAAkB,IAClBnS,QAAS,EAAK5B,aAEd,kBAAC,GAAD,CAAO4B,QAAS,EAAK5B,YAAagU,SAAS,SAA3C,2CAKJ,kBAACtQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,IAC7B,kBAAC,GAAD,CAAkBic,SAAUA,QAMjC,OAAO,UAKV,kBAACrR,EAAA,EAAD,U,GAhesB9P,IAAM0C,WAwe/B8R,iBA9hBA,SAAAxV,GAAK,MAAK,CACvBC,KAAM,CACJ0D,MAAO,OACP,YAAa,CACXkC,UAAW7F,EAAMK,QAAQ,KAG7BkH,QAAS,CACP7E,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEdC,iBAAiB,aACfjF,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCzF,MAAO/B,EAAM4H,QAAQC,KAAKC,UAC1BL,UAAW,SACXC,WAAY,EACZnH,UAAW,QACVP,EAAMS,YAAYI,KAAK,OAAS,CAC/BF,QAAS,SAGbuiB,KAAM,CACJre,OAAQ,OACRtE,UAAW,UAEb+c,QAAS,CACPzX,UAAW,QAEbwd,SAAS,aACP9iB,UAAW,QACXsE,OAAQ,UACP7E,EAAMS,YAAYI,KAAK,MAAQ,CAC9BN,UAAW,SAGf+iB,SAAS,aACP3f,MAAO,MACPhC,gBAAiB,QAChB3B,EAAMS,YAAYI,KAAK,MAAQ,CAC9B8C,MAAO,SAGX4f,UAAU,aACRhjB,UAAW,OACXsE,OAAQ,UACP7E,EAAMS,YAAYI,KAAK,MAAQ,CAC9BN,UAAW,aA+eFiV,CAAmBiN,ICtiB5B3iB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ0D,MAAO,QAET4D,QAAS,CACP7E,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnClD,WAAY,MACZmD,UAAW,SACXC,WAAY,GAEdC,iBAAkB,CAChBjF,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCzF,MAAO/B,EAAM4H,QAAQC,KAAKC,WAE5BC,MAAO,CACLpE,MAAO,OACPkB,OAAQ,QAEVmD,SAAU,CACRrE,MAAO,OACPkB,OAAQ,YAIZ,SAAS8B,GAASpD,GAAQ,IAChBqD,EAAqCrD,EAArCqD,SAAUC,EAA2BtD,EAA3BsD,MAAOC,EAAoBvD,EAApBuD,MAAUC,EADZ,aACsBxD,EADtB,8BAEvB,OACE,uCACEyD,KAAK,WACLC,OAAQJ,IAAUC,EAClBlE,GAAE,8BAAyBkE,GAC3BI,kBAAA,yBAAmCJ,IAC/BC,GAEHF,IAAUC,GACT,kBAACK,GAAA,EAAD,CAAKC,EAAG,GACN,kBAAClF,EAAA,EAAD,CAAYmF,UAAU,QAAQT,KAaxC,SAASU,GAAUR,GACjB,MAAO,CACLlE,GAAG,kBAAD,OAAoBkE,GACtB,gBAAgB,uBAAhB,OAAwCA,IAI5C,IAwqBe2c,GAxqBQ,SAAAlgB,GACrB,IAAMxC,EAAUjB,KACV6hB,EAAUlZ,cACVzI,EAAQ4I,eAHgB,EAIE3H,oBAAS,GAJX,mBAIvByH,EAJuB,KAIbC,EAJa,OAKJ1H,mBAAS,GALL,mBAKvB4F,EALuB,KAKhBgC,EALgB,KAWxBqB,EAAe,SAAAC,GAAK,OAAI,SAAC3H,EAAO4H,GACpCzB,IAAYyB,GAAaD,KAQrB9B,EAAS9E,EAAM8E,OAErB,OACE,kBAAC,IAAM5E,SAAP,KACE,kBAACjC,EAAA,EAAD,CAAQC,SAAS,SAASM,MAAM,WAC9B,kBAAC8K,GAAA,EAAD,CACEhG,MAAOA,EACPkE,SApBc,SAACvI,EAAOsK,GAC5BjE,EAASiE,IAoBHC,eAAe,UACfC,UAAU,UACV/K,QAAQ,YACRG,aAAW,2BAEX,kBAAC6K,GAAA,EAAD,eAAKC,MAAM,iBAAoB5F,GAAU,KACzC,kBAAC2F,GAAA,EAAD,eAAKC,MAAM,mCAAsC5F,GAAU,KAC3D,kBAAC2F,GAAA,EAAD,eAAKC,MAAM,oBAAuB5F,GAAU,KAC5C,kBAAC2F,GAAA,EAAD,eAAKC,MAAM,eAAkB5F,GAAU,OAG3C,kBAAC,KAAD,CACE6F,KAA0B,QAApBnN,EAAMoN,UAAsB,YAAc,IAChDtG,MAAOD,EACPwG,cA3BoB,SAAAvG,GACxB+B,EAAS/B,KA4BL,kBAAC,GAAD,CAAUD,MAAOA,EAAOC,MAAO,EAAGwG,IAAKtN,EAAMoN,WAC1C/E,EAAOwB,KAAI,SAAA0D,GACV,IAMIC,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GACX+K,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAY,KACZC,GAAqB,EACrBC,GAAqB,EACrBC,GAAqB,EACrBC,GAAmB,EACnBC,GAAmB,EACnBC,GAAmB,EAevB,OAb+B,IAA3Bb,EAAMc,UAAUC,SAClBX,EAAQJ,EAAMc,UAAU,GACxBT,EAAQL,EAAMc,UAAU,GACxBR,EAAQN,EAAMc,UAAU,GAExBP,EAAYH,EAAMY,QAAQ3B,MAAM,KAAK,GACrCmB,EAAqBJ,EAAMa,SAASC,MACpCT,EAAqBJ,EAAMY,SAASC,MACpCR,EAAqBJ,EAAMW,SAASC,MACpCP,EAAmBP,EAAMa,SAASE,IAClCP,EAAmBP,EAAMY,SAASE,IAClCN,EAAmBP,EAAMW,SAASE,KAGjCX,GAAsBG,GACtBF,GAAsBG,GACtBF,GACCG,GAC2B,IAA3Bb,EAAMc,UAAUC,OAIhB,kBAACK,GAAA,EAAD,CACEjG,SAAUA,IAAagF,EACvB3C,SAAUb,EAAawD,GACvBnM,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBgH,EAAMpH,OAE7BsH,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CACE0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJV,wBASN,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACnC,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAO5I,MACrB4I,EAAO5I,YAQpB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OACrByI,EAAOzI,aAQpB,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOE,QACrBF,EAAOE,cAQpB,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqI,GAAWM,EACV,kBAAC5L,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,SAAWE,QAAQ,MAA/C,+BAIA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,OAASE,QAAQ,MAA7C,6BAMJ,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACe,IAA3BoI,EAAMc,UAAUC,OACf,6BACE,kBAACtM,EAAA,EAAD,CACEO,QA/IE,WAClBof,EAAQzS,KAAK,CACXC,SAAS,cAAD,OAAgBvM,GACxBY,MAAO,CAAE+J,MAAOA,MA6IFtL,QAAQ,WACRF,MAAM,WAHR,qBASF,kBAACC,EAAA,EAAD,CAAQ4N,UAAQ,EAAC3N,QAAQ,WAAWF,MAAM,aACxC,kBAACG,EAAA,EAAD,oCAST,SAGX,kBAAC,GAAD,CAAU2E,MAAOA,EAAOC,MAAO,EAAGwG,IAAKtN,EAAMoN,WAC1C/E,EAAOwB,KAAI,SAAA0D,GACV,IAMIC,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GACX+K,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAY,KACZC,GAAqB,EACrBC,GAAqB,EACrBC,GAAqB,EACrBC,GAAmB,EACnBC,GAAmB,EACnBC,GAAmB,EAevB,OAb+B,IAA3Bb,EAAMc,UAAUC,SAClBX,EAAQJ,EAAMc,UAAU,GACxBT,EAAQL,EAAMc,UAAU,GACxBR,EAAQN,EAAMc,UAAU,GAExBP,EAAYH,EAAMY,QAAQ3B,MAAM,KAAK,GACrCmB,EAAqBJ,EAAMa,SAASC,MACpCT,EAAqBJ,EAAMY,SAASC,MACpCR,EAAqBJ,EAAMW,SAASC,MACpCP,EAAmBP,EAAMa,SAASE,IAClCP,EAAmBP,EAAMY,SAASE,IAClCN,EAAmBP,EAAMW,SAASE,KAGjCX,IAAuBG,GACvBF,IAAuBG,GACvBF,IACEG,GAC0B,IAA3Bb,EAAMc,UAAUC,OAIhB,kBAACK,GAAA,EAAD,CACEjG,SAAUA,IAAagF,EACvB3C,SAAUb,EAAawD,GACvBnM,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBgH,EAAMpH,OAE7BsH,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CACE0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJV,wBASN,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACnC,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAO5I,MACrB4I,EAAO5I,YAQpB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OACrByI,EAAOzI,aAQpB,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOE,QACrBF,EAAOE,cAQpB,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqI,GAAWM,EACV,kBAAC5L,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,SAAWE,QAAQ,MAA/C,+BAIA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,OAASE,QAAQ,MAA7C,6BAMJ,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACe,IAA3BoI,EAAMc,UAAUC,OACf,6BACE,kBAACtM,EAAA,EAAD,CACEO,QA/IE,WAClBof,EAAQzS,KAAK,CACXC,SAAS,cAAD,OAAgBvM,GACxBY,MAAO,CAAE+J,MAAOA,MA6IFtL,QAAQ,WACRF,MAAM,UACN2hB,YAAangB,EAAMmgB,aAJrB,qBAUF,kBAAC1hB,EAAA,EAAD,CAAQ4N,UAAQ,EAAC3N,QAAQ,WAAWF,MAAM,aACxC,kBAACG,EAAA,EAAD,oCAST,SAGX,kBAAC,GAAD,CAAU2E,MAAOA,EAAOC,MAAO,EAAGwG,IAAKtN,EAAMoN,WAC1C/E,EAAOwB,KAAI,SAAA0D,GACV,IAMIC,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GACX+K,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACRC,EAAY,KACZ6C,GAAgB,EAChBC,GAAgB,EAChBC,GAAgB,EAapB,OAX+B,IAA3BtD,EAAMc,UAAUC,SAClBX,EAAQJ,EAAMc,UAAU,GACxBT,EAAQL,EAAMc,UAAU,GACxBR,EAAQN,EAAMc,UAAU,GAExBP,EAAYH,EAAMY,QAAQ3B,MAAM,KAAK,GACrC+D,EAAgBhD,EAAMa,SAASC,MAC/BmC,EAAgBhD,EAAMY,SAASC,MAC/BoC,EAAgBhD,EAAMW,SAASC,OAI9BkC,GACAC,GACAC,GAC0B,IAA3BtD,EAAMc,UAAUC,OA0HX,KAvHH,kBAACK,GAAA,EAAD,CACEjG,SAAUA,IAAagF,EACvB3C,SAAUb,EAAawD,GACvBnM,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBgH,EAAMpH,OAE7BsH,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CACE0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJV,wBASN,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACnC,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAO5I,MACrB4I,EAAO5I,YAQpB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OACrByI,EAAOzI,aAQpB,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOE,QACrBF,EAAOE,cAQpB,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqI,GAAWM,EACV,kBAAC5L,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,SAAWE,QAAQ,MAA/C,+BAIA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,OAASE,QAAQ,MAA7C,6BAMJ,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACe,IAA3BoI,EAAMc,UAAUC,OACf,6BACE,kBAACtM,EAAA,EAAD,CACEO,QAxIE,WAClBof,EAAQzS,KAAK,CACXC,SAAS,cAAD,OAAgBvM,GACxBY,MAAO,CAAE+J,MAAOA,MAsIFtL,QAAQ,WACRF,MAAM,UACN2hB,YAAangB,EAAMmgB,aAJrB,qBAUF,kBAAC1hB,EAAA,EAAD,CAAQ4N,UAAQ,EAAC3N,QAAQ,WAAWF,MAAM,aACxC,kBAACG,EAAA,EAAD,wCAYpB,kBAAC,GAAD,CAAU2E,MAAOA,EAAOC,MAAO,EAAGwG,IAAKtN,EAAMoN,WAC1C/E,EAAOwB,KAAI,SAAA0D,GACV,IAMIC,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GAEf,OAA+B,IAA3B2K,EAAMc,UAAUC,OAEhB,kBAACK,GAAA,EAAD,CACEjG,SAAUA,IAAagF,EACvB3C,SAAUb,EAAawD,GACvBnM,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBgH,EAAMpH,OAE7BsH,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CACE0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJV,wBASN,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACnC,kBAAChD,EAAA,EAAD,CACEC,WAAS,EACT5E,QAAS,EACTqB,MAAO,CAAEiC,MAAO,OAAQC,QAAS,SAEjC,kBAACoB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAO5I,MACrB4I,EAAO5I,YAQpB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OACrByI,EAAOzI,aAQpB,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIF,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZsI,EAAQ5D,KAAI,SAAAkF,GACX,OACE,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOE,QACrBF,EAAOE,cAQpB,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,iEADF,WAGGsL,IAIL,kBAACxI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACe,IAA3BoI,EAAMc,UAAUC,OACf,6BACE,kBAACtM,EAAA,EAAD,CACEO,QAjHE,WAClBof,EAAQzS,KAAK,CACXC,SAAS,cAAD,OAAgBvM,GACxBY,MAAO,CAAE+J,MAAOA,MA+GFtL,QAAQ,WACRF,MAAM,UACN2hB,YAAangB,EAAMmgB,aAJrB,qBAUF,kBAAC1hB,EAAA,EAAD,CAAQC,QAAQ,WAAWF,MAAM,aAC/B,kBAACG,EAAA,EAAD,oCAST,YC/sBbpC,GAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,EACVK,UAAW,QAEbC,SAAS,eACNR,EAAMS,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,SAGbC,SAAO,mBACJZ,EAAMS,YAAYI,KAAK,MAAQ,CAC9BF,QAAS,SAFN,qBAIC,CACJgD,MAAO,MALJ,yBAOK,CACRA,MAAO,SARJ,GAWPoN,YAAY,CACVhP,MAAM,OACNJ,gBAAgB,UAChBiC,QAAQ,UACRoN,OAAO,UACP5M,aAAa,MACbhE,YAAY,OACZ,UAAW,CACTuB,gBAAiB,aASR,SAASsP,GAAS1N,GAC/B,IAAMxC,EAAUjB,KADsB,EAGNkB,IAAMC,SAAS,MAHT,mBAG/BC,EAH+B,KAGrBC,EAHqB,KAIhCC,EAAOC,QAAQH,GAEfgQ,EAAa,SAAA1O,GACjBrB,EAAYqB,EAAMC,gBAGdnB,EAAc,WAClBH,EAAY,OAGRqH,EAASC,cAduB,EAeXzH,IAAMC,SAAS,CACxCkQ,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,IAnB6B,mBAe9B9N,EAf8B,KAevB+N,EAfuB,KAqB/BC,EAAY,CACjB,CACE3J,KAAM,OACN/B,KAAM,kBAAC,KAAD,MACNvD,QAAS,kBAAMiG,EAAO0G,KAAK,UAE7B,CACErH,KAAM,SACN/B,KAAM,kBAAC,KAAD,MACNvD,QAAS,kBAAMiG,EAAO0G,KAAK,kBAIzBuC,EAAe,SAACC,EAAQtQ,GAAT,OAAkB,SAACoB,IACnB,YAAfA,EAAM4D,MAAqC,QAAd5D,EAAMoM,KAA+B,UAAdpM,EAAMoM,MAI9D2C,EAAS,6BAAK/N,GAAN,kBAAckO,EAAStQ,OA8BjC,OACM,6BACD,CAAC,QAAQyI,KAAI,SAAC6H,GAAD,OACZ,kBAAC,IAAMjO,SAAP,CAAgBmL,IAAK8C,GACnB,kBAACC,GAAA,EAAD,CAAQD,OAAQA,EAAQtQ,KAAMoC,EAAMkO,GAASxO,QAASuO,EAAaC,GAAQ,IA/BtE,SAACA,GAAD,OACX,yBACEnQ,UAAWqQ,aAAK7Q,EAAQ8Q,KAAT,eACZ9Q,EAAQ+Q,SAAsB,QAAXJ,GAA+B,WAAXA,IAE1C1K,KAAK,eACLzE,QAASkP,EAAaC,GAAQ,GAC9BK,UAAWN,EAAaC,GAAQ,IAEhC,kBAACM,GAAA,EAAD,KACCR,EAAU3H,KAAI,SAAC3E,EAAM4B,GAAW,IACrBe,EAAwB3C,EAAxB2C,KAAM/B,EAAkBZ,EAAlBY,KAAMvD,EAAY2C,EAAZ3C,QACpB,OACE,kBAAC,IAAMkB,SAAP,KACA,kBAACwO,GAAA,EAAD,CAAUC,QAAM,EAACtD,IAAK/G,EAAMtF,QAASA,EAASb,MAAO,CAACtB,YAAY,SAC/D0F,GAAQ,kBAACqM,GAAA,EAAD,KAAerM,GACxB,kBAACsM,GAAA,EAAD,CAAcC,QAASxK,KAEzB,kBAACyK,GAAA,EAAD,YAcCT,CAAKH,IAER,yBAAKnQ,UAAWR,EAAQd,MAC5B,kBAACuB,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAiB,SAClD,kBAACC,EAAA,EAAD,KACA,kBAAC,KAAD,CAAUc,SAAS,QAAQH,QAASkP,EAAaC,GAAQ,GAAOnQ,UAAWR,EAAQgQ,YAAarP,MAAO,KACrG,kBAACQ,EAAA,EAAD,CAAYD,QAAQ,KAAKV,UAAWR,EAAQT,OAA5C,6BAIE,yBAAKiB,UAAWR,EAAQP,UACtB,kBAAC2B,EAAA,EAAD,CACEC,aAAW,0BACXC,gBAAc,cACdC,gBAAc,OACdC,QAAS2O,EACTnP,MAAM,WAEN,kBAAC,IAAD,CAAeL,MAAO,CAAEgB,SAAU,OAEpC,kBAACC,EAAA,EAAD,CACEC,GAAG,cACH1B,SAAUA,EACV2B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEd3B,KAAMA,EACN8B,QAAS5B,GAET,kBAAC6B,EAAA,EAAD,CAAUZ,QAASjB,GACjB,kBAAC,IAAD,CACEO,GAAG,eACHH,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAF1C,oBAOF,kBAACoB,EAAA,EAAD,CAAUZ,QAASjB,GACjB,kBAAC,IAAD,CACEO,GAAG,UACHH,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAF1C,aAUR,kBAAC,IAAD,CACEF,GAAG,eACHN,UAAWR,EAAQH,QACnBc,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAExC,kBAACC,EAAA,EAAD,CACED,MAAM,UACNE,QAAQ,YACRmB,UAAW,kBAAC,IAAD,OAHb,oBAQF,kBAAC,IAAD,CACEvB,GAAG,UACHN,UAAWR,EAAQH,QACnBc,MAAO,CAAEI,eAAgB,OAAQC,MAAO,SAExC,kBAACC,EAAA,EAAD,CACED,MAAM,UACNE,QAAQ,YACRP,MAAO,CAAE2B,WAAY,QACrBD,UAAW,kBAAC,IAAD,OAJb,mBClNZ,IA6DI2C,GAAW,GACXsC,GAAS,KACTrC,GAAa,GACb0M,GAAK,KAGHiR,G,kDACJ,WAAYpgB,GAAQ,IAAD,8BACjB,cAAMA,IAORqgB,SAAW,WACTnY,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,wBAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJqG,GAAKrG,EAAIP,KAAKwC,OACdjG,GAASgE,EAAIP,KACb9F,GAAaqC,GAAO,GAAGgX,SAEvB,EAAK9N,SAAS,CACZiC,OAAQ,MACRc,QAAQ,OAGX7H,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,OA1BhB,EAAKlJ,MAAQ,CACXgQ,OAAQ,KACRc,QAPO,GAGQ,E,qDAgCT,IACAvT,EAAYwT,KAAKhR,MAAjBxC,QAMR,OAL0B,OAAtBwT,KAAK/Q,MAAMgQ,QACbe,KAAKqP,WAEP7d,GAAWwO,KAAKhR,MAAMwC,SAElBwO,KAAK/Q,MAAM8Q,OACF,IAAP5B,GAEA,kBAAC,IAAMjP,SAAP,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAASuC,aAAcA,GAAcD,SAAUA,KAC/C,yBACErE,MAAO,CACLiC,MAAO,MACPkB,OAAQ,OACRtE,UAAW,OACXsF,UAAW,OACX1B,UACE,6DAEJ5C,UAAWR,EAAQd,MAEnB,kBAAC,GAAD,CAAgBoI,OAAQA,GAAQqb,YAAa3d,GAASK,QAExD,gCACE,kBAAC,EAAD,aAnBR,EAwBY,kBAAC0K,EAAA,EAAD,U,GAjEOpN,aAqEV8R,iBAxIG,SAAAxV,GAAK,YAAK,CAC1BC,KAAM,CACJU,QAAS,OACT8U,cAAe,SACfC,UAAW,QAEbC,KAAM,CACJ9P,UAAW7F,EAAMK,QAAQ,GACzByD,aAAc9D,EAAMK,QAAQ,IAE9BkV,OAAQ,CACN1P,UAAW,QAEb+P,OAAK,GACH/P,UAAW7F,EAAMK,QAAQ,GACzBsD,MAAO,MACPhD,QAAS,OACT8U,cAAe,UAJZ,cAKFzV,EAAMS,YAAYI,KAAK,MAAQ,CAC9B8C,MAAO,QANN,uBAQK,QARL,2BASS,UATT,GAWLkS,KAAM,CACJjS,QAAS5D,EAAMK,QAAQ,GACvBE,UAAW,SACXoB,gBAAiB,QAGnBmU,KAAM,CACJnS,MAAO,MACPkC,UAAW7F,EAAMK,QAAQ,IAE3B8U,OAAQ,CACNtQ,OAAQ7E,EAAMK,QAAQ,EAAG,EAAG,IAE9B0V,OAAQ,CACNpU,gBAAiB,QAEnBsT,MAAO,CACLtR,MAAO,MACPqS,OAAQ,oBACRpS,QAAS,UACTQ,aAAc,OAEhByQ,WAAY,CACVlR,MAAO,MACPC,QAAS,OAEX+Q,UAAW,CACT/Q,QAAS,oBAEXgR,WAAY,CACVrU,UAAW,OACX0V,YAAa,OACbvT,SAAU,OACV4B,WAAY,UA+EDkR,CAAsBmO,IC1IhBE,G,kDACnB,WAAYtgB,GAAQ,IAAD,uBACjB,cAAMA,IAYR4S,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CACZ6E,UAAU,EACVC,KAAMhK,EAAIP,UAGbW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CACZ6E,UAAU,EACVC,KAAM,YAERnK,aAAaoK,WAAW,aA/B5B,IACIF,GAAW,EAHE,MAIH,QAFAlK,aAAaC,QAAQ,WAGjCiK,GAAW,GAEb,EAAK5S,MAAQ,CACX4S,WACAC,KAAM,IATS,E,qDAuCjB,MAAwB,KAApB9B,KAAK/Q,MAAM6S,MACb9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,OAC2B,QAAzByD,KAAK/Q,MAAM6S,KAAKjQ,KAEvB,6BACE,kBAAC,IAAM3C,SAAP,KACE,kBAAC,GAAD,CAAYsC,SAAUwO,KAAK/Q,MAAM6S,SAKhC,kBAAC,IAAD,CAAUxU,GAAG,U,GApDO6B,aCG3B5D,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC6hB,MAAO,CACLthB,UAAW,OACX+D,WAAY,UAEdwd,MAAO,CACLC,WAAY,QACZzd,WAAY,aAIV0d,GAAQvc,aAAe,CAC3BC,WAAY,CACVnB,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACA0d,KAAK,QAkII6B,GA9HQ,SAAAvgB,GACrB,IAAMxC,EAAUjB,KACVud,EAAW9Z,EAAM4e,SAEvB,OAAwB,IAApB9E,EAAS/O,QACX/C,QAAQC,IAAI6R,EAAS/O,QAEnB,kBAAC,IAAM7K,SAAP,KACE,kBAACvB,EAAA,EAAD,CAAYD,QAAQ,MAApB,iCAKF,kBAACgE,GAAA,EAAD,CAAejG,MAAOgiB,IACpB,kBAAChd,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,IAC7B,kBAACqW,GAAA,EAAD,CACE7a,MAAO,CACLyC,UACE,sDACFxC,gBAAiB,OACjByC,aAAc,MACdyB,UAAW,OACX/B,aAAc,SAGhB,kBAACyY,GAAA,EAAD,CAAO7a,MAAO,CAAE0C,aAAc,MAI5B,kBAAClC,EAAA,EAAD,CACED,QAAQ,KACRP,MAAO,CAAE4C,WAAY,MAAO/D,UAAW,SAFzC,uBAOD8c,EACE3W,MAAM,GACN0b,UACAvY,KAAI,SAAAyT,GACH,IAAI+E,EAAI,IAAI9c,KAAK+X,EAAQE,MAMzB,OACE,kBAAC,IAAM/Z,SAAP,CAAgBmL,IAAK0O,EAAQR,KAC3B,kBAACP,GAAA,EAAD,CAAO7a,MAAO,CAAE0C,aAAc,MAC5B,kBAACY,EAAA,EAAD,CACEC,WAAS,EACTvD,MAAO,CACLmD,OAAQ,OACRgB,UAAW,MACX/B,aAAc,OAEhBzD,QAAS,GAET,kBAAC2E,EAAA,EAAD,CAAMzD,UAAWR,EAAQ8gB,MAAO3c,MAAI,EAACC,GAAI,GAIvC,kBAACjD,EAAA,EAAD,CACER,MAAO,CACL4C,WAAY,MACZ5B,SAAU,GACV4f,UAAW,UAJf,YAOYhF,EAAQG,SAGtB,kBAACzY,EAAA,EAAD,CAAMzD,UAAWR,EAAQ+gB,MAAO5c,MAAI,EAACC,GAAI,GAIvC,kBAACjD,EAAA,EAAD,CACER,MAAO,CACL4C,WAAY,MACZ5B,SAAU,GACV4f,UAAW,WAJf,UAOUD,EAAEE,WAAWC,OAAO,EAAG,MAGnC,kBAACxd,EAAA,EAAD,CAAMzD,UAAWR,EAAQ+gB,MAAO5c,MAAI,EAACC,GAAI,GACvC,kBAACjD,EAAA,EAAD,CACER,MAAO,CACL4C,WAAY,MACZ5B,SAAU,GACV4f,UAAW,mBAJf,UAOUD,EAAEE,WAAW7b,MAAM,GAAI,MAGnC,kBAAC1B,EAAA,EAAD,CAAMzD,UAAWR,EAAQ8gB,MAAO3c,MAAI,EAACC,GAAI,IAIvC,kBAACjD,EAAA,EAAD,CACER,MAAO,CACL4C,WAAY,MACZ5B,SAAU,GACV4f,UAAW,UAJf,aAOahF,EAAQzV,kBC9HjD,SAAS2K,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAGtD,IAAIvD,GAAQyF,eACZzF,GAAQmY,aAAoBnY,IAE5B,IACI0S,GAAK,KACLrK,GAAS,KA6DPuV,GAAK,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAElEmG,G,kDACJ,WAAYxgB,GAAQ,IAAD,8BACjB,cAAMA,IAWRmf,eAAiB,SAAA9Y,GACf,IAAI0T,EAAU1T,EAAEvE,OAAOwB,MACvB,EAAK0K,SACH,CACE+L,QAASA,KAhBI,EAwBnBhc,YAAc,SAACkB,EAAO6Q,GACL,cAAXA,GAIJ,EAAK9B,SAAS,CACZ+B,aAAa,EACbC,aAAa,EACbC,OAAQ,QAhCO,EAiGnBmP,cAAgB,SAACC,EAAKhgB,GACpB2I,QAAQC,IAAIoX,EAAKhgB,GACjB6I,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,WAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIA,EACJggB,IAAKA,IAEP3W,QAAS,CACP,eAAgB,kDAChB+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAIjDC,MAAK,SAAA8K,GACJ3L,QAAQC,IAAI0L,GACZ,EAAK3F,SAAS,CACZiC,OAAQ,KACRc,QAAQ,EACR5B,GAAI,UAGPjG,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OA3HC,EA+HnBxC,aAAe,SAAAC,GAAK,OAAI,SAAC3H,EAAOkG,GAC9B,EAAK6I,SAAS,CACZ7I,WAAUA,GAAWyB,MA/HvB,EAAK3G,MAAQ,CACXkF,SAAU,KACV8K,OAAQ,KACRc,QAvEO,EAwEPgJ,QAAS,GACThK,aAAa,EACbC,aAAa,GARE,E,wDAoCPsP,GAAM,IAAD,OACPvF,EAAY/I,KAAK/Q,MAAjB8Z,QACK,KAAVA,EACD/I,KAAKhD,SAAS,CACZgC,aAAY,IAGd9H,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,WAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIigB,EACJhM,IAAKyG,IAEPrR,QAAS,CACP,eAAgB,kDACf+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAIpDC,MAAK,SAAA8K,GACJ,EAAK3F,SAAS,CAAE+B,aAAa,EAAMS,SAAS,IAC5CxI,QAAQC,IAAI0L,GACZ,EAAK3F,SAAS,CACZ+L,QAAQ,GACR9J,OAAQ,UAIX/G,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAEgC,aAAa,EAAMQ,SAAS,IAC5CxI,QAAQC,IAAIkB,Q,kCAML,IAAD,OACVjB,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,wBAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJqG,GAAKrG,EAAIP,KAAKwC,OACdjG,GAASgE,EAAIP,KACb,EAAKyF,SAAS,CACZiC,OAAQ,MACRc,QAAQ,OAGX7H,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,Q,+BAwCR,IAAD,OACCH,EAAagI,KAAKhR,MAAlBgJ,SACAxL,EAAYwT,KAAKhR,MAAjBxC,QACA2H,EAAa6L,KAAK/Q,MAAlBkF,SACF6E,EAAQhB,EAAS/I,MAAM+J,MACvBsV,EAAMtV,EAAM3K,GACdib,EAAgBtQ,EAAMwQ,aAM1B,OALAF,EAAcG,MAAK,SAACrL,EAAEsL,GAAH,OAAQ,IAAI1Y,KAAKoN,EAAEuL,gBAAgBC,UAAU,IAAI5Y,KAAK0Y,EAAEC,gBAAgBC,UAAW,GAAG,KAE/E,OAAtB5J,KAAK/Q,MAAMgQ,QACbe,KAAKC,aAEmB,IAAtBD,KAAK/Q,MAAM8Q,QAA0B,IAAP5B,GAE9B,kBAAC,IAAMjP,SAAP,KACE,kBAAC,GAAD,MACA,yBAAK/B,MAAO,CAAEiC,MAAO,MAAOkB,OAAQ,SACjCwD,GAAOwB,KAAI,SAAAiZ,GACV,GAAIA,EAAMlgB,KAAO2K,EAAM3K,GAAI,CACzB,IAAI0V,EAAYwK,EAAMzU,UAClB8T,EAAUW,EAAMzF,SACpB,OACE,yBAAKzO,IAAKkU,EAAMlgB,IACd,kBAACoC,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,EAAGkB,UAAWR,EAAQmiB,MAC7C,kBAACle,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYD,QAAQ,MAClB,2BAAIsE,GAAqBgH,EAAMpH,UAIpCmS,EAAUzO,KAAI,SAACkT,EAAUjW,GACxB,IAAMqD,EAAQ4S,EAASzc,MACnBkO,EAAWuO,EAASvO,SACpBoU,EAAM7F,EAASD,IACf+F,EAAMtV,EAAM3K,GACZugB,EAAc,IAAI5d,KAAKwX,EAASxO,SACpC,OACE,kBAACI,GAAA,EAAD,CAAWC,IAAKmO,EAASD,IACvBpU,SAAUA,IAAayB,EACvBY,SAAU,EAAKb,aAAaC,IAE5B,kBAAC0E,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEFma,EAASvO,SAASC,MACjB,kBAACvM,EAAA,EAAD,CACEX,UAAWR,EAAQwG,QACnB7F,MAAO,CAAEK,MAAO,YAEhB,uCAAa+E,EAAQ,IAGvB,kBAAC5E,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC7B,uCAAaT,EAAQ,IAIzB,kBAAC5E,EAAA,EAAD,CAAYX,UAAWR,EAAQ4G,kBAC5BoV,EAASzc,OAEXyc,EAASvO,SAASC,MACjB,kBAACvM,EAAA,EAAD,CACER,MAAO,CACLK,MAAO,UACP8C,OAAQ,SAGV,kBAAC,KAAD,CAAUwK,KAAK,WAGjB,kBAACnN,EAAA,EAAD,CACER,MAAO,CAAEK,MAAO,MAAO8C,OAAQ,SAE/B,kBAAC,KAAD,CAAWwK,KAAK,YAItB,kBAACL,GAAA,EAAD,CAAkBtN,MAAO,CAAEnB,UAAW,SACpC,kBAACyE,EAAA,EAAD,CACEC,WAAS,EACT1D,UAAWR,EAAQqiB,QACnB/iB,QAAS,GAET,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,yDACC6a,EAASzc,QAGd,kBAAC0E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,qEACC6a,EAAS1C,UAGd,kBAACrV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,+FACC6a,EAASzC,SAGd,kBAACtV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,4EACC6a,EAASrR,SAGd,kBAAC1G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,sEACC6a,EAASvC,eAId,kBAACxV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,gEACC6a,EAAS3C,iBAGd,kBAACpV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,uDACC6a,EAASxC,SAGd,kBAACvV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,iDACCihB,EAAY/X,UAFf,IAE2B+X,EAAYhY,WAAW,EAFlD,IAEsDgY,EAAY3d,gBAGpE,kBAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASC,MACR,kBAACvM,EAAA,EAAD,KACE,6DADF,YAIA,kBAACA,EAAA,EAAD,KACE,6DADF,iBAKJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASE,IACR,kBAACxM,EAAA,EAAD,KACE,2DADF,YAIA,kBAACA,EAAA,EAAD,KACE,2DADF,iBAKJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,gCAC2B2b,EAAStB,iBALxC,2BAYF,kBAACzW,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJ1D,MAAO,CAAEnB,UAAW,UAEnBwc,EAASvO,SAASC,MACjB,6BACIsO,EAASvO,SAASE,IAYlB,kBAAC1M,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNsN,KAAK,SAHP,YAXA,kBAACrN,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNsN,KAAK,QACL9M,QAAS,WACP,EAAKogB,cAAcC,EAAKC,KAL5B,qBAqBJ,6BACI9F,EAASvO,SAASE,IASlB,kBAAC1M,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNsN,KAAK,SAHP,sCARA,kBAACrN,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNsN,KAAK,SAHP,wBAwBO,IAAvBwO,EAAcvP,OACZ,kBAAC,IAAM7K,SAAP,KACE,kBAACwC,GAAA,EAAD,CAAejG,MAAOA,IAClB,kBAACkC,EAAA,EAAD,CAAYR,MAAO,CAACmE,UAAU,QAAS5D,QAAQ,MAA/C,wBACA,kBAACqa,GAAA,EAAD,CACI5a,MAAO,CAAEC,gBAAiB,WAC1BJ,UAAWR,EAAQkb,eACnB5U,UAAWkV,MAEX,kBAACC,GAAA,EAAD,CACAjb,UAAWR,EAAQmb,MACnB7M,KAAK,QACLjN,aAAW,iBAEP,kBAACqa,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAWC,MAAM,UAAjB,OACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,OACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,WAGJ,kBAACC,GAAA,EAAD,KACKgB,EAAchU,KAAI,SAACuU,EAAatX,GAAd,OACnB,kBAAC4V,GAAA,EAAD,CAAU9N,IAAKwP,EAAatB,KACxB,kBAACH,GAAA,EAAD,CAAWC,MAAM,UAAU9V,EAAM,GACjC,kBAAC6V,GAAA,EAAD,CAAWC,MAAM,UAAU,IAAIrX,KAAK6Y,EAAaF,gBAAgB9S,UAAjE,IAA6E,IAAI7F,KAAK6Y,EAAaF,gBAAgB/S,WAAW,EAA9H,IAAkI,IAAI5F,KAAK6Y,EAAaF,gBAAgB1Y,eACxK,kBAACmX,GAAA,EAAD,CAAWC,MAAM,UAAUgB,GAAK,IAAIrY,KAAK6Y,EAAaF,gBAAgBG,WACpE,IAAI9Y,KAAK6Y,EAAaF,gBAAgBR,WAAW,GAC/C,kBAACf,GAAA,EAAD,CAAWC,MAAM,UACZ,IAAIrX,KAAK6Y,EAAaF,gBAAgBR,WAAW,GADtD,IAC2D,IAAInY,KAAK6Y,EAAaF,gBAAgBP,aADjG,OAIA,kBAAChB,GAAA,EAAD,CAAWC,MAAM,UACZ,IAAIrX,KAAK6Y,EAAaF,gBAAgBR,WAD3C,IACwD,IAAInY,KAAK6Y,EAAaF,gBAAgBP,aAD9F,OAImB,OAArBS,EAAaE,MACX,kBAAC,IAAM7a,SAAP,KACK,IAAI8B,KAAK6Y,EAAaF,gBAAgBC,UAAU5Y,KAAKgZ,MAClD,kBAAC5B,GAAA,EAAD,CAAWC,MAAM,UAAjB,8BAIA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UACb,kBAAC1a,EAAA,EAAD,CAAYR,MAAO,CAACgB,SAAS,MAAOX,MAAM,aAA1C,0BAOZ,kBAAC4a,GAAA,EAAD,CAAWC,MAAM,UACZwB,EAAaE,gBAW5C,kBAAC,IAAM7a,SAAP,KACE,kBAACvB,EAAA,EAAD,CAAYR,MAAO,CAACmE,UAAU,QAAS5D,QAAQ,MAA/C,iBAGA,kBAACC,EAAA,EAAD,+CAKN,kBAAC8C,EAAA,EAAD,CAAMC,WAAS,EAAC1D,UAAWR,EAAQuc,SACjC,kBAACtY,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQsiB,UAEnB,kBAACnhB,EAAA,EAAD,KACE,8CAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC7B,kBAACkJ,EAAA,EAAD,CACE7N,UAAWR,EAAQuiB,SACnBrhB,QAAQ,WACRoF,UAAW,OACXuU,WAAS,EACTC,WAAY,CAAEna,MAAO,CAAEgB,SAAU,KACjCoZ,KAAM,EACNlZ,GAAG,UACHuD,KAAK,UACLC,KAAK,OACLS,MAAO,EAAKrD,MAAM8Z,QAClBvS,SAAU,EAAK2X,kBAGnB,kBAAC1d,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQwiB,WAEnB,kBAACvhB,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNQ,QAAS,WACP,EAAKihB,YAAYX,KAJrB,gBASA,kBAACzN,GAAA,EAAD,CACAhU,KAAM,EAAKoC,MAAM8P,YACjB+B,iBAAkB,IAClBnS,QAAS,EAAK5B,aAEd,kBAAC,GAAD,CAAO4B,QAAS,EAAK5B,YAAagU,SAAS,WAA3C,uBAIF,kBAACF,GAAA,EAAD,CACEhU,KAAM,EAAKoC,MAAM+P,YACjB8B,iBAAkB,IAClBnS,QAAS,EAAK5B,aAEd,kBAAC,GAAD,CAAO4B,QAAS,EAAK5B,YAAagU,SAAS,SAA3C,2CAKF,kBAACtQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,IAC7B,kBAAC,GAAD,CAAgBic,SAAUA,OAK7B,OAAO,UAKV,kBAACrR,EAAA,EAAD,U,GA1fQpN,aAkgBX8R,iBA/jBA,SAAAxV,GAAK,MAAK,CACvBC,KAAM,CACJ0D,MAAO,OACP,YAAa,CACXkC,UAAW7F,EAAMK,QAAQ,KAG7BkH,QAAS,CACP7E,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEdC,iBAAiB,aACfjF,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCzF,MAAO/B,EAAM4H,QAAQC,KAAKC,UAC1BL,UAAW,SACXC,WAAY,EACZnH,UAAW,QACVP,EAAMS,YAAYI,KAAK,OAAS,CAC/BF,QAAS,SAGbuiB,KAAM,CACJre,OAAQ,OACRtE,UAAW,UAEb+c,QAAS,CACPzX,UAAW,QAEbwd,SAAS,aACP9iB,UAAW,QACXsE,OAAQ,UACP7E,EAAMS,YAAYI,KAAK,MAAQ,CAC9BN,UAAW,SAGf+iB,SAAS,aACP3f,MAAO,MACPhC,gBAAiB,QAChB3B,EAAMS,YAAYI,KAAK,MAAQ,CAC9B8C,MAAO,SAGX4f,UAAU,aACRhjB,UAAW,OACXsE,OAAQ,UACP7E,EAAMS,YAAYI,KAAK,MAAQ,CAC9BN,UAAW,UAGf0b,eAAgB,CACdpW,UAAW,OACX/B,aAAc,QAEhBoY,MAAO,CACLtW,SAAU,QAwgBC4P,CAAmBuO,I,oBClkBlC,SAASvR,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAGtD,IAAI8C,GAAa,KACbqH,GAAQ,KACRsW,GAAU,KACVC,GAAoB,KACpBC,GAAY,GA8CVC,G,kDACJ,WAAY5gB,GAAQ,IAAD,uBACjB,cAAMA,IAwBR4S,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CACZ6E,UAAU,EACVC,KAAMhK,EAAIP,UAIbW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CACZ6E,UAAU,EACVC,KAAM,YAERnK,aAAaoK,WAAW,aA9CX,EAuEnB8N,6BAA+B,SAACxhB,EAAI0D,GAClC2d,GAAoB3d,EACpB0d,GAAUphB,EACV2I,QAAQC,IAAIyY,GAAmBD,IAC/B,EAAKzS,SAAS,CACZ8S,kBAAkB,KA5EH,EA+EnBC,8BAAgC,WAC9B,EAAK/S,SAAS,CACZ8S,kBAAkB,KAjFH,EAoFnBE,mBAAqB,SAACC,EAAKle,GACzB,EAAKge,gCACL7Y,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,2BAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBwY,IAAKA,EACLle,MAAOA,IAET2F,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,sBACZyY,GAAoB,KACpBD,GAAU,KACV1X,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OA5GC,EA0HnB+X,iCAAmC,WACjC,EAAKlT,SAAS,CACZmT,qBAAqB,KA5HN,EA+HnBC,sBAAwB,SAAAH,GACtB,EAAKC,mCACLhZ,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,kBAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBwY,IAAKA,IAEPvY,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ2X,GAAU,KACV1X,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OApJC,EAwJnBkY,oBAAsB,WACpB,EAAKrT,SAAS,CAAEwC,SAAS,IACzBtI,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,kBAClB+L,YAAa,UACbC,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CAAEwC,SAAS,EAAO8Q,qBAAqB,IACrDvY,OAAOC,SAASC,YAEjBC,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAEwC,SAAS,EAAO8Q,qBAAqB,IACrDtZ,QAAQC,IAAIkB,OAzKC,EA4KnBoY,eAAiB,WACf,EAAKvT,SAAS,CAAEwC,SAAS,IACzBtI,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,WAClB+L,YAAa,UACbC,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CAAEwC,SAAS,EAAOgR,SAAS,EAAOC,gBAAgB,OAEjEvY,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAEwC,SAAS,EAAOgR,SAAS,IACzCxZ,QAAQC,IAAIkB,OA5LC,EAgMnBuY,0BAA4B,SAACT,EAAK3E,EAAMqF,GACtClB,GAAUQ,EACVne,GAAawZ,EACbnS,GAAQwX,EACR3Z,QAAQC,IAAIwY,GAAS3d,GAAYqH,IACjC,EAAK6D,SAAS,CACZ4T,eAAe,KAtMA,EAyMnBC,2BAA6B,WAC3B,EAAK7T,SAAS,CACZ4T,eAAe,KA3MA,EA+MnBE,uBAAyB,SAAAzb,GACvB,EAAK2H,SAAS,CACZ+T,WAAY1b,EAAEvE,OAAOwB,SAjNN,EAqNnB0e,wBAA0B,SAAA3b,GACxB,EAAK2H,SAAS,CACZiU,YAAa5b,EAAEvE,OAAOwB,SAvNP,EA0NnB4e,yBAA2B,SAAA7b,GACzB,EAAK2H,SAAS,CACZmU,aAAc9b,EAAEvE,OAAOwB,SA5NR,EAgOnB8e,gBAAkB,SAAC/iB,EAAIyD,EAAYuf,GACjCra,QAAQC,IACN5I,EACA,EAAKY,MAAM8hB,WACX,EAAK9hB,MAAMkiB,aACX,EAAKliB,MAAMgiB,YACXnf,EACAuf,GAG0B,KAA1B,EAAKpiB,MAAM8hB,YACgB,KAA3B,EAAK9hB,MAAMgiB,aACiB,KAA5B,EAAKhiB,MAAMkiB,aAEX/Y,MAAM,+CAENlB,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,aAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIA,EACJuD,KAAM,EAAK3C,MAAM8hB,WACjBhf,MAAO,EAAK9C,MAAMgiB,YAClBvW,OAAQ,EAAKzL,MAAMkiB,aACnBrf,WAAYA,EACZuf,UAAWA,IAEb3Z,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,kCACZwY,GAAU,KACV3d,EAAa,KACbqH,GAAQ,KACR,EAAK6D,SAAS,CACZiU,YAAa,GACbE,aAAc,GACdJ,WAAY,GACZH,eAAe,IAGjB7Y,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLC,MAAM,oBACN,EAAK4E,SAAS,CACZsU,YAAY,IAEdta,QAAQC,IAAIkB,OAtRD,EA2RnBoZ,iBAAmB,SAAAlc,GACjBA,EAAEmc,mBA1RF,IACI3P,GAAW,EAHE,MAIH,UAFAlK,aAAaC,QAAQ,WAGjCiK,GAAW,GAGb,EAAK5S,MAAQ,CACX4S,WACAC,KAAM,GACN2P,aAAc,KACd3B,kBAAkB,EAClBc,eAAe,EACfG,WAAY,GACZE,YAAa,GACbE,aAAc,GACdhB,qBAAqB,EACrBG,qBAAqB,EACrBE,SAAS,EACThR,SAAS,EACTiR,gBAAgB,GArBD,E,wDAiDN,IAAD,OACVvZ,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,wBAClBgM,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ6X,GAAY7X,EAAIP,KAChB,EAAKyF,SAAS,CACZyU,aAAc3Z,EAAIP,UAIrBW,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,Q,sDA+Cc9C,EAAG4a,GACjC5a,EAAEmc,kBACFnc,EAAE8J,iBACFsQ,GAAUQ,EACVjZ,QAAQC,IAAIwY,IACZzP,KAAKhD,SAAS,CACZmT,qBAAqB,M,+BAwKf,IAAD,OACC3jB,EAAYwT,KAAKhR,MAAjBxC,QACR,GAAIwT,KAAK/Q,MAAMuQ,QAAS,OAAO,kBAACjD,EAAA,EAAD,MAC/B,GAAgC,OAA5ByD,KAAK/Q,MAAMwiB,aAEb,OADAzR,KAAKC,YACE,kBAAC1D,EAAA,EAAD,MAET,GAAwB,KAApByD,KAAK/Q,MAAM6S,KAEb,OADA9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,MACF,GAA6B,UAAzByD,KAAK/Q,MAAM6S,KAAKjQ,KAAkB,CAC3C,IAAM9E,EAAc,SAACkB,EAAO6Q,GACX,cAAXA,GAGJ,EAAK9B,SAAS,CAAEyT,gBAAgB,KAElC,OACE,kBAAC,IAAMvhB,SAAP,KACE,kBAACwN,GAAD,MAGA,6BACE,kBAAC5G,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAM6gB,iBACjBnhB,QAASqR,KAAK+P,8BACdpd,kBAAgB,qBAChBkU,mBAAiB,4BAEjB,kBAAC9Q,GAAA,EAAD,CAAa1H,GAAG,sBACb,iBAEH,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5H,GAAG,4BAAtB,4GAKF,kBAAC0I,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAASgS,KAAK+P,8BACdviB,MAAM,WAFR,UAMA,kBAACC,EAAA,EAAD,CACEO,QAAS,kBACP,EAAKgiB,mBAAmBP,GAASC,KAEnCliB,MAAM,WAJR,aAaN,6BACE,kBAACsI,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAM2hB,cACjBjiB,QAAS,kBAAM,EAAKkiB,4BACpBle,kBAAgB,qBAEhB,kBAACoD,GAAA,EAAD,CAAa1H,GAAG,qBAAhB,cACA,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,oDAGA,kBAAC4E,EAAA,EAAD,CACE0F,WAAS,EACTjQ,OAAO,QACPjC,GAAG,aACHsK,MAAM,cACN9G,KAAK,OACLS,MAAO0N,KAAK/Q,MAAM8hB,WAClBva,SAAUwJ,KAAK8Q,uBACfzN,WAAS,EACThN,UAAQ,IAEV,kBAACwE,EAAA,EAAD,CACEvK,OAAO,QACPjC,GAAG,cACHsK,MAAM,eACN9G,KAAK,OACLS,MAAO0N,KAAK/Q,MAAMgiB,YAClBza,SAAUwJ,KAAKgR,wBACf3N,WAAS,EACThN,UAAQ,IAEV,kBAACwE,EAAA,EAAD,CACEvK,OAAO,QACPjC,GAAG,aACHsK,MAAM,cACN9G,KAAK,OACLS,MAAO0N,KAAK/Q,MAAMkiB,aAClB3a,SAAUwJ,KAAKkR,yBACf7N,WAAS,EACThN,UAAQ,KAGZ,kBAACU,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAASgS,KAAK6Q,2BACdrjB,MAAM,WAFR,UAMA,kBAACC,EAAA,EAAD,CACEO,QAAS,kBACP,EAAKojB,gBAAgB3B,GAAS3d,GAAYqH,KAE5C3L,MAAM,WAJR,aAaN,6BACE,kBAACsI,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAMkhB,oBACjBxhB,QAASqR,KAAKkQ,iCACdvd,kBAAgB,qBAChBkU,mBAAiB,4BAEjB,kBAAC9Q,GAAA,EAAD,CAAa1H,GAAG,sBACb,oBAEH,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5H,GAAG,4BAAtB,wIAMF,kBAAC0I,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAASgS,KAAKkQ,iCACd1iB,MAAM,WAFR,UAMA,kBAACC,EAAA,EAAD,CACEO,QAAS,kBAAM,EAAKoiB,sBAAsBX,KAC1CjiB,MAAM,WAFR,aAWN,6BACE,kBAACsI,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAMqhB,oBACjB3hB,QAAS,WACP,EAAKqO,SAAS,CAAEsT,qBAAqB,KAEvC3d,kBAAgB,qBAChBkU,mBAAiB,4BAEjB,kBAAC9Q,GAAA,EAAD,CAAa1H,GAAG,sBACb,mBAEH,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5H,GAAG,4BAAtB,yOAOF,kBAAC0I,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAAS,WACP,EAAKgP,SAAS,CAAEsT,qBAAqB,KAEvC9iB,MAAM,WAJR,UAQA,kBAACC,EAAA,EAAD,CAAQO,QAASgS,KAAKqQ,oBAAqB7iB,MAAM,WAAjD,aAON,6BACE,kBAACsI,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAMuhB,QACjB7hB,QAAS,WACP,EAAKqO,SAAS,CAAEwT,SAAS,KAE3B7d,kBAAgB,qBAChBkU,mBAAiB,4BAEjB,kBAAC9Q,GAAA,EAAD,CAAa1H,GAAG,sBACb,kBAEH,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5H,GAAG,4BAAtB,oEAKF,kBAAC0I,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAAS,WACP,EAAKgP,SAAS,CAAEwT,SAAS,KAE3BhjB,MAAM,WAJR,UAQA,kBAACC,EAAA,EAAD,CAAQO,QAASgS,KAAKuQ,eAAgB/iB,MAAM,WAA5C,cAMN,kBAACqT,GAAA,EAAD,CACEhU,KAAMmT,KAAK/Q,MAAMwhB,eACjB3P,iBAAkB,IAClBnS,QAAS5B,GAET,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,WAAtC,sCAMoB,IAArB4O,GAAU5V,OACT,yBAAK/M,UAAWR,EAAQklB,oBACtB,6BACA,kBAACjhB,EAAA,EAAD,CAAMC,WAAS,EAACvD,MAAO,CAAEkC,QAAS,QAChC,kBAACoB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG1D,MAAO,CAAEmD,OAAQ,SACzC,kBAAC3C,EAAA,EAAD,CAAYD,QAAQ,KAAKP,MAAO,CAAEoC,aAAc,SAAhD,kBAIF,kBAACkB,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJ1D,MAAO,CAAEnB,UAAW,QAASsE,OAAQ,SAErC,kBAAC7C,EAAA,EAAD,CACEkkB,QAAS,kBAAC,KAAD,MACTjkB,QAAQ,YACRM,QAAS,WACP,EAAKgP,SAAS,CAAEwT,SAAS,KAE3BhjB,MAAM,UACNL,MAAO,CAAEmD,OAAQ,YAPnB,WAWA,kBAAC7C,EAAA,EAAD,CACEkkB,QAAS,kBAAC,KAAD,MACTjkB,QAAQ,YACRM,QAAS,WACP,EAAKgP,SAAS,CAAEsT,qBAAqB,KAEvC9iB,MAAM,WANR,sBAaHmiB,GAAUra,KAAI,SAAAiZ,GACb,IAAIqD,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KACW,IAA3BvD,EAAMzU,UAAUC,SAClB6X,EAAgBrD,EAAMzU,UAAU,GAAGG,SAASC,MAC5C2X,EAAgBtD,EAAMzU,UAAU,GAAGG,SAASC,MAC5C4X,EAAgBvD,EAAMzU,UAAU,GAAGG,SAASC,OAG9C,IAAI+V,EAAM1B,EAAMlgB,GACZid,EAAOiD,EAAMzc,WACb6e,EAAQpC,EAAM3c,KAClB,OACE,kBAACwI,GAAA,EAAD,CAAWpN,UAAWR,EAAQulB,UAAW1X,IAAKkU,EAAM3c,MAClD,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC7B,2BAAIhB,GAAqBuc,EAAM3c,SAGnC,kBAAC6I,GAAA,EAAD,KACE,kBAAC,IAAMvL,SAAP,KAEE,yBAAKlC,UAAWR,EAAQd,MACtB,kBAAC0O,GAAA,EAAD,CAAWpN,UAAWR,EAAQwlB,YAC5B,kBAAC1X,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAA/B,YAIF,kBAACyH,GAAA,EAAD,KACE,yBAAKtN,MAAO,CAAEiC,MAAO,SACnB,kBAACO,EAAA,EAAD,CAAM3C,UAAWR,EAAQylB,WACvB,kBAACxhB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACE,qCAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACE,sCAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACE,uCAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZ2d,EAAMrV,QAAQa,OAAS,EACtB,kBAACtM,EAAA,EAAD,CACEO,QAAS,kBACP,EAAK0iB,0BACHT,EACA3E,EACAqF,IAGJjjB,QAAQ,YACRF,MAAM,WATR,cAaE,QAIT+gB,EAAMrV,QAAQ5D,KAAI,SAAAkF,GACjB,IAAI0X,EAAe1X,EAAOzI,MAC1B,OACE,kBAACpC,EAAA,EAAD,CACE3C,UAAWR,EAAQylB,UACnB5X,IAAKG,EAAOzI,OAEZ,kBAACtB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KAAa6M,EAAO5I,OAEtB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACG6M,EAAOzI,QAGZ,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACG6M,EAAOE,SAGZ,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,KAAD,CACE5D,UAAWR,EAAQ2lB,gBACnBnkB,QAAS,kBACP,EAAK6hB,6BACHI,EACAiC,eActB,kBAAC9X,GAAA,EAAD,CAAWpN,UAAWR,EAAQwlB,YAC5B,kBAAC1X,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAA/B,aAG4B,IAA3Bub,EAAMzU,UAAUC,QAChB6X,GACAC,GACAC,EAaG,KAZF,kBAACrkB,EAAA,EAAD,CACEO,QAAS,SAAAqH,GACP,EAAK+c,gCACH/c,EACA4a,IAGJviB,QAAQ,WACRF,MAAM,WARR,yBAcJ,kBAACiN,GAAA,EAAD,KACE,yBAAKzN,UAAWR,EAAQd,MACM,IAA3B6iB,EAAMzU,UAAUC,OACfwU,EAAMzU,UAAUxE,KAAI,SAACkT,EAAUjW,GAC7B,IAAI0H,EAAWuO,EAASvO,SAGxB,OACE,kBAACG,GAAA,EAAD,CACEjN,MAAO,CAAEnB,UAAW,QACpBqO,IAAK9H,GAEL,kBAAC+H,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CACEX,UAAWR,EAAQwG,SADrB,YAGYT,EAAQ,IAGtB,kBAACkI,GAAA,EAAD,KACE,kBAAChK,EAAA,EAAD,CACEC,WAAS,EACT1D,UAAWR,EAAQqiB,QACnB/iB,QAAS,GAET,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,yDAGC6a,EAASzc,QAGd,kBAAC0E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,qEAIC6a,EAAS1C,UAGd,kBAACrV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,+FAKC6a,EAASzC,SAGd,kBAACtV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,4EAIC6a,EAASrR,SAGd,kBAAC1G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,sEAIC6a,EAASvC,eAGd,kBAACxV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,gEAIC6a,EAAS3C,iBAGd,kBAACpV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,uDAGC6a,EAASxC,SAGd,kBAACvV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,iDAEC6a,EAASxO,QAAQiU,OAAO,EAAG,MAGhC,kBAACxd,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,sDAGC6a,EAAStB,eAGd,kBAACzW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASC,MACR,kBAACvM,EAAA,EAAD,KACE,qDADF,YAKA,kBAACA,EAAA,EAAD,KACE,qDADF,iBAMJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASE,IACR,kBAACxM,EAAA,EAAD,KACE,mDADF,YAKA,kBAACA,EAAA,EAAD,KACE,mDADF,iBAMJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,gCAC2B2b,EAAStB,iBALxC,2BAYF,kBAACzW,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJ1D,MAAO,CAAEnB,UAAW,iBAQhC,kBAAC2B,EAAA,EAAD,oCASR,kBAACyM,GAAA,EAAD,CAAWpN,UAAWR,EAAQwlB,YAC5B,kBAAC1X,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAA/B,iBAIF,kBAACyH,GAAA,EAAD,KACE,yBAAKtN,MAAO,CAAEiC,MAAO,SACnB,kBAACO,EAAA,EAAD,CAAM3C,UAAWR,EAAQ6lB,UACvB,kBAAC5hB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,gBAGA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,QAGA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,QAGA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,WAKH2d,EAAM/E,aAAalU,KAAI,SAACgd,EAAM/f,GAC7B,OACE,kBAAC5C,EAAA,EAAD,CACE3C,UAAWR,EAAQ6lB,SACnBhY,IAAK9H,GAEL,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,gBACgB2B,EAAQ,GAExB,kBAAC9B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZ0hB,EAAK3I,eAAetR,MAAM,KAAK,IAElC,kBAAC5H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZ0hB,EAAK3I,eAAexX,MAAM,GAAI,KAEjB,OAAfmgB,EAAKvI,MACJ,kBAACtZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,gBAIA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZ0hB,EAAKvI,uBAkBtC,kBAACpc,EAAA,EAAD,CAAYD,QAAQ,KAAKP,MAAO,CAAEoC,aAAc,SAAhD,cAON,OAAO,kBAAC,IAAD,CAAUjC,GAAG,U,GAx7BI6B,aA67Bf8R,iBAz+BG,SAAAxV,GAAK,MAAK,CAC1BC,KAAM,CACJ0D,MAAO,QAET2iB,UAAW,CACTvkB,MAAO,UACP8C,OAAQ,QAEVohB,mBAAoB,CAClBtiB,MAAO,MACPkB,OAAQ,WACRgB,UAAW,QAEbihB,aAAc,CACZnjB,MAAO,MACPhC,gBAAiB,WAEnB6kB,UAAW,CACT7iB,MAAO,OACPC,QAAS,UACTiC,UAAW,MACXtF,UAAW,QAEbgmB,WAAY,CACV5kB,gBAAiB,WAEnB4F,QAAS,CACPjD,WAAY,QAEdoiB,gBAAiB,CACf1V,OAAQ,UACR,UAAW,CACTjP,MAAO,QAGX6kB,SAAU,CACRjjB,MAAO,OACPC,QAAS,UACTiC,UAAW,MACXzB,aAAc,MACd7D,UAAW,WAi8BAiV,CAAsB2O,ICz/BjC4C,GAAW,KACXC,GAAc,KACdC,GAAa,KACbC,IAAW,EACXC,IAAS,EA4CTC,GAAY,KAEVC,G,kDACJ,WAAY9jB,GAAQ,IAAD,uBACjB,cAAMA,IAwBR+jB,0BAA4B,SAAA1kB,GAC1BukB,GAASvkB,EACT,EAAK2O,SAAS,CACZgW,eAAe,KA5BA,EA+BnBC,2BAA6B,WAC3B,EAAKjW,SAAS,CACZgW,eAAe,KAjCA,EAqCnBE,gBAAkB,SAAA7kB,GAChB,EAAK4kB,6BACL/b,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,uBAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIA,IAENqJ,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,mBACZ2b,GAAS,KACT7a,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OA3DC,EAgEnBgb,uBAAyB,WACvB,EAAKnW,SAAS,CACZsU,YAAY,KAlEG,EAqEnB8B,wBAA0B,WACxB,EAAKpW,SAAS,CACZsU,YAAY,KAvEG,EA2EnB+B,oBAAsB,SAAAhe,GACpB,EAAK2H,SAAS,CACZ6B,QAASxJ,EAAEvE,OAAOwB,SA7EH,EAiFnBghB,qBAAuB,SAAAje,GACrB,EAAK2H,SAAS,CACZuW,SAAUle,EAAEvE,OAAOwB,SAnFJ,EAwFnBkhB,aAAe,WACc,KAAvB,EAAKvkB,MAAM4P,SAA0C,KAAxB,EAAK5P,MAAMskB,SAC1Cnb,MAAM,qCAENlB,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,UAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjB7F,KAAM,EAAK3C,MAAM4P,QACjB9M,MAAO,EAAK9C,MAAMskB,WAEpB7b,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,kCACZ,EAAK+F,SAAS,CACZ6B,QAAS,GACT0U,SAAU,GACVjC,YAAY,IAGdvZ,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLC,MAAM,oBACN,EAAK4E,SAAS,CACZsU,YAAY,IAEdta,QAAQC,IAAIkB,OA1HD,EAgInB8L,gBAAkB,WAChB,EAAKjH,SAAS,CACZyW,MAAM,KAlIS,EAqInBC,kBAAoB,WAClB1c,QAAQC,IAAI,UACZ,EAAK+F,SAAS,CACZyW,MAAM,KAxIS,EA2InBE,kBAAoB,WAClB,EAAK3W,SAAS,CACZ4W,SAAS,IAEkB,KAAzB,EAAK3kB,MAAM4kB,WAA8C,KAA1B,EAAK5kB,MAAM6kB,WAC5C1b,MAAM,uCAENlB,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,qBAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjB7F,KAAM,EAAK3C,MAAM4kB,UACjB9hB,MAAO,EAAK9C,MAAM6kB,aAEpBpc,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,aACZ,EAAK+F,SAAS,CACZ4W,SAAS,EACTC,UAAW,GACXC,WAAY,GACZL,MAAM,IAGR1b,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLC,MAAM,mBACN,EAAK4E,SAAS,CACZ4W,SAAS,EACTH,MAAM,IAERzc,QAAQC,IAAIkB,OAlLD,EAyLnB4b,uBAAyB,SAAC1lB,EAAIuD,EAAMG,GAClC0gB,GAAc1gB,EACdygB,GAAWnkB,EACXqkB,GAAa9gB,EACb,EAAKoL,SAAS,CACZgX,YAAY,KA9LG,EAiMnBC,wBAA0B,WACxB,EAAKjX,SAAS,CACZgX,YAAY,KAnMG,EAuMnBE,kBAAoB,SAAC7lB,EAAIuD,EAAMG,GAC7B,EAAKkiB,0BACL/c,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,yBAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIA,EACJuD,KAAMA,EACNG,MAAOA,IAET2F,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,qBACZwb,GAAc,KACdD,GAAW,KACXE,GAAa,KACb3a,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OAjOC,EAuOnBgc,kBAAoB,SAAA9e,GAClB,EAAK2H,SAAS,CACZ6W,UAAWxe,EAAEvE,OAAOwB,SAzOL,EA6OnB8hB,mBAAqB,SAAA/e,GACnB,EAAK2H,SAAS,CACZ8W,WAAYze,EAAEvE,OAAOwB,SA/ON,EAmPnBsP,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CACZ6E,UAAU,EACVC,KAAMhK,EAAIP,UAIbW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CACZ6E,UAAU,EACVC,KAAM,YAERnK,aAAaoK,WAAW,aAxQX,EA4QnBsS,SAAW,WACTnd,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,YAClBgM,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ+a,GAAY/a,EAAIP,KAChB,EAAKyF,SAAS,CACZsX,aAAcxc,EAAIP,UAIrBW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CACZ6E,UAAU,EACVC,KAAM,YAERnK,aAAaoK,WAAW,aA/R5B,IACIF,GAAW,EAHE,MAIH,UAFAlK,aAAaC,QAAQ,WAGjCiK,GAAW,GAGb,EAAK5S,MAAQ,CACX4S,WACAC,KAAM,GACNwS,aAAc,KACdb,MAAM,EACNG,SAAS,EACTC,UAAW,GACXC,WAAY,GACZjV,QAAS,GACT0U,SAAU,GACVS,YAAY,EACZhB,eAAe,EACf1B,YAAY,GApBG,E,qDAqST,IAAD,OACC9kB,EAAYwT,KAAKhR,MAAjBxC,QAIR,OAHkB,OAAdqmB,IACF7S,KAAKqU,WAEiB,KAApBrU,KAAK/Q,MAAM6S,MACb9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,OAC2B,UAAzByD,KAAK/Q,MAAM6S,KAAKjQ,KACP,OAAdghB,GAEA,kBAAC,IAAM3jB,SAAP,KACE,kBAACwN,GAAD,MAEA,yBAAK1P,UAAWR,EAAQ+nB,eACtB,kBAAC9jB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC7B,kBAAChE,EAAA,EAAD,CAAYD,QAAQ,KAAKP,MAAO,CAAEmD,OAAQ,cAA1C,iBAIF,kBAACG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC3BqO,KAAK/Q,MAAM2kB,QA6DX,6BACE,kBAAC3Y,GAAA,EAAD,OA7DF,6BACE,kBAACxN,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNQ,QAASgS,KAAKiE,gBACd9W,MAAO,CAAEmD,OAAQ,OAAQjB,QAAS,cAJpC,aAQA,kBAACyG,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAMwkB,KACjB9kB,QAASqR,KAAK0T,kBACd/gB,kBAAgB,qBAEhB,kBAACoD,GAAA,EAAD,CAAa1H,GAAG,qBAAhB,aAGA,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,4CAGA,kBAAC4E,EAAA,EAAD,CACE0F,WAAS,EACTjQ,OAAO,QACPjC,GAAG,YACHsK,MAAM,aACN9G,KAAK,OACLS,MAAO0N,KAAK/Q,MAAM4kB,UAClBrd,SAAUwJ,KAAKmU,kBACf9Q,WAAS,EACThN,UAAQ,IAEV,kBAACwE,EAAA,EAAD,CACEvK,OAAO,QACPjC,GAAG,aACHsK,MAAM,cACN9G,KAAK,OACLS,MAAO0N,KAAK/Q,MAAM6kB,WAClBtd,SAAUwJ,KAAKoU,mBACf/Q,WAAS,EACThN,UAAQ,KAGZ,kBAACU,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAASgS,KAAK0T,kBACdlmB,MAAM,WAFR,UAMA,kBAACC,EAAA,EAAD,CACEO,QAASgS,KAAK2T,kBACdnmB,MAAM,WAFR,eAiBZ,yBAAKR,UAAWR,EAAQgoB,iBACP,OAAd3B,GACCA,GAAUvd,KAAI,SAAAb,GAIZ,MAHmB,QAAfA,EAAM5C,OACR8gB,IAAW,GAEM,UAAfle,EAAM5C,KAEN,kBAAClC,EAAA,EAAD,CAAM3C,UAAWR,EAAQioB,UAAWpa,IAAK5F,EAAM7C,MAC7C,kBAACnB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KAAa8G,EAAM7C,OAErB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KAAa8G,EAAM1C,QAErB,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,KAAD,CACE5D,UAAWR,EAAQ2lB,gBACnBnkB,QAAS,kBACP,EAAK+lB,uBACHtf,EAAMpG,GACNoG,EAAM7C,KACN6C,EAAM1C,aAQV,QAGd,kBAACkJ,GAAA,EAAD,OAIJ,6BACE,kBAACnF,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAM+kB,WACjBrlB,QAASqR,KAAKiU,wBACdthB,kBAAgB,qBAChBkU,mBAAiB,4BAEjB,kBAAC9Q,GAAA,EAAD,CAAa1H,GAAG,sBACb,gBAEH,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5H,GAAG,4BAAtB,4IAMF,kBAAC0I,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAASgS,KAAKiU,wBACdzmB,MAAM,WAFR,UAMA,kBAACC,EAAA,EAAD,CACEO,QAAS,kBACP,EAAKkmB,kBACH1B,GACAE,GACAD,KAGJjlB,MAAM,WARR,cAkBR,yBACER,UAAWR,EAAQ+nB,cACnBpnB,MAAO,CAAEoC,aAAc,UAEvB,kBAACkB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC7B,kBAAChE,EAAA,EAAD,CAAYD,QAAQ,KAAKP,MAAO,CAAEmD,OAAQ,cAA1C,eAIF,kBAACG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC5B,IACD,6BACGghB,GAAW,KACV,kBAACllB,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNQ,QAASgS,KAAKmT,uBACdhmB,MAAO,CAAEmD,OAAQ,OAAQjB,QAAS,cAJpC,iBAaR,yBAAKrC,UAAWR,EAAQgoB,iBACP,OAAd3B,GACCA,GAAUvd,KAAI,SAAA6E,GACZ,MAAiB,QAAbA,EAAItI,MACN8gB,IAAW,EAET,kBAAChjB,EAAA,EAAD,CAAM3C,UAAWR,EAAQioB,WACvB,kBAAChkB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KAAawM,EAAIvI,OAEnB,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KAAawM,EAAIpI,QAEnB,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,KAAD,CACE5D,UAAWR,EAAQ2lB,gBACnBnkB,QAAS,kBACP,EAAK+kB,0BAA0B5Y,EAAI9L,WAOnC,QAGhB,kBAAC4M,GAAA,EAAD,OAIJ,6BACE,kBAACnF,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAM+jB,cACjBrkB,QAASqR,KAAKiT,2BACdtgB,kBAAgB,qBAChBkU,mBAAiB,4BAEjB,kBAAC9Q,GAAA,EAAD,CAAa1H,GAAG,sBACb,cAEH,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5H,GAAG,4BAAtB,8CAIF,kBAAC0I,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAASgS,KAAKiT,2BACdzlB,MAAM,WAFR,UAMA,kBAACC,EAAA,EAAD,CACEO,QAAS,kBAAM,EAAKklB,gBAAgBN,KACpCplB,MAAM,WAFR,aAUN,6BACE,kBAACsI,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAMqiB,WACjB3iB,QAASqR,KAAKoT,wBACdzgB,kBAAgB,qBAEhB,kBAACoD,GAAA,EAAD,CAAa1H,GAAG,qBAAhB,WACA,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,yCAGA,kBAAC4E,EAAA,EAAD,CACE0F,WAAS,EACTjQ,OAAO,QACPjC,GAAG,UACHsK,MAAM,WACN9G,KAAK,OACLS,MAAO0N,KAAK/Q,MAAM4P,QAClBrI,SAAUwJ,KAAKqT,oBACfhQ,WAAS,EACThN,UAAQ,IAEV,kBAACwE,EAAA,EAAD,CACEvK,OAAO,QACPjC,GAAG,WACHsK,MAAM,YACN9G,KAAK,OACLS,MAAO0N,KAAK/Q,MAAMskB,SAClB/c,SAAUwJ,KAAKsT,qBACfjQ,WAAS,EACThN,UAAQ,KAGZ,kBAACU,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAASgS,KAAKoT,wBACd5lB,MAAM,WAFR,UAMA,kBAACC,EAAA,EAAD,CAAQO,QAASgS,KAAKwT,aAAchmB,MAAM,WAA1C,eAUA,kBAAC+O,EAAA,EAAD,MAEP,kBAAC,IAAD,CAAUjP,GAAG,U,GAjmBG6B,aAsmBd8R,iBAlpBG,SAAAxV,GAAK,MAAK,CAC1BC,KAAM,CACJ0D,MAAO,QAET4D,QAAS,CACP7E,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnClD,WAAYtE,EAAM0F,WAAWujB,mBAE/B1C,WAAY,CACV5iB,MAAO,MACPkB,OAAQ,OACRgB,UAAW,QAEbmjB,UAAW,CACTplB,QAAS,OACTiB,OAAQ,WACRgB,UAAW,MACXzB,aAAc,MACd7D,UAAW,QAEbwoB,gBAAiB,CACfplB,MAAO,MACPkB,OAAQ,OACRgB,UAAW,OACXjC,QAAS,QAGX8iB,gBAAiB,CACf1V,OAAQ,UACR,UAAW,CACTjP,MAAO,QAGX+mB,cAAe,CACbnnB,gBAAiB,UACjBgC,MAAO,MACPkB,OAAQ,OACRgB,UAAW,OACX1B,UAAW,gEA4mBAqR,CAAsB6R,ICvpBjC6B,GAAa,KACbC,GAAW,KA8CTC,G,kDACJ,WAAY7lB,GAAQ,IAAD,uBACjB,cAAMA,IAiBR8lB,8BAAgC,SAACzf,EAAGhH,GAClCgH,EAAEmc,kBACFnc,EAAE8J,iBACFwV,GAAatmB,EACb,EAAK2O,SAAS,CACZ+X,kBAAkB,KAvBH,EA0BnBC,+BAAiC,WAC/B,EAAKhY,SAAS,CACZ+X,kBAAkB,KA5BH,EA+BnBE,oBAAsB,SAAA5mB,GACpB,EAAK2mB,iCACL9d,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,kBAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIA,IAENqJ,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,uBACZ0d,GAAa,KACb5c,OAAOC,SAASC,QAAO,MAGxBC,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OArDC,EA0DnB+c,WAAa,WACXhe,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,WAClBgM,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAIa,GACZ8c,GAAW9c,EAAIP,KAAKA,KACpB,EAAKyF,SACH,CACEmY,YAAard,EAAIP,KAAKA,MAExBP,QAAQC,IAAI,EAAKhI,MAAMkmB,iBAI1Bjd,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OA/EC,EAmFnByJ,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CACZ6E,UAAU,EACVC,KAAMhK,EAAIP,UAIbW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CACZ6E,UAAU,EACVC,KAAM,YAERnK,aAAaoK,WAAW,aAtG5B,IACIF,GAAW,EAHE,MAIH,UAFAlK,aAAaC,QAAQ,WAGjCiK,GAAW,GAGb,EAAK5S,MAAQ,CACX4S,WACAC,KAAM,GACN3N,UAAU,EACVghB,YAAa,KACbJ,kBAAkB,GAbH,E,qDA2GT,IAAD,OACCvoB,EAAYwT,KAAKhR,MAAjBxC,QACR,MAAwB,KAApBwT,KAAK/Q,MAAM6S,MAA0C,OAA3B9B,KAAK/Q,MAAMkmB,aACvCnV,KAAK4B,UACL5B,KAAKkV,aACE,kBAAC3Y,EAAA,EAAD,OAC2B,UAAzByD,KAAK/Q,MAAM6S,KAAKjQ,KACS,OAA3BmO,KAAK/Q,MAAMkmB,YAChB,kBAAC,IAAMjmB,SAAP,KAEE,6BACE,kBAAC4G,GAAA,EAAD,CACEjJ,KAAMmT,KAAK/Q,MAAM8lB,iBACjBpmB,QAASqR,KAAKgV,+BACdriB,kBAAgB,qBAChBkU,mBAAiB,4BAEjB,kBAAC9Q,GAAA,EAAD,CAAa1H,GAAG,sBACb,uBAEH,kBAAC2H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAmB5H,GAAG,4BAAtB,sGAKF,kBAAC0I,GAAA,EAAD,KACE,kBAACtJ,EAAA,EAAD,CACEO,QAASgS,KAAKgV,+BACdxnB,MAAM,WAFR,UAMA,kBAACC,EAAA,EAAD,CACED,MAAM,UACNQ,QAAS,kBAAM,EAAKinB,oBAAoBN,MAF1C,aASN,kBAACjY,GAAD,MACA,yBACEvP,MAAO,CACLC,gBAAiB,OACjBgC,MAAO,MACPkB,OAAQ,YACRV,UACE,8DAGJ,kBAACjC,EAAA,EAAD,CAAYD,QAAQ,MAApB,YAGF,yBAAKP,MAAO,CAAEiC,MAAO,MAAOkB,OAAQ,SACjCskB,GACGA,GAAStf,KAAI,SAAAiC,GACX,IAAI6d,EAAS7d,EAAKgR,IAClB,OACE,kBAACnO,GAAA,EAAD,CACEpN,UAAWR,EAAQulB,UACnB1X,IAAK9C,EAAKuT,UAEV,kBAACxQ,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACoC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,CAAYD,QAAQ,MACjB6J,EAAKuT,WAGV,kBAACra,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJzD,MAAO,CAAEnB,UAAW,QAASqD,QAAS,SAEtC,kBAAC,KAAD,CACErB,QAAS,SAAAqH,GAAC,OACR,EAAKyf,8BAA8Bzf,EAAG+f,IAExCpoB,UAAWR,EAAQ2lB,gBACnBhlB,MAAO,CAAEmD,OAAQ,YAKzB,kBAACmK,GAAA,EAAD,KACE,yBAAKtN,MAAO,CAAEiC,MAAO,SAClBmI,EAAK8d,OAAO/f,KAAI,SAAAiZ,GACf,OACE,kBAACnU,GAAA,EAAD,CAAWC,IAAKkU,EAAM3c,MACpB,kBAAC0I,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC5BhB,GAAqBuc,EAAM3c,QAGhC,kBAAC6I,GAAA,EAAD,KACE,yBAAKtN,MAAO,CAAEiC,MAAO,SACnB,kBAACgL,GAAA,EAAD,CAAWpN,UAAWR,EAAQwlB,YAC5B,kBAAC1X,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAA/B,YAIF,kBAACyH,GAAA,EAAD,KACE,kBAAC,IAAMvL,SAAP,KACE,yBAAK/B,MAAO,CAAEiC,MAAO,SACnB,kBAACO,EAAA,EAAD,CAAM3C,UAAWR,EAAQylB,WACvB,kBAACxhB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACE,qCAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACE,sCAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACE,uCAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,MAGlB2d,EAAMrV,QAAQ5D,KAAI,SAAAkF,GACjB,OACE,kBAAC7K,EAAA,EAAD,CACE3C,UAAWR,EAAQylB,UACnB5X,IAAKG,EAAO5I,MAEZ,kBAACnB,EAAA,EAAD,CACEC,WAAS,EACT2J,IAAKG,EAAOE,QAEZ,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACG6M,EAAO5I,OAGZ,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACG6M,EAAOzI,QAGZ,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,KACG6M,EAAOE,SAGZ,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,aAS/B,kBAACwJ,GAAA,EAAD,CAAWpN,UAAWR,EAAQwlB,YAC5B,kBAAC1X,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAA/B,cAIF,kBAACyH,GAAA,EAAD,KACE,yBAAKzN,UAAWR,EAAQd,MACM,IAA3B6iB,EAAMzU,UAAUC,OACfwU,EAAMzU,UAAUxE,KACd,SAACkT,EAAUjW,GACT,IAAI0H,EACFuO,EAASvO,SAEX,OACE,kBAACG,GAAA,EAAD,CACEjN,MAAO,CACLnB,UAAW,QAEbqO,IAAKmO,EAASzc,OAEd,kBAACuO,GAAA,EAAD,CACEC,WACE,kBAAC,KAAD,MAEFzM,gBAAc,kBACdO,GAAG,kBAEH,kBAACV,EAAA,EAAD,CACEX,UACER,EAAQwG,SAFZ,YAKYT,EAAQ,IAGtB,kBAACkI,GAAA,EAAD,KACE,kBAAChK,EAAA,EAAD,CACEC,WAAS,EACT1D,UACER,EAAQqiB,QAEV/iB,QAAS,GAET,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,yDAIC6a,EAASzc,QAGd,kBAAC0E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,qEAKC6a,EAAS1C,UAGd,kBAACrV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,+FAOC6a,EAASzC,SAGd,kBAACtV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,4EAIC6a,EAASrR,SAGd,kBAAC1G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,sEAKE6a,EAASvC,eAIf,kBAACxV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,gEAKE6a,EAAS3C,iBAIf,kBAACpV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,uDAIC6a,EAASxC,SAGd,kBAACvV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,iDAKC6a,EAASxO,QAAQiU,OAChB,EACA,MAKN,kBAACxd,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASC,MACR,kBAACvM,EAAA,EAAD,KACE,qDADF,YAQA,kBAACA,EAAA,EAAD,KACE,qDADF,iBASJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASE,IACR,kBAACxM,EAAA,EAAD,KACE,mDADF,YAQA,kBAACA,EAAA,EAAD,KACE,mDADF,iBAUJ,kBAAC8C,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJ1D,MAAO,CACLnB,UAAW,iBAU3B,kBAAC2B,EAAA,EAAD,gDAiB5B,OAIR,kBAAC4O,EAAA,EAAD,MAGK,kBAAC,IAAD,CAAUjP,GAAG,U,GA/eE6B,aAmfb8R,iBA/hBG,SAAAxV,GAAK,MAAK,CAC1BC,KAAM,CACJ0D,MAAO,QAET2iB,UAAW,CACT3kB,gBAAiB,UACjBkD,OAAQ,QAEVohB,mBAAoB,CAClBtiB,MAAO,MACPkB,OAAQ,WACRgB,UAAW,QAEbihB,aAAc,CACZnjB,MAAO,MACPhC,gBAAiB,WAEnB6kB,UAAW,CACT7iB,MAAO,OACPC,QAAS,UACTiC,UAAW,MACXtF,UAAW,QAEbgmB,WAAY,CACV5kB,gBAAiB,WAEnB4F,QAAS,CACPjD,WAAY,QAEdoiB,gBAAiB,CACf1V,OAAQ,UACR,UAAW,CACTjP,MAAO,QAGX6kB,SAAU,CACRjjB,MAAO,OACPC,QAAS,UACTiC,UAAW,MACXzB,aAAc,MACd7D,UAAW,WAufAiV,CAAsB4T,IChjBjC/gB,GAAO,KAELvI,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJ0D,MAAO,QAET4D,QAAS,CACP7E,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnClD,WAAY,MACZmD,UAAW,SACXC,WAAY,GAEdC,iBAAkB,CAChBjF,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCzF,MAAO/B,EAAM4H,QAAQC,KAAKC,WAE5BC,MAAO,CACLpE,MAAO,OACPkB,OAAQ,QAEVmD,SAAU,CACRrE,MAAO,OACPkB,OAAQ,YA4NCglB,GArNQ,SAACtmB,GAAW,IAAD,EACHvC,IAAMC,SAAS,MADZ,mBACvBuS,EADuB,KAChBsW,EADgB,OAEH9oB,IAAMC,UAAS,GAFZ,mBAEvBqT,EAFuB,KAEhByV,EAFgB,KAGxBvhB,EAASC,cACT1H,EAAUjB,KAJc,EAKEkB,IAAMC,UAAS,GALjB,mBAKvByH,EALuB,KAKbC,EALa,OAMD3H,IAAMC,UAAS,GANd,mBAMvB8S,EANuB,KAMfiW,EANe,KAsC9B,OAAGjW,EAEK,kBAACvE,GAAA,EAAD,OAGI,OAATgE,IAjCCwW,GAAW,GACXve,IAAM,CACNC,OAAQ,MACRC,IAAK9L,EAAa,cAClBgM,iBAAiB,EACjBI,QAAU,CACN+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGnDC,MAAK,SAAAC,GACFhE,GAASgE,EAAIP,KACbge,EAAU,OACVC,GAAU,GACVC,GAAW,MAGdvd,OAAM,SAAUC,GACbnB,QAAQC,IAAIkB,GACZsd,GAAW,OAkBhB1V,EAEoB,IAAhBjM,GAAOiG,OAEF,kBAAC,IAAM7K,SAAP,KACI,kBAACvB,EAAA,EAAD,CAAYR,MAAO,CAACmD,OAAO,QAAS5C,QAAQ,MAA5C,mBAGCoG,GAAOwB,KAAI,SAAA0D,GACR,IApBCpD,EA0BGqD,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GAIXkL,EAAY,KAWZ,OAT2B,IAA3BP,EAAMc,UAAUC,SAKhBR,EAJQP,EAAMc,UAAU,GAINE,QAAQ3B,MAAM,KAAK,IAKrC,kBAAC+B,GAAA,EAAD,CACIjN,MAAO,CACHiC,MAAO,MACPkB,OAAQ,OACRtE,UAAW,OACXsF,UAAW,MACX1B,UACA,6DAEJuE,SAAUA,IAAagF,EACvB3C,UAvDPZ,EAuD8BuD,EAvDrB,SAAClL,EAAO4H,GAClCzB,IAAYyB,GAAaD,KAuDD5I,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC1BhB,GAAqBgH,EAAMpH,OAE/BsH,EAAQ5D,KAAI,SAAAkF,GACT,OACA,kBAAC7M,EAAA,EAAD,CACI0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJZ,wBASJ,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACrC,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACrB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACvB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIA,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACdsI,EAAQ5D,KAAI,SAAAkF,GACT,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAO5I,YAKtD,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACvB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIA,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACdsI,EAAQ5D,KAAI,SAAAkF,GACT,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAOzI,aAKtD,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACvB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIA,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACdsI,EAAQ5D,KAAI,SAAAkF,GACT,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAOE,cAKtD,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACdqI,GAAWM,EACR,kBAAC5L,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,SAAWE,QAAQ,MAA/C,+BAIA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,OAASE,QAAQ,MAA7C,6BAKJ,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,GAAI,IACG,IAA3BoI,EAAMc,UAAUC,OACb,kBAAC,IAAM7K,SAAP,KACI,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACnD,EAAA,EAAD,CACAO,QAtHJ,WAChBiG,EAAO0G,KAAK,CACZC,SAAS,gBAAD,OAAkBvM,MAqHNX,QAAQ,WACRF,MAAM,WAHN,kBAUR,kBAACC,EAAA,EAAD,CAAQ4N,UAAQ,EAAC3N,QAAQ,WAAWF,MAAM,aACtC,kBAACG,EAAA,EAAD,uCAWpB,kBAAC,EAAD,OAKR,kBAACA,EAAA,EAAD,+CAQJ,kBAACsN,GAAA,EAAD,QC3OSqU,G,kDACnB,WAAYtgB,GAAQ,IAAD,uBACjB,cAAMA,IAYR4S,QAAU,WACR1K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ,EAAKkF,SAAS,CACZ6E,UAAU,EACVC,KAAMhK,EAAIP,UAGbW,OAAM,SAAAC,GACL,EAAK6E,SAAS,CACZ6E,UAAU,EACVC,KAAM,YAERnK,aAAaoK,WAAW,aA/B5B,IACIF,GAAW,EAHE,MAIH,UAFAlK,aAAaC,QAAQ,WAGjCiK,GAAW,GAEb,EAAK5S,MAAQ,CACX4S,WACAC,KAAM,IATS,E,qDAuCjB,MAAwB,KAApB9B,KAAK/Q,MAAM6S,MACb9B,KAAK4B,UACE,kBAACrF,EAAA,EAAD,OAC2B,UAAzByD,KAAK/Q,MAAM6S,KAAKjQ,KAEvB,6BACE,kBAAC,IAAM3C,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,CAASsC,SAAUwO,KAAK/Q,MAAM6S,KAAMrQ,aAAc,OAClD,kBAAC,GAAD,CAAgBD,SAAUwO,KAAK/Q,MAAM6S,SAKpC,kBAAC,IAAD,CAAUxU,GAAG,U,GAtDO6B,aCgBjC,SAAS8O,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAGtD,IACImP,GAAK,KACLrK,GAAS,KACPuV,GAAO,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAyDImG,G,kDACJ,WAAYxgB,GAAQ,IAAD,8BACjB,cAAMA,IAeR0mB,UAAY,SAACrgB,EAAGhH,GACd,IAAI2a,EAAK,IAAIhY,KAAK,EAAK/B,MAAM0mB,UAC7B3e,QAAQC,IAAI+R,EAAG4M,eACf5e,QAAQC,IAAI,EAAKhI,MAAM0mB,UACvB,EAAK3Y,SAAS,CAAE6Y,iBAAiB,IACjC3e,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,gBAClBgM,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBqe,SAAU9M,EAAG4M,cACb3F,IAAK5hB,IAEPqJ,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,aACZ,EAAK+F,SAAS,CAAE6Y,iBAAiB,OAGlC3d,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,GACZ6H,KAAKhD,SAAS,CAAE6Y,iBAAiB,QAzCpB,EA6CnBE,qBAAuB,SAAA1gB,GACrB,EAAK2H,SAAS,CAAE2Y,SAAUtgB,EAAEvE,OAAOwB,SA9ClB,EAkDnB6b,eAAiB,SAAA9Y,GACf,IAAI0T,EAAU1T,EAAEvE,OAAOwB,MACvB,EAAK0K,SACH,CACE+L,QAASA,KAtDI,EA8DnBhc,YAAc,SAACkB,EAAO6Q,GACL,cAAXA,GAIJ,EAAK9B,SAAS,CACZ+B,aAAa,EACbC,aAAa,EACbC,OAAQ,QAtEO,EAqInBmP,cAAgB,SAACC,EAAKhgB,GACpB2I,QAAQC,IAAIoX,EAAKhgB,GACjB6I,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,WAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIA,EACJggB,IAAKA,IAEP3W,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAA8K,GACJ3L,QAAQC,IAAI0L,GACZ,EAAK3F,SAAS,CACZiC,OAAQ,KACRc,QAAQ,EACR5B,GAAI,UAGPjG,OAAM,SAAAC,GACLnB,QAAQC,IAAIkB,OA9JC,EAkKnBxC,aAAe,SAAAC,GAAK,OAAI,SAAC3H,EAAOkG,GAC9B,EAAK6I,SAAS,CACZ7I,WAAUA,GAAWyB,MApKN,EAwKnBogB,iBAAmB,SAAC3gB,EAAG4gB,EAASC,GAC9Blf,QAAQC,IAAI,EAAKhI,MAAM8a,OACvB/S,QAAQC,IAAI,EAAKhI,MAAMknB,YACnBC,SAAS,EAAKnnB,MAAM8a,MAAO,IAAMqM,SAAS,EAAKnnB,MAAMknB,WAAY,KACnE/d,MAAM,mDACN,EAAK4E,SAAS,CAAE+M,MAAO,GAAIoM,WAAY,MAEvCjf,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,qBAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBwY,IAAKgG,EACL5H,IAAK6H,EACLnM,MAAO,EAAK9a,MAAM8a,MAAQ,IAAM,EAAK9a,MAAMknB,aAE7Cze,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAA8K,GACJ3L,QAAQC,IAAI,mBACZ,EAAK+F,SAAS,CAAE+M,MAAO,GAAIoM,WAAY,KACvCpe,OAAOC,SAASC,YAEjBC,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAE+M,MAAO,GAAIoM,WAAY,KACvCnf,QAAQC,IAAIkB,OArMD,EA0MnBke,YAAc,SAAAhhB,GACZ,EAAK2H,SAAS,CAAE+M,MAAO1U,EAAEvE,OAAOwB,SA3Mf,EA6MnBgkB,iBAAmB,SAAAjhB,GACjB,EAAK2H,SAAS,CAAEmZ,WAAY9gB,EAAEvE,OAAOwB,SA9MpB,EAiNnBikB,yBAA2B,SAAClhB,EAAGmhB,EAAKC,GAClCvf,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,sBAClBgM,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjB4W,IAAKmI,EACLvG,IAAKwG,IAEP/e,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJd,QAAQC,IAAI,WACZc,OAAOC,SAASC,YAGjBC,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,OAnOhB,EAAKlJ,MAAQ,CACXkF,SAAU,KACV8K,OAAQ,KACRc,QAzEO,EA0EPgJ,QAAS,GACThK,aAAa,EACbC,aAAa,EACb6W,iBAAiB,EACjBF,SAAU,GACV5L,MAAO,GACPoM,WAAY,IAZG,E,wDA0EP7H,GAAM,IAAD,OACPvF,EAAY/I,KAAK/Q,MAAjB8Z,QACQ,KAAZA,EACF/I,KAAKhD,SAAS,CACZgC,aAAa,IAGf9H,IAAM,CACJC,OAAQ,OACRC,IAAK9L,EAAa,WAClB+L,YAAa,UACbC,iBAAiB,EACjBC,KAAMC,KAAGC,UAAU,CACjBpJ,GAAIigB,EACJhM,IAAKyG,IAEPrR,QAAS,CACP,eAAgB,kDAChB+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAA8K,GACJ,EAAK3F,SAAS,CAAE+B,aAAa,EAAMS,SAAS,IAC5CxI,QAAQC,IAAI0L,GACZ,EAAK3F,SAAS,CACZ+L,QAAS,GACT9J,OAAQ,UAIX/G,OAAM,SAAAC,GACL,EAAK6E,SAAS,CAAEgC,aAAa,EAAMQ,SAAS,IAC5CxI,QAAQC,IAAIkB,Q,kCAKP,IAAD,OACVjB,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,cAClBgM,iBAAiB,EACjBI,QAAS,CACP+D,cAAe,UAAY9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJqG,GAAKrG,EAAIP,KAAKwC,OACdjG,GAASgE,EAAIP,KACb,EAAKyF,SAAS,CACZiC,OAAQ,MACRc,QAAQ,OAGX7H,OAAM,SAAUC,GACfnB,QAAQC,IAAIkB,Q,+BAwGR,IAAD,OACC3L,EAAYwT,KAAKhR,MAAjBxC,QACA2H,EAAa6L,KAAK/Q,MAAlBkF,SAIR,OAH0B,OAAtB6L,KAAK/Q,MAAMgQ,QACbe,KAAKC,aAEmB,IAAtBD,KAAK/Q,MAAM8Q,QAA0B,IAAP5B,GAE9B,kBAAC,IAAMjP,SAAP,KACE,kBAAC,GAAD,MACA,yBAAK/B,MAAO,CAAEiC,MAAO,MAAOkB,OAAQ,SACjCwD,GAAOwB,KAAI,SAAAiZ,GACV,IAAID,EAAMC,EAAMlgB,GAChB,GAAIkgB,EAAMlgB,KAAO,EAAKW,MAAM0nB,MAAMC,OAAOtoB,GAAI,CAC3C,IAAIib,EAAgBiF,EAAM/E,aACtBzF,EAAYwK,EAAMzU,UAClB8T,EAAWW,EAAMzF,SAOrB,OANAQ,EAAcG,MAAK,SAACrL,EAAGsL,GAAJ,OACjB,IAAI1Y,KAAKoN,EAAEuL,gBAAgBC,UAC3B,IAAI5Y,KAAK0Y,EAAEC,gBAAgBC,UACvB,GACC,KAGL,yBAAKvP,IAAKkU,EAAMlgB,IACd,kBAACoC,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,EAAGkB,UAAWR,EAAQmiB,MAC7C,kBAACle,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,CAAYD,QAAQ,MAClB,2BAAIsE,GAAqBuc,EAAM3c,UAIpCmS,EAAUzO,KAAI,SAACkT,EAAUjW,GACxB,IAAMqD,EAAQ4S,EAASzc,MACnBkO,EAAWuO,EAASvO,SACpBoU,EAAM7F,EAASD,IACfqG,EAAc,IAAI5d,KAAKwX,EAASxO,SACpC,OACE,kBAACI,GAAA,EAAD,CACEC,IAAKmO,EAASD,IACdpU,SAAUA,IAAayB,EACvBY,SAAU,EAAKb,aAAaC,IAE5B,kBAAC0E,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEFma,EAASvO,SAASC,MACjB,kBAACvM,EAAA,EAAD,CACEX,UAAWR,EAAQwG,QACnB7F,MAAO,CAAEK,MAAO,YAEhB,uCAAa+E,EAAQ,IAGvB,kBAAC5E,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC7B,uCAAaT,EAAQ,IAIzB,kBAAC5E,EAAA,EAAD,CAAYX,UAAWR,EAAQ4G,kBAC5BoV,EAASzc,OAGXyc,EAASvO,SAASC,MACjB,kBAACvM,EAAA,EAAD,CACER,MAAO,CACLK,MAAO,UACP8C,OAAQ,SAGV,kBAAC,KAAD,CAAUwK,KAAK,WAGjB,kBAACnN,EAAA,EAAD,CACER,MAAO,CAAEK,MAAO,MAAO8C,OAAQ,SAE/B,kBAAC,KAAD,CAAWwK,KAAK,YAItB,kBAACL,GAAA,EAAD,CAAkBtN,MAAO,CAAEnB,UAAW,SACpC,kBAACyE,EAAA,EAAD,CACEC,WAAS,EACT1D,UAAWR,EAAQqiB,QACnB/iB,QAAS,GAET,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,yDACC6a,EAASzc,QAGd,kBAAC0E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,qEAGC6a,EAAS1C,UAGd,kBAACrV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,+FAIC6a,EAASzC,SAGd,kBAACtV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,4EAIC6a,EAASrR,SAGd,kBAAC1G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,sEAGC6a,EAASvC,eAId,kBAACxV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,gEACC6a,EAAS3C,iBAGd,kBAACpV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,uDACC6a,EAASxC,SAGd,kBAACvV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACjD,EAAA,EAAD,KACE,iDACCihB,EAAY/X,UAFf,IAGG+X,EAAYhY,WAAa,EAH5B,IAIGgY,EAAY3d,gBAGjB,kBAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASC,MACR,kBAACvM,EAAA,EAAD,KACE,6DADF,YAKA,kBAACA,EAAA,EAAD,KACE,6DADF,iBAMJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACZqJ,EAASE,IACR,kBAACxM,EAAA,EAAD,KACE,2DADF,YAKA,kBAACA,EAAA,EAAD,KACE,2DADF,iBAMJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACpD,EAAA,EAAD,CACEC,QAAQ,WACRF,MAAM,UACNQ,QAAS,WACP+J,OAAOlL,KAAP,gCAC2B2b,EAAStB,iBALxC,2BAYF,kBAACzW,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJ1D,MAAO,CAAEnB,UAAW,UAEnBwc,EAASvO,SAASC,MACjB,6BACIsO,EAASvO,SAASE,IAYlB,kBAAC1M,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNsN,KAAK,SAHP,YAXA,kBAACrN,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNsN,KAAK,QACL9M,QAAS,WACP,EAAKogB,cAAcC,EAAKC,KAL5B,qBAqBJ,6BACI9F,EAASvO,SAASE,IASlB,kBAAC1M,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNsN,KAAK,SAHP,sCARA,kBAACrN,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNsN,KAAK,SAHP,wBAwBlB,kBAACnL,EAAA,EAAD,CACExC,MAAO,CACLmE,UAAW,OACXlE,gBAAiB,UACjBiC,QAAS,SAGX,kBAACoB,EAAA,EAAD,CAAMtD,MAAO,CAAEmE,UAAW,QAAUZ,WAAS,GAC3C,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,CACER,MAAO,CAAEoC,aAAc,QACvB7B,QAAQ,MAFV,iBAOF,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,0BACEuP,SAAU,SAAA9K,GACR,EAAKqgB,UAAUrgB,EAAGiZ,KAGpB,kBAAC7d,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJzD,MAAO,CACLkC,QAAS,MACTjC,gBAAiB,SAGlB,IACD,kBAACyN,EAAA,EAAD,CACExM,GAAG,iBACHsK,MAAM,oBACN9G,KAAK,iBACL+kB,cAAc,IAAI5lB,MAAO4kB,cACzB5oB,UAAWR,EAAQqqB,UACnBxgB,UAAQ,EACRygB,gBAAiB,CACfC,QAAQ,GAEVvgB,SAAU,EAAKuf,qBACf5oB,MAAO,CACLkC,QAAS,WACTQ,aAAc,UAIpB,kBAACY,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJzD,MAAO,CACLkC,QAAS,MACTrD,UAAW,OACXoB,gBAAiB,SAGlB,IACC,EAAK6B,MAAM4mB,gBAUX,kBAAC5a,GAAA,EAAD,MATA,kBAACxN,EAAA,EAAD,CACEoE,KAAK,SACLnE,QAAQ,YACRF,MAAM,UACNL,MAAO,CAAEmD,OAAQ,SAJnB,gBAeV,kBAACG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACa,IAAzB0Y,EAAcvP,OACb,kBAAC,IAAM7K,SAAP,KACGoa,EAAchU,KAAI,SAACkU,EAAcjX,GAChC,IAAMqD,EAAQ4T,EAAajB,IACvBuF,EAAI,IAAI9c,KAAKwY,EAAaG,gBAC9B,OACE,kBAACvP,GAAA,EAAD,CACEC,IAAKmP,EAAajB,IAClBpU,SAAUA,IAAayB,EACvBY,SAAU,EAAKb,aAAaC,IAE5B,kBAAC0E,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACoC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,CAAYD,QAAQ,MAClB,2CAAiB6E,EAAQ,KAGL,OAAvBiX,EAAaO,MACZ,kBAAC,IAAM7a,SAAP,KACG4e,EAAElE,UAAY5Y,KAAKgZ,MAClB,kBAAC,IAAM9a,SAAP,KACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,qCAMJ,kBAAC,IAAMuB,SAAP,KACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,CAAYH,MAAM,aAAlB,2BAQR,kBAAC,IAAM0B,SAAP,KACE,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACjD,EAAA,EAAD,CACER,MAAO,CAAEK,MAAO,UADlB,8BAUV,kBAACiN,GAAA,EAAD,CACEtN,MAAO,CAAEnB,UAAW,SAEpB,kBAACyE,EAAA,EAAD,CACEC,WAAS,EACT1D,UAAWR,EAAQqiB,QACnB/iB,QAAS,EACTqB,MAAO,CACLkC,QAAS,QAGX,kBAACoB,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJzD,MAAO,CACLnB,UAAW,OACXoB,gBAAiB,YAGnB,kBAAC,IAAM8B,SAAP,KACG4e,EAAE3E,WAAa,GACd,kBAACxb,EAAA,EAAD,CAAYD,QAAQ,MACjBogB,EAAE3E,WAAa,GADlB,IAEG2E,EAAE1E,aAFL,OAKA,kBAACzb,EAAA,EAAD,CAAYD,QAAQ,MACjBogB,EAAE3E,WADL,IACkB2E,EAAE1E,aAAc,IADlC,MAKDC,GAAKyE,EAAEhE,UAZV,IAYsBgE,EAAEjX,UAZxB,IAaGiX,EAAElX,WAAa,EAblB,IAasBkX,EAAE7c,gBAGF,OAAvBuY,EAAaO,OACd+D,EAAElE,WAAa5Y,KAAKgZ,MAClB,kBAACvZ,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJzD,MAAO,CACLC,gBAAiB,OACjBiC,QAAS,MACTiB,OAAQ,UACRmR,OAAQ,sBAGV,kBAAChR,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJzD,MAAO,CAAEnB,UAAW,UAEpB,kBAAC6O,EAAA,EAAD,CACEC,KAAK,QACLjJ,KAAK,SACLS,MAAO,EAAKrD,MAAM8a,MAClBrc,QAAQ,WACRiL,MAAM,iBACNnC,SAAU,EAAK6f,YACflpB,MAAO,CACLmD,OAAQ,WACRlD,gBAAiB,WAIvB,kBAACqD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACiK,EAAA,EAAD,CACEC,KAAK,QACLjJ,KAAK,SACLS,MAAO,EAAKrD,MAAMknB,WAClBzoB,QAAQ,WACRiL,MAAM,cACNnC,SACE,EAAK8f,iBAEPnpB,MAAO,CACLmD,OAAQ,WACRlD,gBAAiB,WAIvB,kBAACqD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACnD,EAAA,EAAD,CACEqN,KAAK,QACLpN,QAAQ,YACRF,MAAM,UACNQ,QAAS,SAAAqH,GACP,EAAK2gB,iBACH3gB,EACAiZ,EACA9E,EAAajB,MAGjBpb,MAAO,CAAEmD,OAAQ,aAXnB,mBAkBJ,KACoB,OAAvBkZ,EAAaO,MACZ,kBAAC,IAAM7a,SAAP,KACE,kBAACuB,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJzD,MAAO,CACLsU,OAAQ,oBACRpS,QAAS,SAGX,kBAAC1B,EAAA,EAAD,CAAYD,QAAQ,MAApB,sBAEG8b,EAAaO,QAGlB,kBAACtZ,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,EACJzD,MAAO,CAAEnB,UAAW,UAEpB,kBAACyB,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNQ,QAAS,SAAAqH,GACP,EAAKkhB,yBACHlhB,EACAmU,EAAajB,IACb+F,KAPN,yBAgBJ,kBAAC7d,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJzD,MAAO,CAAEnB,UAAW,UAEpB,kBAACyB,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,YACNQ,QAAS,SAAAqH,GACP,EAAKkhB,yBACHlhB,EACAmU,EAAajB,IACb+F,KAPN,+BAsBhB,kBAAC,IAAMpf,SAAP,KACE,kBAACvB,EAAA,EAAD,sCAMV,yBACER,MAAO,CACLC,gBAAiB,UACjBiC,QAAS,WACTiB,OAAQ,YACRV,UACE,8DAGJ,kBAACa,EAAA,EAAD,CAAMC,WAAS,EAAC1D,UAAWR,EAAQuc,SACjC,kBAACtY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIzD,MAAO,CAAEoC,aAAc,SACxC,kBAAC5B,EAAA,EAAD,CACED,QAAQ,KACRP,MAAO,CAAEnB,UAAW,OAAQ+D,WAAY,QAF1C,aAOF,kBAACU,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQsiB,UAEnB,kBAACnhB,EAAA,EAAD,KACE,8CAGJ,kBAAC8C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,GAC7B,kBAACkJ,EAAA,EAAD,CACE7N,UAAWR,EAAQuiB,SACnBrhB,QAAQ,WACRoF,UAAW,OACXuU,WAAS,EACTC,WAAY,CAAEna,MAAO,CAAEgB,SAAU,KACjCoZ,KAAM,EACNlZ,GAAG,UACHuD,KAAK,UACLC,KAAK,OACLS,MAAO,EAAKrD,MAAM8Z,QAClBvS,SAAU,EAAK2X,kBAGnB,kBAAC1d,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,GACJc,GAAI,EACJ3E,UAAWR,EAAQwiB,WAEnB,kBAACvhB,EAAA,EAAD,CACEC,QAAQ,YACRF,MAAM,UACNQ,QAAS,WACP,EAAKihB,YAAYX,KAJrB,gBASA,kBAACzN,GAAA,EAAD,CACEhU,KAAM,EAAKoC,MAAM8P,YACjB+B,iBAAkB,IAClBnS,QAAS,EAAK5B,aAEd,kBAAC,GAAD,CACE4B,QAAS,EAAK5B,YACdgU,SAAS,WAFX,uBAOF,kBAACF,GAAA,EAAD,CACEhU,KAAM,EAAKoC,MAAM+P,YACjB8B,iBAAkB,IAClBnS,QAAS,EAAK5B,aAEd,kBAAC,GAAD,CAAO4B,QAAS,EAAK5B,YAAagU,SAAS,SAA3C,2CAKJ,kBAACtQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIc,GAAI,IAC7B,kBAAC,GAAD,CAAgBic,SAAUA,QAM/B,OAAO,UAKV,kBAACrR,EAAA,EAAD,U,GA/2BQpN,aAu3BX8R,iBA36BA,SAAAxV,GAAK,MAAK,CACvBC,KAAM,CACJ0D,MAAO,OACP,YAAa,CACXkC,UAAW7F,EAAMK,QAAQ,KAG7BkH,QAAS,CACP7E,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEdC,iBAAiB,aACfjF,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCzF,MAAO/B,EAAM4H,QAAQC,KAAKC,UAC1BL,UAAW,SACXC,WAAY,EACZnH,UAAW,QACVP,EAAMS,YAAYI,KAAK,OAAS,CAC/BF,QAAS,SAGbuiB,KAAM,CACJre,OAAQ,OACRtE,UAAW,UAEb+c,QAAS,CACPzX,UAAW,QAEbwd,SAAS,aACP9iB,UAAW,QACXsE,OAAQ,UACP7E,EAAMS,YAAYI,KAAK,MAAQ,CAC9BN,UAAW,SAGf+iB,SAAS,aACP3f,MAAO,MACPhC,gBAAiB,QAChB3B,EAAMS,YAAYI,KAAK,MAAQ,CAC9B8C,MAAO,SAGX4f,UAAU,aACRhjB,UAAW,OACXsE,OAAQ,UACP7E,EAAMS,YAAYI,KAAK,MAAQ,CAC9BN,UAAW,aA43BFiV,CAAmBuO,ICv8BlC,SAASvR,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAGtD,IAwDMgoB,G,kDACL,WAAYhoB,GAAQ,IAAD,8BAClB,cAAMA,IAYP2G,aAAe,SAAA/D,GAAI,OAAI,YAA4B,IAAfU,EAAc,EAAxBxB,OAAUwB,MACnC,EAAK0K,SAAL,eAAiBpL,EAAOU,MAZxB,EAAKrD,MAAO,CACX6T,MAAOnL,aAAaC,QAAQ,SAC5B0K,IAAM,GACNvQ,MAAQ,GACRyN,SAAU,EACVT,aAAY,EACZkY,UAAS,EACTjY,aAAY,GAEb,EAAK0D,WAAa,EAAKA,WAAWD,KAAhB,iBAXA,E,uDAgBRpN,GAAG,IAAD,OACZA,EAAE8J,iBACFa,KAAKhD,SAAS,CAACwC,SAAQ,IACvB,IAAIzN,EAAQiO,KAAK/Q,MAAM8C,MACvBmF,IAAM,CACLC,OAAQ,OACRC,IAAK9L,EAAW,kBAChBiM,KAAMC,KAAGC,UAAU,CAAC1F,MAAOA,IAC3B2F,QAAS,CACT,eAAgB,qDAEfG,MAAK,SAACC,GACW,MAAdA,EAAIP,KAAK,GACX,EAAKyF,SAAS,CACbsF,IAAIxK,EAAIP,KACRiI,SAAQ,EACRyX,UAAS,IAGV,EAAKja,SAAS,CACbsF,IAAIxK,EAAIP,KACRiI,SAAQ,EACRT,aAAY,OAGd7G,OAAM,SAACC,GACP,EAAK6E,SAAS,CACbsF,IAAI,+DACJ9C,SAAQ,EACRR,aAAY,S,+BAKN,IAAD,OACR,GAAuB,MAApBgB,KAAK/Q,MAAM6T,MACb,OAAO,kBAAC,IAAD,CAAUxV,GAAG,IAAIyV,OAAK,IAE9B,GAAG/C,KAAK/Q,MAAMuQ,QACb,OAAO,kBAACjD,EAAA,EAAD,MALA,IAOA/P,EAAYwT,KAAKhR,MAAjBxC,QACFO,EAAc,SAACkB,EAAO6Q,GACxB,EAAK7P,MAAM8P,YACb,EAAK/B,SAAS,CAAC+B,aAAa,IAErB,EAAK9P,MAAMgoB,SAClB,EAAKja,SAAS,CAACia,UAAU,IAElB,EAAKhoB,MAAM+P,aAClB,EAAKhC,SAAS,CAACgC,aAAa,KAG9B,OACC,kBAAC,IAAM9P,SAAP,KACA,yBAAKlC,UAAWR,EAAQwW,WAChB,kBAACrV,EAAA,EAAD,CAAYD,QAAQ,KAAKV,UAAWR,EAAQT,OAC1C,yDAEF,kBAACkX,GAAA,EAAD,CAAWnQ,UAAU,OAAOwI,SAAS,KAAKtO,UAAWR,EAAQ6U,OAC3D,kBAAC6B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAQzV,QAAQ,SAASV,UAAWR,EAAQ4W,QAC7C,kBAAC,KAAD,CAAYjV,SAAS,WAEvB,kBAACR,EAAA,EAAD,CAAYmF,UAAU,KAAKpF,QAAQ,MACjC,+CAEC,0BAAMV,UAAWR,EAAQ+U,KAAMpB,SAAUH,KAAK0C,YAC5C,kBAAC7H,EAAA,EAAD,CACEhJ,KAAK,QACLnE,QAAQ,SACR4C,OAAO,SACP+F,UAAQ,EACRgN,WAAS,EACThV,GAAG,QACHsK,MAAM,QACNrG,MAAO0N,KAAK/Q,MAAM8C,MAClByE,SAAUwJ,KAAKrK,aAAa,SAC5B3I,UAAWR,EAAQgV,SAGrB,kBAAC/T,EAAA,EAAD,CACEoE,KAAK,SACLwR,WAAS,EACT3V,QAAQ,YACRF,MAAM,UACNR,UAAWR,EAAQoU,QALrB,mBAWX,kBAACC,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAM8P,YAAapQ,QAAS5B,GAChD,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,WACrCf,KAAK/Q,MAAMqT,MAGb,kBAACzB,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAMgoB,SAAUtoB,QAAS5B,GAC7C,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,QACrCf,KAAK/Q,MAAMqT,MAGb,kBAACzB,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAM+P,YAAarQ,QAAS5B,GAChD,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,SACpCf,KAAK/Q,MAAMqT,a,GAzHWnT,aAqId8R,iBA7LG,SAAAxV,GAAK,YAAK,CAE3BuX,UAAW,CACVQ,gBAAgB,OAAD,OAAStT,KAAT,KACfuT,eAAgB,QAChBC,OAAQ,QAETrC,MAAM,aACLkC,WAAY,cACZ1T,aAAc,MACd+D,MAAO,SACPxH,QAAS,OACT8U,cAAe,SACfP,WAAY,SACZnT,MAAO,OACP2C,WAAY,QACX1E,EAAMS,YAAYI,KAAK,OAAS,CAC/B6D,WAAY,SAGfoR,KAAM,CACFnS,MAAO,MACPkC,UAAW7F,EAAMK,QAAQ,IAE7B8U,OAAQ,CACPtQ,OAAQ7E,EAAMK,QAAQ,EAAG,EAAG,GAC5BuD,QAAS,OACTlB,SAAU,OACV4B,WAAY,SACZ3C,gBAAiB,UACjBmC,aAAc,QAEfiS,OAAQ,CACPpU,gBAAiB,OACjByC,aAAc,OAEf9D,OAAK,GACJoE,WAAY,OACZ3C,MAAO,QAFH,cAGH/B,EAAMS,YAAYI,KAAK,OAAS,CAC/B6B,SAAU,SAJR,cAMH1C,EAAMS,YAAYI,KAAK,OAAS,CAC/B6B,SAAU,SAPR,GAULiV,OAAQ,CACJ9S,OAAQ7E,EAAMK,QAAQ,GACtBsB,gBAAiB,UACjBsW,OAAQ,OACRtU,MAAO,OACPkC,UAAW,WA0ID2P,CAAsB+V,ICjMrC,SAAS/Y,GAAMjP,GACb,OAAO,kBAAC,KAAD,eAAUkP,UAAW,EAAGxQ,QAAQ,UAAasB,IAItD,IAwDMkoB,G,kDACL,WAAYloB,GAAQ,IAAD,8BAClB,cAAMA,IAcP2G,aAAe,SAAA/D,GAAI,OAAI,YAA4B,IAAfU,EAAc,EAAxBxB,OAAUwB,MACnC,EAAK0K,SAAL,eAAiBpL,EAAOU,MAdxB,EAAKrD,MAAO,CACX6T,MAAOnL,aAAaC,QAAQ,SAC5B0K,IAAM,GACNqK,YAAc,GACdC,gBAAgB,GAChBpN,SAAU,EACV2X,aAAY,EACZnY,aAAY,EACZiY,UAAS,EACTG,MAAK,GAEN,EAAK1U,WAAa,EAAKA,WAAWD,KAAhB,iBAbA,E,uDAkBRpN,GAAG,IAAD,OACZA,EAAE8J,iBACCa,KAAK/Q,MAAM0d,cAAgB3M,KAAK/Q,MAAM2d,gBACvC5M,KAAKhD,SAAS,CAACsF,IAAM,6BACdtC,KAAK/Q,MAAM0d,YAAY5S,OAAS,EACvCiG,KAAKhD,SAAS,CAACsF,IAAM,wDAGtBtC,KAAKhD,SAAS,CAACwC,SAAQ,IACvBtI,IAAM,CACNC,OAAQ,OACRC,IAAK9L,EAAW,kBAAkB0U,KAAKhR,MAAM0nB,MAAMC,OAAOtoB,GAC1DkJ,KAAMC,KAAGC,UAAU,CAClBkV,YAAY3M,KAAK/Q,MAAM0d,cAExBjV,QAAS,CACT,eAAgB,qDAEfG,MAAK,SAACC,GACU,QAAbA,EAAIP,KACN,EAAKyF,SAAS,CACbwC,SAAQ,EACR2X,aAAY,IAGb,EAAKna,SAAS,CACbwC,SAAQ,EACRyX,UAAS,OAGX/e,OAAM,SAACC,GACP,EAAK6E,SAAS,CACbwC,SAAQ,EACRR,aAAY,U,+BAMN,IAAD,OACR,GAAuB,MAApBgB,KAAK/Q,MAAM6T,MACb,OAAO,kBAAC,IAAD,CAAUxV,GAAG,IAAIyV,OAAK,IAC9B,GAAG/C,KAAK/Q,MAAMuQ,QACb,OAAO,kBAACjD,EAAA,EAAD,MACR,GAAIyD,KAAK/Q,MAAMmoB,KACd,OAAO,kBAAC,IAAD,CAAU9pB,GAAG,IAAIyV,OAAK,IANtB,IAOAvW,EAAYwT,KAAKhR,MAAjBxC,QACFO,EAAc,SAACkB,EAAO6Q,GACzB,EAAK7P,MAAMkoB,YACb,EAAKna,SAAS,CAACma,aAAa,EAAMC,MAAK,IAChC,EAAKnoB,MAAM+P,YAClB,EAAKhC,SAAS,CAACgC,aAAc,IACtB,EAAK/P,MAAMgoB,UAClB,EAAKja,SAAS,CAACia,UAAW,KAE3B,OACC,kBAAC,IAAM/nB,SAAP,KACA,yBAAKlC,UAAWR,EAAQwW,WAChB,kBAACrV,EAAA,EAAD,CAAYD,QAAQ,KAAKV,UAAWR,EAAQT,OAC1C,yDAEF,kBAACkX,GAAA,EAAD,CAAWnQ,UAAU,OAAOwI,SAAS,KAAKtO,UAAWR,EAAQ6U,OAC3D,kBAAC6B,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAQzV,QAAQ,SAASV,UAAWR,EAAQ4W,QAC7C,kBAAC,KAAD,CAAYjV,SAAS,WAEvB,kBAACR,EAAA,EAAD,CAAYmF,UAAU,KAAKpF,QAAQ,MACjC,8CAEC,0BAAMV,UAAWR,EAAQ+U,KAAMpB,SAAUH,KAAK0C,YAC5C,kBAAC7H,EAAA,EAAD,CACGnN,QAAQ,SACR4C,OAAO,SACPuB,KAAK,WACLwE,UAAQ,EACRgN,WAAS,EACT1K,MAAM,eACN3L,UAAWR,EAAQgV,OACnBlP,MAAO0N,KAAK/Q,MAAM0d,YAClBnW,SAAUwJ,KAAKrK,aAAa,eAC5B4K,WAAS,IAEX,kBAAC1F,EAAA,EAAD,CACEnN,QAAQ,SACRmE,KAAK,WACLvB,OAAO,SACP+F,UAAQ,EACRgN,WAAS,EACT1K,MAAM,mBACN3L,UAAWR,EAAQgV,OACnBlP,MAAO0N,KAAK/Q,MAAM2d,gBAClBpW,SAAUwJ,KAAKrK,aAAa,qBAE/B,kBAAChI,EAAA,EAAD,CAAYD,QAAQ,YAAYF,MAAM,QACjCwS,KAAK/Q,MAAMqT,KAEhB,kBAAC7U,EAAA,EAAD,CACEoE,KAAK,SACLwR,WAAS,EACT3V,QAAQ,YACRF,MAAM,UACNR,UAAWR,EAAQoU,QALrB,mBAWX,kBAACC,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAMkoB,YAAaxoB,QAAS5B,EAAa+T,iBAAkB,KAC/E,kBAAC,GAAD,CAAOnS,QAAS5B,EAAagU,SAAS,WAAtC,oFAID,kBAACF,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAMgoB,SAAUtoB,QAAS5B,GAC7C,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,SAAtC,4DAID,kBAACF,GAAA,EAAD,CAAUhU,KAAMmT,KAAK/Q,MAAM+P,YAAarQ,QAAS5B,GAChD,kBAAC,GAAD,CAAO4B,QAAS5B,EAAagU,SAAS,SAAtC,qG,GAzIuB5R,aAqJb8R,iBA7MG,SAAAxV,GAAK,YAAK,CAE3BuX,UAAW,CACVQ,gBAAgB,OAAD,OAAStT,KAAT,KACfuT,eAAgB,QAChBC,OAAQ,QAETrC,MAAM,aACLkC,WAAY,cACZ1T,aAAc,MACd+D,MAAO,SACPxH,QAAS,OACT8U,cAAe,SACfP,WAAY,SACZnT,MAAO,OACP2C,WAAY,QACX1E,EAAMS,YAAYI,KAAK,OAAS,CAC/B6D,WAAY,SAGfoR,KAAM,CACFnS,MAAO,MACPkC,UAAW7F,EAAMK,QAAQ,IAE7B8U,OAAQ,CACPtQ,OAAQ7E,EAAMK,QAAQ,EAAG,EAAG,GAC5BuD,QAAS,OACTlB,SAAU,OACV4B,WAAY,SACZ3C,gBAAiB,UACjBmC,aAAc,QAEfiS,OAAQ,CACPpU,gBAAiB,OACjByC,aAAc,OAEf9D,OAAK,GACJoE,WAAY,OACZ3C,MAAO,QAFH,cAGH/B,EAAMS,YAAYI,KAAK,OAAS,CAC/B6B,SAAU,SAJR,cAMH1C,EAAMS,YAAYI,KAAK,OAAS,CAC/B6B,SAAU,SAPR,GAULiV,OAAQ,CACJ9S,OAAQ7E,EAAMK,QAAQ,GACtBsB,gBAAiB,UACjBsW,OAAQ,OACRtU,MAAO,OACPkC,UAAW,WA0JD2P,CAAsBiW,IChNjCvH,GAAU,KAGRpkB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ0D,MAAO,QAGT4D,QAAS,CACP7E,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnClD,WAAY,MACZmD,UAAW,SACXC,WAAY,GAEdC,iBAAkB,CAChBjF,SAAU1C,EAAM0F,WAAW8B,QAAQ,IACnCzF,MAAO/B,EAAM4H,QAAQC,KAAKC,WAE5BC,MAAO,CACLpE,MAAO,OACPkB,OAAQ,QAEVmD,SAAU,CACRrE,MAAO,OACPkB,OAAQ,YA2PG+mB,GAvPO,SAACroB,GAAW,IAAD,EAERvC,IAAMC,SAAS,IAFP,mBAExBoV,EAFwB,KAEnBwV,EAFmB,OAGQ7qB,IAAMC,SAAS,MAHvB,mBAGxB+kB,EAHwB,KAGX8F,EAHW,OAIF9qB,IAAMC,UAAS,GAJb,mBAIxB8S,EAJwB,KAIhBiW,EAJgB,OAKJhpB,IAAMC,UAAS,GALX,mBAKxBqT,EALwB,KAKjByV,EALiB,KAMzBvhB,EAASC,cACT1H,EAAUjB,KAPe,EAQCkB,IAAMC,UAAS,GARhB,mBAQxByH,EARwB,KAQdC,EARc,OASF3H,IAAMC,UAAS,GATb,mBASxBke,EATwB,KAShBC,EATgB,KAoE7B,OAHqB,OAAjB4G,IAAqC,IAAZ7G,IAjC7BC,GAAW,GACX4K,GAAW,GACXve,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,cAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJ+S,GAAW,GACN/S,EAAIP,KAAKwC,OACd4V,GAAU7X,EAAIP,KACdggB,EAAgBzf,EAAIP,MACpBie,GAAU,GACVC,GAAW,MAEZvd,OAAM,SAAUC,GACf0S,GAAW,GACX4K,GAAW,GACXze,QAAQC,IAAIkB,OAeH,KAAT2J,GAxDJ5K,IAAM,CACJC,OAAQ,MACRC,IAAK9L,EAAa,QAClBgM,iBAAiB,EACjBI,QAAU,CACR+D,cAAgB,UAAW9D,aAAaC,QAAQ,mBAGjDC,MAAK,SAAAC,GACJwf,EAAQxf,EAAIP,SAGbW,OAAM,SAAAC,GACLmf,EAAQ,WACR3f,aAAaoK,WAAW,YA4CnB,kBAACxF,EAAA,EAAD,OACgB,QAAduF,EAAKjQ,KACX2N,EAEG,kBAACvE,GAAA,EAAD,MAGL8E,EAEuB,IAAnB4P,GAAU5V,OAEL,kBAAC,IAAM7K,SAAP,KACI,kBAAC,GAAD,CAAa/B,MAAO,CAACoC,aAAa,UAClC,kBAAC5B,EAAA,EAAD,CAAYR,MAAO,CAACmD,OAAO,QAAS5C,QAAU,MAA9C,mBAGCiiB,GAAUra,KAAI,SAAA0D,GACX,IA9BDpD,EAmCKqD,EAAUD,EAAMjF,QAAQsE,MAAM,KAAK,GACnCa,EAAUF,EAAME,QAChBC,EAAQH,EAAMpH,KACdvD,EAAK2K,EAAM3K,GAEXkL,EAAY,KAWZ,OAT2B,IAA3BP,EAAMc,UAAUC,SAKhBR,EAJQP,EAAMc,UAAU,GAINE,QAAQ3B,MAAM,KAAK,IAKrC,kBAAC+B,GAAA,EAAD,CACIjN,MAAO,CACHiC,MAAO,MACPkB,OAAQ,OACRtE,UAAW,OACXsF,UAAW,MACX1B,UACA,6DAEJuE,SAAUA,IAAagF,EACvB3C,UA9DTZ,EA8DgCuD,EA9DvB,SAAClL,EAAO4H,GACpCzB,IAAYyB,GAAaD,KA8DG5I,UAAWR,EAAQgH,MACnB6G,IAAKrB,EAAMpH,MAEX,kBAAC0I,GAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZzM,gBAAc,mBACdO,GAAG,mBAEH,kBAACV,EAAA,EAAD,CAAYX,UAAWR,EAAQwG,SAC1BhB,GAAqBgH,EAAMpH,OAE/BsH,EAAQ5D,KAAI,SAAAkF,GACT,OACA,kBAAC7M,EAAA,EAAD,CACI0M,IAAKG,EAAO5I,KACZ5E,UAAWR,EAAQ4G,kBAElBoH,EAAO5I,KAJZ,wBASJ,kBAAC6I,GAAA,EAAD,CAAkBzN,UAAWR,EAAQiH,UACrC,kBAAChD,EAAA,EAAD,CAAMC,WAAS,EAAC5E,QAAS,GACrB,kBAAC2E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACvB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,SAIA,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACdsI,EAAQ5D,KAAI,SAAAkF,GACT,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAO5I,YAKtD,kBAACnB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACvB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,UAIA,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACdsI,EAAQ5D,KAAI,SAAAkF,GACT,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAOzI,aAKtD,kBAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACvB,kBAACJ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACjD,EAAA,EAAD,CAAYR,MAAO,CAAE4C,WAAY,QAAjC,YAIA,kBAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACdsI,EAAQ5D,KAAI,SAAAkF,GACT,OAAO,kBAAC7M,EAAA,EAAD,CAAY0M,IAAKG,EAAOzI,OAAQyI,EAAOE,cAKtD,kBAACjK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACdqI,GAAWM,EACR,kBAAC5L,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,SAAWE,QAAQ,MAA/C,+BAIA,kBAACC,EAAA,EAAD,CAAYR,MAAO,CAAEK,MAAO,OAASE,QAAQ,MAA7C,6BAKJ,kBAAC+C,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,GAAI,IACG,IAA3BoI,EAAMc,UAAUC,OACb,kBAAC,IAAM7K,SAAP,KACI,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACnD,EAAA,EAAD,CACAO,QAnHJ,WAChBiG,EAAO0G,KAAK,CACZC,SAAS,qBAAD,OAAuBvM,MAkHXX,QAAQ,WACRF,MAAM,WAHN,kBAUR,kBAACC,EAAA,EAAD,CAAQ4N,UAAQ,EAAC3N,QAAQ,WAAWF,MAAM,aACtC,kBAACG,EAAA,EAAD,wCAe5B,kBAAC,IAAMuB,SAAP,KACE,kBAAC,GAAD,MACA,kBAACvB,EAAA,EAAD,gDASN,kBAACsN,GAAA,EAAD,MAIC,kBAAC,IAAD,CAAU3N,GAAG,OC9OXkqB,OA7Bf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAI1U,OAAK,EAACjQ,UAAWqP,KACjC,kBAAC,IAAD,CAAOsV,KAAK,SAAS1U,OAAK,EAACjQ,UAAW6O,KACtC,kBAAC,IAAD,CAAO8V,KAAK,OAAO1U,OAAK,EAACjQ,UAAWwc,KACpC,kBAAC,IAAD,CAAOmI,KAAK,UAAU1U,OAAK,EAACjQ,UAAW6Q,KACvC,kBAAC,IAAD,CAAO8T,KAAK,WAAW1U,OAAK,EAACjQ,UAAW4kB,KACxC,kBAAC,IAAD,CAAOD,KAAK,WAAW1U,OAAK,EAACjQ,UAAW6kB,KACxC,kBAAC,IAAD,CAAOF,KAAK,QAAQ1U,OAAK,EAACjQ,UAAW4Y,KACrC,kBAAC,IAAD,CAAO+L,KAAK,SAAS1U,OAAK,EAACjQ,UAAWyC,KACtC,kBAAC,IAAD,CAAOkiB,KAAK,eAAe1U,OAAK,EAACjQ,UAAW2Z,KAC5C,kBAAC,IAAD,CAAOgL,KAAK,mBAAmB1U,OAAK,EAACjQ,UAAW8kB,KAChD,kBAAC,IAAD,CAAOH,KAAK,iBAAiB1U,OAAK,EAACjQ,UAAW0c,KAC9C,kBAAC,IAAD,CAAOiI,KAAK,mBAAmB1U,OAAK,EAACjQ,UAAW+kB,KAChD,kBAAC,IAAD,CAAOJ,KAAK,gBAAgB1U,OAAK,EAACjQ,UAAW8c,KAC7C,kBAAC,IAAD,CAAO6H,KAAK,gBAAgB1U,OAAK,EAACjQ,UAAWggB,KAC7C,kBAAC,IAAD,CAAO2E,KAAK,kBAAkB1U,OAAK,EAACjQ,UAAW+hB,KAC/C,kBAAC,IAAD,CAAO4C,KAAK,kBAAkB1U,OAAK,EAACjQ,UAAWkkB,KAC/C,kBAAC,IAAD,CAAOS,KAAK,qBAAqB1U,OAAK,EAACjQ,UAAWokB,KAClD,kBAAC,IAAD,CAAOO,KAAK,cAAc1U,OAAK,EAACjQ,UAAWglB,KAC3C,kBAAC,IAAD,CAAOL,KAAK,wBAAwB1U,OAAK,EAACjQ,UAAW+kB,KACrD,kBAAC,IAAD,CAAOJ,KAAK,IAAI3kB,UAAWka,QClCflgB,QACW,cAA7BiL,OAAOC,SAAS+f,UAEe,UAA7BhgB,OAAOC,SAAS+f,UAEhBhgB,OAAOC,SAAS+f,SAASrB,MACvB,2DCZNsB,IAASC,OACP,kBAAC,IAAM/oB,SAAP,KACE,kBAAC,GAAD,OAEF4M,SAAS6D,eAAe,SDyHpB,kBAAmBuY,WACrBA,UAAUC,cAAcC,MACrBvgB,MAAK,SAAAwgB,GACJA,EAAaC,cAEdpgB,OAAM,SAAAqgB,GACLvhB,QAAQuhB,MAAMA,EAAMC,a,mBEzI5BptB,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.a80f6bf7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.fcf68321.PNG\";","if (process.env.NODE_ENV === \"production\")\r\n\tvar SERVER_URL = \"\";\r\nelse\t\r\n\tvar SERVER_URL = \"http://127.0.0.1:8000\";\r\nexport default SERVER_URL;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n          <Link\r\n            to=\"/\"\r\n            style={{ textDecoration: \"none\", color: \"#000\", marginRight:\"5px\" }}\r\n          >\r\n            <Button color=\"inherit\" variant=\"contained\">\r\n              <ArrowBackRoundedIcon />\r\n            </Button>\r\n          </Link>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n          {auth && (\r\n            <div className={classes.profIcon}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/cp@2707user\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Change Password\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/logout\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Link\r\n            to=\"/cp@2707user\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              startIcon={<AssignmentIndIcon />}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            to=\"/logout\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"20px\" }}\r\n              startIcon={<ExitToAppIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n  \r\n}\r\n","import React, { Component } from \"react\";\r\nimport MenuAppBar from \"./MenuAppBar\";\r\n\r\nclass LoggedNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuAppBar />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedNavbar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Image from \"./sample.PNG\";\r\nimport {Grid} from \"@material-ui/core\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textAlign: \"left\",\r\n    width: \"87%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: \"20px\",\r\n    \"borderLeftColor\": \"blue\",\r\n    \"border-left-style\": \"solid\",\r\n    \"border-left-width\": \"10px\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"20px\",\r\n    letterSpacing: \"1px\",\r\n    marginBottom:\"3px\"\r\n  },\r\n  image:{\r\n    [theme.breakpoints.up(\"md\")]:{\r\n      marginLeft:\"20%\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n      width:\"95%\"\r\n    }\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h4\" style={{ fontWeight: \"600\",fontFamily:\"sans-serif\",marginBottom:\"10px\" }}>\r\n          Instructions -\r\n        </Typography>\r\n\r\n        \r\n        <Typography className={classes.title}>\r\n          1. Please fill the below form to create project list of your department          \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          2. Project list file should be of <b>.csv</b>  or <b>.xlsx</b> format          \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          3. The first row of the file should be <b>name,rollno,email,group_name </b>\r\n             actual values should start from second row \r\n        </Typography><br/>\r\n        <img src={Image} className ={classes.image}/><br/>\r\n        <Typography className={classes.title}>\r\n          4. On submitting the form you will create a list mentioned in the file\r\n          and will give authorities to emails mentioned by you\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport \"./Footer.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: \"#333\",\r\n    color: \"#fff\",\r\n    paddingTop: \"20px\"\r\n  },\r\n  rootItems: {\r\n    padding: \"8px\"\r\n  },\r\n  foot: {\r\n    margin: \"auto\"\r\n  },\r\n  footEnd: {\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#222\",\r\n    margin: \"0\"\r\n  }\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <footer>\r\n        <Grid container className={classes.root}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography><a style={{color:\"#fff\"}} target=\"blank\" href=\"/about.html\"> About</a></Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms And Conditions</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms of Use</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <BusinessIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>\r\n                  K.J.Somaiya Institute Of Engineering And Information\r\n                  Technology\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography> Sion,Mumbai</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <ContactMailIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>abcd@gmail.com</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>36326623966996</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.footEnd}>\r\n            <Typography>\r\n              &copy;{new Date().getFullYear()} KJSIEIT,Inc. All Rights Reserved.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '1.5rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '2rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    width: \"90%\",\r\n    textAlign: \"left\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"30px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"1px\",\r\n    fontFamily:\"sans-serif\",\r\n    marginTop:\"5px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  icon : {\r\n    fontSize: \"7rem\",\r\n    color:\"powderblue\"\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  const userInfo = props;\r\n  const academicYear=props.academicYear;\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <ThemeProvider theme={theme}>\r\n          <Grid container >\r\n            <Grid item xs={12} sm={2}>\r\n              <AccountBoxRoundedIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs={12} sm ={10}>\r\n                <br/>\r\n                <Grid container >\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Name:</b> {userInfo.userInfo.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Designation:</b> {userInfo.userInfo.type}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Department:</b> {userInfo.userInfo.department}\r\n                      </Typography>\r\n                    </Grid>            \r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b>Email:</b> {userInfo.userInfo.email}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      {academicYear!==null?(\r\n                        <Typography className={classes.title}>\r\n                          <b>Academic Year:</b> {academicYear}\r\n                        </Typography>\r\n                      ):(null)}\r\n                    </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </ThemeProvider>\r\n          \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","export const toFirstCharUppercase = name =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { CircularProgress,Card, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, LinearProgress, MenuItem, TextField } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport CloudDownload from  \"@material-ui/icons/CloudDownload\";\r\n// import FileDownload from \"@material-ui/icons/FileDownload\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  dueDateContainer:{\r\n    borderRadius:\"0px\"\r\n  },\r\n  downloadButton :{\r\n    float:\"right\",\r\n    marginTop:\"5%\",\r\n    marginBottom:\"10px\"\r\n\r\n  }\r\n\r\n}));\r\n\r\n// let Guides = null;\r\n\r\n\r\nexport default function ControlledAccordions(props) {\r\n  let Groups = props.Groups;\r\n  let dueDate = Groups[0].dueDate\r\n  let Guides = props.Guides;\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n  const [assignLoading,setAssignLoading]=React.useState(false);\r\n  const [guide,setGuide] = React.useState(null);\r\n  const [guideE,setGuideE] = React.useState(null);\r\n  const [changeDuedate,setDueDate] = React.useState(new Date());\r\n  const [DueDateOpen,setDOpen] = React.useState(false)\r\n  const [downLoading,setDownLoading] = React.useState(false)\r\n  let showButton = false\r\n\r\n\r\n\r\n\r\n  const handleGuideChange = (e) =>{\r\n    setGuide(e.target.value);\r\n    Guides.map(Guide=>{\r\n      if(Guide.name===e.target.value){\r\n        setGuideE(Guide.email)\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n//Change DueDate-------------------------------\r\n  //to change format of the month\r\nconst appendLeadingZeroes=(n)=> {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\nconst downloadProjectList = () => {\r\n  setDownLoading(true)\r\n  axios({\r\n    method: \"get\",\r\n    url: SERVER_URL+\"/excel\",\r\n    responseType: 'blob',\r\n    headers : {\r\n      Authorization : 'Bearer '+localStorage.getItem(\"access_token\")\r\n    }\r\n  })\r\n  .then(res => {\r\n      const url = window.URL.createObjectURL(new Blob([res.data]))\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'Project List.xlsx');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      setDownLoading(false)\r\n    })\r\n  .catch(err => {\r\n      setDownLoading(false)\r\n      console.log(err)\r\n    });\r\n}\r\n\r\nconst handleChangeDueDateDialogOpen=()=>{\r\n  setDOpen(true)\r\n}\r\nconst handleChangeDueDateDialogClose=()=>{\r\n  setDOpen(false)\r\n}\r\nconst handleChangeDueDate=()=>{\r\n  console.log(changeDuedate)\r\n  axios({\r\n    method: \"post\",\r\n    url: SERVER_URL + \"/updateDueDate\",\r\n    credentials: \"include\",\r\n    withCredentials: true,\r\n    data: qs.stringify({\r\n      dueDate:changeDuedate\r\n    }),\r\n    headers: {\r\n      \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n      \"Authorization\" : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n    }\r\n  })\r\n  .then(res => {\r\n    console.log(\"Due Changed\")\r\n    window.location.reload(false);\r\n  })\r\n\r\n  .catch(err => {\r\n    alert(\"DueDate didnt Change\")\r\n    console.log(err);\r\n  });\r\n}\r\nconst handleSetDueDate=(date)=>{\r\n  let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      appendLeadingZeroes(current_datetime.getDate());\r\n  setDueDate(formatted_date)\r\n}\r\n  \r\n\r\n// Assign Guide button\r\n\r\n  const assignGuide = (e,id) => {  \r\n    console.log(guide,guideE)\r\n    if(guide===null){\r\n      alert(\"Please select a guide first\")\r\n    }else{\r\n      setAssignLoading(true)\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name:guide,\r\n          email:guideE,\r\n          groupId:id\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          \"Authorization\" : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"submitted\")\r\n        setAssignLoading(false)\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        alert(\"Guide not assigned\")\r\n        setAssignLoading(false)\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n const handleChangeGuide = (id) => {\r\n  Groups.map(Group=>{\r\n    if(Group.id===id){\r\n      Group.guide.name=null;\r\n      Group.guide.email=null;\r\n    }\r\n  })\r\n  setGuide(null)\r\n }\r\n\r\n\r\n  // Tabs handleChange\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // SwipeableView index changing\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n// Accordion handleChange\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // let e={}\r\n\r\n  if(Guides!==null){\r\n    if(guide===null){\r\n      setGuide(Guides[0].name);\r\n      setGuideE(Guides[0].email);\r\n    }\r\n    return (\r\n      <div>\r\n      {/* DIALOG FOR CHANGE DUEDATE */}\r\n      <Dialog open={DueDateOpen} onClose={handleChangeDueDateDialogClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\" style={{margin:\"auto 100px\"}}>Change DueDate</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Select a new DueDate\r\n          </DialogContentText>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                autoOk\r\n                required\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                format=\"yyyy/MM/dd\"\r\n                value={changeDuedate}\r\n                onChange={handleSetDueDate}\r\n                InputAdornmentProps={{ position: \"start\" }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleChangeDueDateDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleChangeDueDate} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div>\r\n\r\n      </div>\r\n      {/* DIALOG END */}\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n          <div >\r\n          <Card className={classes.dueDateContainer}>\r\n            <Grid container  style={{padding:\"5px\"}}>\r\n              <Grid item xs={8} style={{margin:\"auto\"}}><Typography variant=\"h6\">&nbsp;&nbsp;<b>DueDate for Submitting Proposals:&nbsp;{dueDate.split(\"T\")[0]}</b></Typography></Grid>\r\n              <Grid item xs={4} style={{textAlign:\"right\"}}><Button onClick={handleChangeDueDateDialogOpen} variant=\"contained\" color=\"primary\">Change DueDate</Button></Grid>\r\n            </Grid>\r\n          </Card>\r\n          </div>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChangeT}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n            >\r\n              <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n              <Tab label=\"Approval by HOD left\" {...a11yProps(1)} />\r\n              <Tab label=\"Applied\" {...a11yProps(2)} />\r\n              <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n              {\r\n                Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n                let pref1AdminApproval = false;\r\n                let pref2AdminApproval = false;\r\n                let pref3AdminApproval = false;\r\n                let pref1HodApproval = false;\r\n                let pref2HodApproval = false;\r\n                let pref3HodApproval = false;\r\n  \r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n  \r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  //console.log(AppliedOn, DueDate);\r\n                  pref1AdminApproval = pref1.approval.admin;\r\n                  pref2AdminApproval = pref2.approval.admin;\r\n                  pref3AdminApproval = pref3.approval.admin;\r\n                  pref1HodApproval = pref1.approval.hod;\r\n                  pref2HodApproval = pref2.approval.hod;\r\n                  pref3HodApproval = pref3.approval.hod;\r\n                }\r\n  \r\n                if (\r\n                  (pref1AdminApproval && pref1HodApproval) ||\r\n                  (pref2AdminApproval && pref2HodApproval) ||\r\n                  (pref3AdminApproval &&\r\n                    pref3HodApproval &&\r\n                    Group.proposals.length !== 0)\r\n                ) {\r\n                  showButton = true\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.name}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.email}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item container xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <React.Fragment>\r\n                                <Grid item xs={3}>\r\n                                  <Button\r\n                                    onClick={routeChange}\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    Show Preferences\r\n                                  </Button>\r\n                                </Grid>\r\n                                <Grid container item xs={9}>\r\n                                  {(Group.guide.name===null)?(\r\n                                    <React.Fragment>\r\n                                      <Grid item xs={5} />\r\n                                      <Grid item xs={3}>\r\n                                        <TextField\r\n                                          size=\"medium\"\r\n                                          id=\"selectGuide\"\r\n                                          select\r\n                                          value={guide}\r\n                                          onChange={handleGuideChange}\r\n                                          helperText=\"Please select Guide\"\r\n                                        >         \r\n                                          {Guides.map((Guide)=>{\r\n                                            return(\r\n                                              <MenuItem key={Guide.email} value={Guide.name}>{Guide.name}</MenuItem>\r\n                                          )\r\n                                          })}\r\n                                        </TextField> \r\n                                      </Grid>\r\n                                      <Grid item xs ={1} />\r\n                                      <Grid item xs={3}>\r\n                                        { !assignLoading ? (\r\n                                            <Button style={{marginRight:\"20px\"}} variant=\"contained\" color=\"secondary\" onClick={(e)=>assignGuide(e,id)}>Assign Guide</Button>\r\n                                        ) : (\r\n                                            <CircularProgress />\r\n                                        )}\r\n                                      </Grid>\r\n                                   </React.Fragment>\r\n                                ):(\r\n                                  <React.Fragment>\r\n                                    <Grid item xs={2} />\r\n                                    <Grid item xs={3}>\r\n                                      <Typography variant=\"h6\" color=\"secondary\">\r\n                                        Guide Assigned: \r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography variant=\"h6\" color=\"secondary\">{Group.guide.name}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                      <Button variant=\"contained\" color=\"primary\" onClick={()=>{handleChangeGuide(id)}}>Change Guide</Button>\r\n                                    </Grid>\r\n                                  </React.Fragment>\r\n                                )}\r\n                              </Grid> \r\n                              </React.Fragment>\r\n                            ) : (\r\n                              <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>                      \r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })\r\n              }\r\n              <React.Fragment>\r\n                {(downLoading)?(\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className = {classes.downloadButton}\r\n                    style={{maxWidth:\"153.24px\",maxHeight:\"40px\"}}\r\n                  >\r\n                    <CircularProgress size=\"2rem\" color=\"white\" style={{padding:\"0 40px\"}} />\r\n                  </Button>\r\n                ):(\r\n                  <React.Fragment>\r\n                    {(showButton)?(\r\n                      <React.Fragment>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className = {classes.downloadButton}\r\n                          startIcon = {<CloudDownload/>}\r\n                          onClick={downloadProjectList}\r\n                        >\r\n                          Project List\r\n                        </Button>\r\n                      </React.Fragment>\r\n                    ):(null)}\r\n                  </React.Fragment>\r\n                )}\r\n              </React.Fragment>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n  \r\n                let pref1AdminApproval = false;\r\n                let pref2AdminApproval = false;\r\n                let pref3AdminApproval = false;\r\n                let pref1HodApproval = false;\r\n                let pref2HodApproval = false;\r\n                let pref3HodApproval = false;\r\n  \r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n  \r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  //console.log(DueDate, AppliedOn);\r\n                  pref1AdminApproval = pref1.approval.admin;\r\n                  pref2AdminApproval = pref2.approval.admin;\r\n                  pref3AdminApproval = pref3.approval.admin;\r\n                  pref1HodApproval = pref1.approval.hod;\r\n                  pref2HodApproval = pref2.approval.hod;\r\n                  pref3HodApproval = pref3.approval.hod;\r\n                }\r\n  \r\n                if (\r\n                  (pref1AdminApproval && !pref1HodApproval) ||\r\n                  (pref2AdminApproval && !pref2HodApproval) ||\r\n                  (pref3AdminApproval &&\r\n                    !pref3HodApproval &&\r\n                    Group.proposals.length !== 0)\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.name}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.email}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll-no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n  \r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n                let pref1Approval = false;\r\n                let pref2Approval = false;\r\n                let pref3Approval = false;\r\n  \r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n  \r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  pref1Approval = pref1.approval.admin;\r\n                  pref2Approval = pref2.approval.admin;\r\n                  pref3Approval = pref3.approval.admin;\r\n                }\r\n  \r\n                if (\r\n                  !pref1Approval &&\r\n                  !pref2Approval &&\r\n                  !pref3Approval &&\r\n                  Group.proposals.length !== 0\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.name}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.rollno}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n  \r\n            <TabPanel value={value} index={3} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n  \r\n                if (Group.proposals.length === 0) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                          style={{ width: \"100%\", padding: \"auto\" }}\r\n                        >\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.name}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll-no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.rollno}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <Typography>\r\n                              <b>Due Date for Submitting Proposals:</b>&nbsp;&nbsp;\r\n                              {DueDate}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n\r\n          </SwipeableViews>\r\n        </div>\r\n      </div>\r\n    );\r\n  }else{\r\n    return(\r\n      <LinearProgress />\r\n    )\r\n  }\r\n  \r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    list: {\r\n      width: 250\r\n    },\r\n    fullList: {\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  ButtonStyle: {\r\n    color: \"#000\",\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: \"0px 5px\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"2px\",\r\n    marginRight: \"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const histor = useHistory();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => histor.push(\"/admin\")\r\n    },\r\n    {\r\n      text: \"Groups\",\r\n      icon: <PeopleAltIcon />,\r\n      onClick: () => histor.push(\"/admin/groups\")\r\n    },\r\n    {\r\n      text: \"Guides\",\r\n      icon: <SupervisedUserCircleIcon />,\r\n      onClick: () => histor.push(\"/admin/guides\")\r\n    },\r\n    {\r\n      text: \"Archives\",\r\n      icon: <ArchiveIcon />,\r\n      onClick: () => histor.push(\"/admin/archives\")\r\n    }\r\n  ];\r\n\r\n  const toggleDrawer = (anchor, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = anchor => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <ListItem\r\n                button\r\n                key={text}\r\n                onClick={onClick}\r\n                style={{ marginRight: \"40px\" }}\r\n              >\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n              <Divider />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"left\"].map(anchor => (\r\n        <React.Fragment key={anchor}>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n          <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n              <Toolbar>\r\n                <MenuIcon\r\n                  fontSize=\"large\"\r\n                  onClick={toggleDrawer(anchor, true)}\r\n                  className={classes.ButtonStyle}\r\n                  style={{}}\r\n                />\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                  Project Management System\r\n                </Typography>\r\n                {auth && (\r\n                  <div className={classes.profIcon}>\r\n                    <IconButton\r\n                      aria-label=\"account of current user\"\r\n                      aria-controls=\"menu-appbar\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMenu}\r\n                      color=\"inherit\"\r\n                    >\r\n                      <AccountCircle style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"menu-appbar\"\r\n                      anchorEl={anchorEl}\r\n                      anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\"\r\n                      }}\r\n                      keepMounted\r\n                      transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\"\r\n                      }}\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                    >\r\n                      <MenuItem onClick={handleClose}>\r\n                        <Link\r\n                          to=\"/cp@2707user\"\r\n                          style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                        >\r\n                          Change Password\r\n                        </Link>\r\n                      </MenuItem>\r\n                      <MenuItem onClick={handleClose}>\r\n                        <Link\r\n                          to=\"/logout\"\r\n                          style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </div>\r\n                )}\r\n                <Link\r\n                  to=\"/cp@2707user\"\r\n                  className={classes.navMenu}\r\n                  style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                >\r\n                  <Button\r\n                    color=\"inherit\"\r\n                    variant=\"contained\"\r\n                    startIcon={<AssignmentIndIcon />}\r\n                  >\r\n                    Change Password\r\n                  </Button>\r\n                </Link>\r\n                <Link\r\n                  to=\"/logout\"\r\n                  className={classes.navMenu}\r\n                  style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                >\r\n                  <Button\r\n                    color=\"inherit\"\r\n                    variant=\"contained\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    startIcon={<ExitToAppIcon />}\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </Link>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport AdminInstructions from \"./AdminInstructions\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LinearProgress,\r\n  TextField,\r\n  withStyles,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Input,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SideMenu from \"./SideMenu\"\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\n//getting todays date\r\nvar tempDate = new Date();\r\nvar date =\r\n  tempDate.getFullYear() +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getMonth() + 1) +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getDate());\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet userInfo = [];\r\nlet Ad = null;\r\nlet filled = false;\r\nlet Groups = null;\r\nlet Guides=null;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\nlet a = new Date()\r\nvar academicYearList = [`${a.getFullYear()-1}-${a.getFullYear()}`,`${a.getFullYear()}-${a.getFullYear()+1}`,`${a.getFullYear()+1}-${a.getFullYear()+2}`]\r\n\r\nclass AdminContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    \r\n    this.state = {\r\n      hod: \"\",\r\n      hodName: \"\",\r\n      student_file: null,\r\n      adData: null,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      loading: false,\r\n      prefDueDate: date,\r\n      Academicyear: academicYearList[0]\r\n    };\r\n\r\n  }\r\n\r\n  //to change format of the month\r\n  appendLeadingZeroes(n) {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  handleDateChange = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getDate());\r\n    this.setState({ prefDueDate: formatted_date });\r\n    let a = new Date(\"2020-12-01\");\r\n    if (current_datetime < a) {\r\n      // console.log(\"success\");\r\n    } else if (current_datetime > a) {\r\n      // console.log(\"failed\");\r\n    }\r\n    // console.log(a);\r\n  };\r\n\r\n  //function to handle Academic Year\r\n  handleAcademicYear = e => {\r\n    this.setState({ Academicyear: e.target.value });\r\n  };\r\n\r\n  hodHandler = e => {\r\n    this.setState({ hod: e.target.value });\r\n  };\r\n  hodNameHandler = e => {\r\n    this.setState({ hodName: e.target.value });\r\n  };\r\n\r\n  // picHandler = e => {\r\n  //   this.setState({ pic: e.target.value });\r\n  // };\r\n  // picNameHandler = e => {\r\n  //   this.setState({ picName: e.target.value });\r\n  // };\r\n  // igHandler = e => {\r\n  //   this.setState({ ig: e.target.value });\r\n  // };\r\n  // igNameHandler = e => {\r\n  //   this.setState({ igName: e.target.value });\r\n  // };\r\n  // studentfileHandler = e => {\r\n  //   this.fileValidation(e);\r\n  // };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    var formData = new FormData();\r\n    formData.append(\"hodName\", this.state.hodName);\r\n    formData.append(\"hodEmail\", this.state.hod);\r\n    formData.append(\"student_file\", this.state.student_file);\r\n    formData.append(\"dueDate\", this.state.prefDueDate);\r\n    formData.append(\"acadYear\", this.state.Academicyear);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/admin\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n    this.setState({ hod: \"\", student_file: null, hodName: \"\" });\r\n  };\r\n\r\n  fileValidation = e => {\r\n    var fileInput = document.getElementById(\"file\");\r\n    // console.log(fileInput);\r\n    // console.log(e.target.files[0]);\r\n    var filePath = fileInput.value;\r\n    // console.log(filePath);\r\n    // Allowing file type\r\n    var allowedExtensions = /(\\.csv|\\.xlsx)$/i;\r\n\r\n    if (!allowedExtensions.exec(filePath)) {\r\n      alert(\"Invalid file type\");\r\n      fileInput.value = \"\";\r\n      return false;\r\n    } else {\r\n      this.setState(\r\n        { student_file: e.target.files[0] },\r\n        // console.log(this.state.student_file)\r\n      );\r\n    }\r\n  };\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        // console.log(res.data)\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n  checkGuides(){\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n    .then(res => {\r\n      Guides = res.data;\r\n      // console.log(res,Guides)\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let academicYear=this.state.Academicyear\r\n    //console.log(academicYear);\r\n    const { classes } = this.props;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <LoggedNavbar />\r\n          <LinearProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.adData === null || Guides===null) {\r\n      this.checkData();\r\n      this.checkGuides();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n\r\n    if (this.state.filled === true) {\r\n      if (Ad === 0) {\r\n        return (\r\n          <div className={classes.root}>\r\n            <SideMenu/>\r\n            <Profile userInfo={userInfo} academicYear={null} />\r\n            <AdminInstructions />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"50px auto\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\"\r\n              }}\r\n            >\r\n              <form\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  marginTop: \"30px\",\r\n                  padding: \"20px 30px\"\r\n                }}\r\n                onSubmit={this.submitHandler}\r\n              >\r\n                <Typography variant=\"h4\" style={{ fontWeight: \"600\",fontFamily:\"sans-serif\",marginBottom:\"10px\"}}>\r\n                  Create Project List\r\n                </Typography>\r\n                <hr size = \"5\" color = \"blue\"/>\r\n                <br/><br/>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Enter Head Of Department Details:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hodName\"\r\n                      label=\"Enter Head of Department Name\"\r\n                      value={this.state.hodName}\r\n                      onChange={this.hodNameHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hod\"\r\n                      label=\"Enter Head of Department Email\"\r\n                      value={this.state.hod}\r\n                      onChange={this.hodHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  {/* <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student List File:\r\n                    </Typography>\r\n                  </Grid> */}\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Academic Year:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {\" \"}\r\n                        <FormControl\r\n                          variant=\"outlined\"\r\n                          label=\"Academic Year\"\r\n                          style={{ width: \"60%\", padding: \"8px\" }}\r\n                        >\r\n                          <Select\r\n                            required\r\n                            value={this.state.Academicyear}\r\n                            onChange={this.handleAcademicYear}\r\n                            name=\"Academic Year\"\r\n                          >\r\n                          <MenuItem value={academicYearList[0]}>{academicYearList[0]}</MenuItem>\r\n                          <MenuItem value={academicYearList[1]}>{academicYearList[1]}</MenuItem>\r\n                          <MenuItem value={academicYearList[2]}>{academicYearList[2]}</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Due Date for Proposal Submission:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            autoOk\r\n                            required\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"yyyy/MM/dd\"\r\n                            value={this.state.prefDueDate}\r\n                            InputAdornmentProps={{ position: \"start\" }}\r\n                            onChange={this.handleDateChange}\r\n                            style={{ width: \"60%\", padding: \"8px\" }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student Group List:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <Input\r\n                      className={classes.Input}\r\n                      type=\"file\"\r\n                      id=\"file\"\r\n                      name=\"student_file\"\r\n                      onChange={this.fileValidation}\r\n                      style={{\r\n                        width: \"60%\",\r\n                        padding: \"12px\"\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <div style={{ alignItems: \"center\", margin: \"0 30%\" }}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                        startIcon={<CloudUploadIcon />}\r\n                        style={{\r\n                          padding: \"8px 50px\",\r\n                          fontSize: \"18px\",\r\n                          backgroundColor: \"#1877f2\",\r\n                          margin: \"25px\"\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Data submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Data not submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </div>\r\n        );\r\n      }\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <SideMenu/>\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n            {}\r\n              <ProjectList Groups={Groups} Guides={Guides} />\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AdminContent from \"../components/Admin-component/AdminContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n// var today = new Date(),\r\n//   date = today.getDate();\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <AdminContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../URL\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./background2.jpg\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet Data = \"\";\r\nlet data_access = \"\";\r\nlet Ad = [];\r\nvar today = new Date(),\r\n  date =\r\n    today.getDate() +\r\n    \"a\" +\r\n    today.getMonth() +\r\n    \"V\" +\r\n    today.getFullYear() +\r\n    \"hello\" +\r\n    50 +\r\n    \"Z\" +\r\n    today.getDate();\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    background: \"transparent\",\r\n    // boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n    borderRadius: \"6px\",\r\n    float: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    paddingTop: \"40px\",\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      paddingTop: \"20px\"\r\n    }\r\n  },\r\n  leftpaper: {\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundSize: \"cover\",\r\n    height: \"100%\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#1877f2\",\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    marginTop: \"30px\"\r\n  },\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  title: {\r\n    paddingTop: \"50px\",\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"775\")]: {\r\n      fontSize: \"45px\"\r\n    },\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      fontSize: \"40px\"\r\n    }\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n\r\n    if (token == null) {\r\n      loggedIn = false;\r\n      // console.log(\"token is null\");\r\n    }\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedIn,\r\n      user: \"\",\r\n      msg: \"\",\r\n      invalidCredentials: false,\r\n      getResponse: false\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChange = name => ({ target: { value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    //Login Logic\r\n    this.setState({ getResponse: true });\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL+\"/login\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        email: username,\r\n        password: password\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n      }\r\n    })\r\n      .then(\r\n        function (response) {\r\n          Data = response.data.type;\r\n          data_access = response.data.access_token;\r\n          localStorage.setItem(\"access_token\", response.data.access_token);\r\n          this.setState({\r\n            user: response.data.type,\r\n            loggedIn: true,\r\n            msg: \"set\",\r\n            getResponse: false\r\n          });\r\n        }.bind(this)\r\n      )\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ invalidCredentials: true, getResponse: false });\r\n      });\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(function (res) {\r\n        Ad = res.data;\r\n        // console.log(Ad);\r\n      })\r\n      // .then(() => {\r\n      //   localStorage.setItem(\"data\", \"set\");\r\n      // })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getToken() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === null) {\r\n      this.setState({\r\n        loggedIn: false\r\n      });\r\n      // console.log(this.state.loggedIn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (Data === \"admin\") {\r\n      this.checkData();\r\n    }\r\n    if (Data === \"yami\") {\r\n      localStorage.setItem(\"token\", \"N1g70xwfa0V6oCXVweqt\" + date);\r\n    }\r\n    if (Data === \"admin\") {\r\n      localStorage.setItem(\"token\", \"admin\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"guide\") {\r\n      localStorage.setItem(\"token\", \"guide\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"ig\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"pic\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"hod\") {\r\n      localStorage.setItem(\"token\", \"hod\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"student\") {\r\n      localStorage.setItem(\"token\", \"student\");\r\n      localStorage.setItem(\"access_token\",data_access);\r\n    }\r\n    Data = \"\";\r\n    if (this.state.loggedIn) {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (token === \"N1g70xwfa0V6oCXVweqt\" + date)\r\n        return <Redirect to=\"/yami\" exact />;\r\n      if (token === \"admin\") return <Redirect to=\"/admin\" exact />;\r\n      if (token === \"student\") return <Redirect to=\"/student\" exact />;\r\n      if (token === \"faculty\") return <Redirect to=\"/faculty\" exact />;\r\n      if (token === \"hod\") return <Redirect to=\"/hod\" exact />;\r\n      if (token === \"guide\") return <Redirect to=\"/guide\" exact />;\r\n    }\r\n    const handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n      this.setState({ invalidCredentials: false });\r\n    };\r\n    // if (this.state.loggedIn) {\r\n    //   return <Redirect to=\"/admin\" />;\r\n    // }\r\n    if (this.state.getResponse) {\r\n      return <LinearProgress />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.leftpaper}>\r\n          <Typography variant=\"h2\" className={classes.title}>\r\n            <b>Project Management System</b>\r\n          </Typography>\r\n          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n            <CssBaseline />\r\n            <Avatar variant=\"circle\" className={classes.avatar}>\r\n              <PersonIcon fontSize=\"large\" />\r\n            </Avatar>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              <b>User Login</b>\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={this.submitForm}>\r\n              <TextField\r\n                type=\"email\"\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange(\"username\")}\r\n                className={classes.fields}\r\n              />\r\n              <TextField\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange(\"password\")}\r\n                autoComplete=\"current-password\"\r\n                className={classes.fields}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n            <Link\r\n              to=\"/forgetPassword\"\r\n              style={{ textDecoration: \"underline\", color: \"#fff\", marginRight:\"5px\" }}\r\n            >\r\n            forgot password ? reset now\r\n            </Link>\r\n            <Snackbar\r\n              open={this.state.invalidCredentials}\r\n              autoHideDuration={6000}\r\n              onClose={handleClose}\r\n            >\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                Invalid Username/Password Please try again\r\n              </Alert>\r\n            </Snackbar>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Login);\r\n// <Grid container>\r\n//   <Hidden xsDown>\r\n//     <Grid item   md={7}   className={classes.leftpaper}>\r\n//     </Grid>\r\n//   </Hidden>\r\n//   <Grid item  component=\"main\" maxWidth=\"xs\" md={5}>\r\n//     <CssBaseline />\r\n//     <div\r\n//       className={classes.paper}\r\n//       style={{\r\n//         boxShadow:\r\n//           \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n//         backgroundColor: \"#fff\",\r\n//         borderRadius: \"6px\"\r\n//       }}\r\n//     >\r\n//       <Avatar\r\n//         variant=\"circle\"\r\n//         className={classes.avatar}\r\n//         style={{ marginTop: \"30px\" }}\r\n//       >\r\n//         <PersonIcon fontSize=\"large\" />\r\n//       </Avatar>\r\n//       <Typography component=\"h2\" variant=\"h6\">\r\n//         User Login\r\n//       </Typography>\r\n//       <form\r\n//         className={classes.form}\r\n//         onSubmit={this.submitForm}\r\n//         noValidate\r\n//       >\r\n//         <TextField\r\n//           type=\"email\"\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           id=\"username\"\r\n//           label=\"username\"\r\n//           value={this.state.username}\r\n//           onChange={this.handleChange(\"username\")}\r\n//           className={classes.fields}\r\n//           autoFocus\r\n//         />\r\n//         <TextField\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           label=\"Password\"\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           value={this.state.password}\r\n//           onChange={this.handleChange(\"password\")}\r\n//           autoComplete=\"current-password\"\r\n//           className={classes.fields}\r\n//         />\r\n\r\n//         <Button\r\n//           type=\"submit\"\r\n//           fullWidth\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           className={classes.submit}\r\n//           style={{\r\n//             padding: \"10px\",\r\n//             fontSize: \"18px\",\r\n//             fontWeight: \"bolder\",\r\n//             backgroundColor: \"#1877f2\",\r\n//             marginBottom: \"25px\"\r\n//           }}\r\n//         >\r\n//           Log In\r\n//         </Button>\r\n//       </form>\r\n//       <Snackbar\r\n//         open={this.state.invalidCredentials}\r\n//         autoHideDuration={6000}\r\n//         onClose={handleClose}\r\n//       >\r\n//         <Alert onClose={handleClose} severity=\"error\">\r\n//           Invalid Username/Password Please try again\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </div>\r\n//   </Grid>\r\n// </Grid>\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Logout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"access_token\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>You Have been Logged out</h1>\r\n        <button onClick={() => {window.location.reload(false)}}><Link to=\"/\">Login Again</Link></button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport {Typography, TextField, Grid, Button, withStyles, CircularProgress, Tabs, Tab, Box, AppBar, createMuiTheme, ThemeProvider, responsiveFontSizes } from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet stuData = null;\r\nlet Stu = null;\r\nlet filled = false;\r\nlet Proposals = null;\r\nlet pref1=[];\r\nlet pref2=[];\r\nlet pref3=[];\r\n\r\nconst useStyles = theme => ({\r\n  buttonprop: {\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  TextField: {\r\n    width: \"100%\"\r\n  },\r\n  typography:{\r\n    fontSize:\"16px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  typographyFilled:{\r\n    fontWeight:\"700\",\r\n    fontSize:\"20px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  tabPanel:{\r\n    borderTop:\"1px solid #000\",\r\n    width:\"100%\"\r\n  },\r\n  largeWinTabs:{\r\n    [theme.breakpoints.down('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n  smallWinTabs:{\r\n    [theme.breakpoints.up('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nclass StudentContent extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      preferences: [\r\n        {\r\n          filled: false,\r\n          prefno: 1,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 2,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 3,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        }\r\n      ],\r\n      currentStep: 1,\r\n      stuData: null,\r\n      tabValue: 0,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      formFilled: false,\r\n      loading: false,\r\n      open:false\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({open:true})\r\n  };\r\n\r\n  handleAgreeClickClose = () => {\r\n    Stu=0;\r\n    this.setState({open:false})\r\n  }\r\n  handleCancelClickClose = () => {\r\n    this.setState({open:false})\r\n  }\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      stuData: null\r\n    });\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      tabValue: newValue\r\n    });\r\n  };\r\n\r\n  handleTopChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      //let prefno = prefs[i].prefno;\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Top = e.target.value;\r\n        //prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n        // console.log(this.state.preferences);\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleDosChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dos = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleDsopChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dsop = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleAgencyChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Agency = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleMtapChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Mtap = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleRedChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Red = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleShrChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Shr = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleFileChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        prefs[i].selectedFile = e.target.files[0];\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClick = (e, pn) => {\r\n    e.preventDefault();\r\n    if (this.state.currentStep === 3) {\r\n      console.log(\"HELLO\");\r\n      let prefs = [...this.state.preferences];\r\n      for (var i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n          console.log(prefs[i].filled);\r\n          this.handleSubmit(e);\r\n        }\r\n      }\r\n    } else {\r\n      let prefs = [...this.state.preferences];\r\n      for (i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n          console.log(prefs[i].filled);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(this.state.preferences);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let pref1 = this.state.preferences[0];\r\n    let pref2 = this.state.preferences[1];\r\n    let pref3 = this.state.preferences[2];\r\n    //console.log(pref1);\r\n    let proposals = [\r\n      {\r\n        title: pref1.Top,\r\n        specialization: pref1.Dos,\r\n        details: pref1.Dsop,\r\n        agency: pref1.Agency,\r\n        method: pref1.Mtap,\r\n        result: pref1.Red,\r\n        requirements: pref1.Shr\r\n      },\r\n      {\r\n        title: pref2.Top,\r\n        specialization: pref2.Dos,\r\n        details: pref2.Dsop,\r\n        agency: pref2.Agency,\r\n        method: pref2.Mtap,\r\n        result: pref2.Red,\r\n        requirements: pref2.Shr\r\n      },\r\n      {\r\n        title: pref3.Top,\r\n        specialization: pref3.Dos,\r\n        details: pref3.Dsop,\r\n        agency: pref3.Agency,\r\n        method: pref3.Mtap,\r\n        result: pref3.Red,\r\n        requirements: pref3.Shr\r\n      }\r\n    ];\r\n    var formData = new FormData();\r\n    formData.append(\"proposals\", JSON.stringify(proposals));\r\n    formData.append(\"file1\", this.state.preferences[0].selectedFile);\r\n    formData.append(\"file2\", this.state.preferences[1].selectedFile);\r\n    formData.append(\"file3\", this.state.preferences[2].selectedFile);\r\n    console.log(proposals);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n\r\n    console.log(this.state.preferences);\r\n  };\r\n\r\n  checkData = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers : {\r\n                Authorization : 'Bearer '+localStorage.getItem(\"access_token\"),\r\n            }\r\n    })\r\n      .then(res => {\r\n        Stu = res.data.proposals.length;\r\n        Proposals = res.data.proposals;\r\n        //console.log(Proposals);\r\n        pref1 = Proposals[0]\r\n        pref2 = Proposals[1]\r\n        pref3 = Proposals[2]\r\n        // console.log(pref1)\r\n        this.setState({\r\n          stuData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  _next = e => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n    this.handleClick(e, currentStep - 1);\r\n  };\r\n\r\n  _prev = () => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n  };\r\n\r\n  handleNext = e => {\r\n    e.preventDefault();\r\n    let currentStep = this.state.currentStep;\r\n    let {\r\n      Top,\r\n      Dos,\r\n      Dsop,\r\n      Agency,\r\n      Mtap,\r\n      Red,\r\n      Shr,\r\n      selectedFile\r\n    } = this.state.preferences[currentStep - 1];\r\n    if (\r\n      Top === \"\" ||\r\n      Dos === \"\" ||\r\n      Dsop === \"\" ||\r\n      Agency === \"\" ||\r\n      Mtap === \"\" ||\r\n      Red === \"\" ||\r\n      Shr === \"\" ||\r\n      selectedFile === null\r\n    ) {\r\n      alert(\"Please enter all the details of the preference\");\r\n    } else {\r\n      // console.log(this.state.preferences);\r\n      this.setState({ open: true });\r\n      this._next(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    stuData = this.state.stuData;\r\n    filled = this.state.filled;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (stuData === null) {\r\n      this.checkData();\r\n    }\r\n    if (filled === true) {\r\n      if (Stu === 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <form>\r\n              <Step1\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleClose={this.handleClose}\r\n                handleFileChange={this.handleFileChange}\r\n              />\r\n              <Step2\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                handleClose={this.handleClose}\r\n                _prev={this._prev}\r\n              />\r\n              <Step3\r\n                classes={classes}\r\n                openSuccess={this.state.openSuccess}\r\n                openFailure={this.state.openFailure}\r\n                handleClose={this.handleClose}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleSubmit={this.handleSubmit}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                _prev={this._prev}\r\n              />\r\n              {/* {this.previousButton()} */}\r\n            </form>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n      if (Stu !== 0) {\r\n        let value=this.state.tabValue;\r\n          return (\r\n            <React.Fragment>\r\n              {!(pref1.approval.admin||pref2.approval.admin||pref3.approval.admin)?(\r\n                <React.Fragment>\r\n                  <Button onClick={this.handleClickOpen} style={{float:\"right\",margin:\"5px 0\"}} variant=\"contained\" color=\"secondary\">\r\n                    Re-enter Proposals\r\n                  </Button>\r\n                  <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClickClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                  >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Re-enter the proposals?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                      <DialogContentText id=\"alert-dialog-description\">\r\n                        If you click ok then you have to re-enter the proposals completely. If you refresh the page or close the tabs then all your changes will be lost. \r\n                      </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={this.handleCancelClickClose} color=\"primary\" autoFocus>\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={this.handleAgreeClickClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </React.Fragment>\r\n              ):(null)}\r\n              <div className={classes.largeWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\" centered>\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </div>\r\n              <div className={classes.smallWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs variant=\"scrollable\" scrollButtons=\"on\" value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\">\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <CircularProgress />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step1(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 1) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 1\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step2(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 2) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 2\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n            {/* <Snackbar open={props.open} autoHideDuration={6000} onClose={props.handleClose}>\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preference 2 submitted successfully\r\n              </Alert>\r\n            </Snackbar> */}\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step3(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 3) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 3\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              type=\"submit\"\r\n              onClick={e => {\r\n                props.handleClick(e, props.currentStep);\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Snackbar\r\n              open={props.openSuccess}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preferences submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n              open={props.openFailure}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"error\">\r\n                Preferences not submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(StudentContent);\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from \"@material-ui/core\";\r\n\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nlet propF = false;\r\nlet fill = false;\r\nlet Group = null;\r\n\r\nconst StudentHomePage = (props) => {\r\n\r\n    Group=props.Group;\r\n    AppliedOn=props.AppliedOn;\r\n    DueDate=props.DueDate;\r\n    const filled = true;\r\n    const loading = false;\r\n    const classes = useStyles();\r\n    if(Group.proposals.length!==0){\r\n      propF=true\r\n    }\r\n    fill = filled;\r\n\r\n  function propApproved(proposals) {\r\n    let approved = false;\r\n    let propTitle = \"\";\r\n    proposals.map(proposal => {\r\n      if (proposal.approval.admin && proposal.approval.hod) {\r\n        approved = true;\r\n        propTitle = proposal.title;\r\n      }\r\n      return(null)\r\n    });\r\n\r\n    if (approved) {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}}  color=\"primary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ margin: \"20px 0\",float:\"left\",fontSize:\"20px\" }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposal <b>{propTitle}</b> has been approved. Please start working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}} color=\"secondary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{float:\"left\", margin: \"15px 0\",fontSize:\"20px\" }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposal <b>{propTitle}</b> has been approved. Please start working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}} color=\"primary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ margin: \"15px 0\",float:\"left\",fontSize:\"20px\"  }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"secondary\" variant=\"h4\">\r\n              Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{ margin: \"15px 0\" }} variant=\"h5\">\r\n              Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <div style={{ margin: \"auto\" }}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  if (fill && propF) {\r\n    let i = 1;\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Typography style={{ marginTop: \"20px\" }} variant=\"h4\">\r\n            Approval Status\r\n          </Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Proposal</TableCell>\r\n                  <TableCell align=\"center\">Proposal Title</TableCell>\r\n                  <TableCell align=\"center\">Admin</TableCell>\r\n                  <TableCell align=\"center\">Head of Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {proposals.map(proposal => (\r\n                  <TableRow key={proposal.title}>\r\n                    <TableCell align=\"center\">{i++}</TableCell>\r\n                    <TableCell align=\"center\">{proposal.title}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.admin ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.hod ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {propApproved(proposals)}\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  if (fill && !propF) {\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {proposals.length === 0 ? (\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              <b>Due Date for Submitting Proposals:</b>&nbsp;&nbsp;{DueDate}\r\n            </Typography>\r\n          ) : null}\r\n          {/* {(new Date(DueDate).getTime()<Date.now()?(\r\n            <Typography color=\"error\" style={{marginBottom: \"30px\",fontSize:\"30px\" }} variant=\"h3\">You have crossed Due Date.<br/></Typography>\r\n          ):(null))} */}\r\n          <Typography color=\"error\" style={{float:\"left\",fontSize:\"20px\" }} variant=\"h4\">\r\n            Preferences have not been filled.&nbsp;\r\n          </Typography><br/>\r\n          <Typography color=\"error\" style={{ marginBottom: \"30px\",float:\"left\",fontSize:\"20px\" }} variant=\"h4\">\r\n            Please fill your preferences from the Preferences tab.<br/>\r\n          </Typography>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return <CircularProgress />;\r\n};\r\n\r\nexport default StudentHomePage;\r\n","import React from 'react';\r\nimport { makeStyles, Typography, CircularProgress, Grid, Paper } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo:{\r\n        textAlign:\"Left\"\r\n    }\r\n}))\r\n\r\nlet Group = null;\r\n\r\nconst StudentCommentPage = (props) => {\r\n    Group = props.Group\r\n    const classes = useStyles();\r\n\r\n\r\n    if(Group === null){\r\n        return (\r\n            <div style={{ margin: \"auto\" }}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }else{\r\n        const {comments} = Group;\r\n        if(comments.length === 0){\r\n            return(\r\n                <React.Fragment>\r\n                    <Typography variant=\"h4\">No comments have been added</Typography>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n            comments.map(comment => {\r\n                let dt = new Date(comment.time)\r\n                return(\r\n                    <React.Fragment key={comment._id}>\r\n                        <Paper style={{backgroundColor:\"#e0e0e0\"}}>\r\n                            <Grid style={{margin:\"10px 35px\"}} container spacing={2}>\r\n                                <Grid className={classes.typo} item xs={12} sm={4}>\r\n                                    <Typography><b>Author</b> : {comment.author}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={6} sm={4}>\r\n                                    <Typography><b>Date</b> : {dt.getDate()}/{dt.getMonth()+1}/{dt.getFullYear()}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={6} sm={4}>\r\n                                    <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}</Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid className={classes.typo} item xs={12}>\r\n                                    <Typography><b>Comment</b> : {comment.text}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </React.Fragment>\r\n                );\r\n            }))\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentCommentPage;","import { CircularProgress, createMuiTheme, makeStyles, Paper, responsiveFontSizes, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, ThemeProvider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\nconst useStyles = makeStyles(theme => ({\r\n    tableContainer: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"50px\"\r\n      },\r\n      table: {\r\n        minWidth: 650\r\n      }\r\n  }));\r\n\r\nconst days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\nlet Group=null;\r\nlet Presentations = null;\r\n\r\nconst StudentPresentation = (props) => {\r\n    const classes = useStyles();\r\n    Group=props.Group;\r\n    Presentations=Group.presentation\r\n    Presentations.sort((a,b)=>(new Date(a.scheduled_date).getTime()>new Date(b.scheduled_date).getTime())?1:-1)\r\n    if(Group===null){\r\n        return(\r\n            <React.Fragment>\r\n                <CircularProgress />\r\n            </React.Fragment>\r\n        )\r\n    }else{\r\n        if(Presentations.length!==0){\r\n            return(\r\n                <React.Fragment>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h4\">Presentation Details</Typography>\r\n                        <TableContainer\r\n                            style={{ backgroundColor: \"#d3d3d3\" }}\r\n                            className={classes.tableContainer}\r\n                            component={Paper}\r\n                        >\r\n                            <Table\r\n                            className={classes.table}\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                            >\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                    <TableCell align=\"center\">No.</TableCell>\r\n                                    <TableCell align=\"center\">Date</TableCell>\r\n                                    <TableCell align=\"center\">Day</TableCell>\r\n                                    <TableCell align=\"center\">Time</TableCell>\r\n                                    <TableCell align=\"center\">Marks</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Presentations.map((Presentation,index) => (\r\n                                    <TableRow key={Presentation._id}>\r\n                                        <TableCell align=\"center\">{index+1}</TableCell>\r\n                                        <TableCell align=\"center\">{new Date(Presentation.scheduled_date).getDate()}/{new Date(Presentation.scheduled_date).getMonth()+1}/{new Date(Presentation.scheduled_date).getFullYear()}</TableCell>\r\n                                        <TableCell align=\"center\">{days[new Date(Presentation.scheduled_date).getDay()]}</TableCell>\r\n                                        {(new Date(Presentation.scheduled_date).getHours()>12)?(\r\n                                            <TableCell align=\"center\">\r\n                                                {new Date(Presentation.scheduled_date).getHours()-12}:{new Date(Presentation.scheduled_date).getMinutes()} pm \r\n                                            </TableCell>\r\n                                        ):(\r\n                                            <TableCell align=\"center\">\r\n                                                {new Date(Presentation.scheduled_date).getHours()}:{new Date(Presentation.scheduled_date).getMinutes()} am \r\n                                            </TableCell>\r\n                                        )}\r\n                                        {(Presentation.marks===null)?(\r\n                                            <React.Fragment>\r\n                                                {new Date(Presentation.scheduled_date).getTime()>Date.now()?(\r\n                                                    <TableCell align=\"center\">\r\n                                                        Presentation Not conducted\r\n                                                    </TableCell>\r\n                                                ):(\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography style={{fontSize:\"12\"}} color=\"secondary\">\r\n                                                            Presentation missing\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                )}\r\n                                            </React.Fragment>\r\n                                        ):(\r\n                                            <TableCell align=\"center\">\r\n                                                {Presentation.marks}\r\n                                            </TableCell>\r\n                                        )}\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ThemeProvider>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <Typography>\r\n                    No Presentations have been scheduled. Please check later or contact your Faculty\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentPresentation;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Container, CircularProgress } from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport StudentContent from \"./StudentContent\";\r\nimport Profile from \"../Profile\";\r\nimport StudentHomePage from \"./studentHomePage\";\r\nimport StudentCommentPage from \"./StudentCommentPage\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport StudentPresentation from \"./StudentPresentation\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nlet userInfo = [];\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Container>\r\n          <Box>\r\n            <Typography component={\"span\"}>{children}</Typography>\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    maxWidth: \"100%\",\r\n    marginTop: \"3px\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  // tabs: {\r\n  //   borderRight: `1px solid ${theme.palette.divider}`,\r\n  // },\r\n  TabPanel: {\r\n    //borderLeft:`1px solid ${theme.palette.divider}`,\r\n    display: \"block\"\r\n    //margin:\"1px\",\r\n  },\r\n  vert_tab_grid: {\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  hor_tab_grid: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  large_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.down(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  small_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.up(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nlet Group=null;\r\n\r\nconst StudentWholePage = props => {\r\n  userInfo = props.userInfo;\r\n  const [obtained,setObtained] = React.useState(false)\r\n  const [academicYear,setAcademicYear] = React.useState(\"\")\r\n  const [reqSent,setReqSent] = React.useState(false)\r\n  //console.log(userInfo.name);\r\n\r\n\r\n  function checkData() {\r\n    setReqSent(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers:{\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Group = res.data;\r\n        setObtained(true);\r\n        DueDate = Group.dueDate.split(\"T\")[0];\r\n        if(Group.proposals.length!==0){\r\n          AppliedOn = Group.proposals[0].applied.split(\"T\")[0];\r\n        }\r\n        setAcademicYear(Group.acadYear)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  if(obtained===false && reqSent===false){\r\n    checkData()\r\n  }\r\n  if(obtained===true){\r\n    // console.log(academicYear)\r\n    return (\r\n      <React.Fragment>\r\n        <Profile academicYear={academicYear} userInfo={userInfo} />\r\n        <div\r\n          style={{\r\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n          }}\r\n          className={classes.small_win_tabs}\r\n        >\r\n          <Grid container className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid item xs={12} className={classes.hor_tab_grid}>\r\n                <Tabs\r\n                  orientation=\"horizontal\"\r\n                  variant=\"scrollable\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"horizontal tabs\"\r\n                  // variant=\"fullWidth\"\r\n                  scrollButtons=\"on\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                >\r\n                  <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Preferences\"\r\n                    {...a11yProps(1)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Comments\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Presentations\"\r\n                    {...a11yProps(3)}\r\n                  />\r\n                </Tabs>\r\n              </Grid>\r\n              {/* <Grid item xs={2} /> */}\r\n            </ThemeProvider>\r\n            <Grid className={classes.TabPanel} item xs={12}>\r\n              <TabPanel value={value} index={0}>\r\n                <StudentHomePage Group={Group} DueDate={DueDate} AppliedOn={AppliedOn}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <StudentContent />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <StudentCommentPage Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <StudentPresentation Group={Group} />\r\n              </TabPanel>\r\n            </Grid>\r\n            {/* <Grid item xs={1}></Grid> */}\r\n          </Grid>\r\n        </div>\r\n        <div\r\n          style={{\r\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n          }}\r\n          className={classes.large_win_tabs}\r\n        >\r\n          <Grid style={{ marginTop: \"3px\" }} container className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid item xs={3} className={classes.vert_tab_grid}>\r\n                <Tabs\r\n                  orientation=\"vertical\"\r\n                  value={value}\r\n                  variant=\"fullWidth\"\r\n                  onChange={handleChange}\r\n                  aria-label=\"Vertical tabs\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                >\r\n                  <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Preferences\"\r\n                    {...a11yProps(1)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Comments\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Presentations\"\r\n                    {...a11yProps(3)}\r\n                  />\r\n                </Tabs>\r\n              </Grid>\r\n            </ThemeProvider>\r\n            <Grid className={classes.TabPanel} item xs={9}>\r\n              <TabPanel value={value} index={0}>\r\n                <StudentHomePage Group={Group} DueDate={DueDate} AppliedOn={AppliedOn}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <StudentContent />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <StudentCommentPage Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <StudentPresentation Group={Group} />\r\n              </TabPanel>\r\n            </Grid>\r\n            {/* <Grid item xs={1}></Grid> */}\r\n          </Grid>\r\n        </div>\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }else{\r\n    return(\r\n      <CircularProgress />\r\n    )\r\n  }\r\n};\r\n\r\nexport default StudentWholePage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport StudentWholePage from \"../components/Student-component/studentWholePage\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n//import StudentContent from \"../components/Student-component/StudentContent\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"student\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    \r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        //console.log(res.data);\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"NO user\" });\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"access_token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"student\") {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <StudentWholePage userInfo={this.state.user} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel : {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float : \"left\",\r\n  }\r\n});\r\n\r\nclass YamiContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      openSuccess : false,\r\n      openFailure : false,\r\n      name:\"\",\r\n      mail: \"\",\r\n      dept: \"Computer Science\"\r\n    };\r\n  }\r\n\r\n  mailHandler = event => {\r\n    this.setState({ mail: event.target.value });\r\n  };\r\n  nameHandler = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  deptHandler = event => {\r\n    this.setState({ dept: event.target.value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const {name, mail, dept } = this.state;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/yami\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        name : name,\r\n        email: mail,\r\n        department: dept\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(response => {\r\n        this.setState({openSuccess:true});\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({openFailure:true});\r\n      });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      this.setState({openFailure:false,openSuccess:false})\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <LoggedNavbar />\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div\r\n            className={classes.paper}\r\n            style={{\r\n              boxShadow:\r\n                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: \"6px\"\r\n            }}\r\n          >\r\n           \r\n            <form\r\n              className={classes.form}\r\n              onSubmit={this.submitHandler}\r\n              noValidate\r\n            >\r\n              <Typography variant=\"h4\" style={{ marginTop:'15px',marginBottom:'15px'}}>\r\n                Create Admin\r\n              </Typography>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin name\"\r\n                value={this.state.name}\r\n                onChange={this.nameHandler}\r\n                autoFocus/>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin email\"\r\n                value={this.state.mail}\r\n                onChange={this.mailHandler}\r\n                />\r\n              <InputLabel\r\n              className = {classes.deptLabel}> Select Department</InputLabel>\r\n              <Select\r\n                value={this.state.dept}\r\n                onChange={this.deptHandler}\r\n                label=\"Department\"\r\n                fullWidth\r\n              >\r\n                <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\r\n                <MenuItem value=\"Information Technology\">Information Technology</MenuItem>\r\n                <MenuItem value=\"Electronics and Telecommunication\">Electronics and Telecommunication</MenuItem>\r\n                <MenuItem value=\"Electronics\">Electronics</MenuItem>\r\n              </Select>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  fontSize: \"18px\",\r\n                  fontWeight: \"bolder\",\r\n                  backgroundColor: \"#1877f2\",\r\n                  marginBottom: \"25px\"\r\n                }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </form>\r\n            <Snackbar open={this.state.openSuccess} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                A new Admin was created successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={this.state.openFailure} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                There was some problem while creating the admin please refresh the page and try again.\r\n              </Alert>\r\n            </Snackbar>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n        \r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(YamiContent);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport YamiContent from \"../components/Yami-component/YamiContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Yami extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"None\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === null) {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"yami\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <YamiContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" exact />;\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, Component} from 'react';\r\nexport const ProjectContext = createContext();\r\n\r\nclass ProjectContextProvider extends Component{\r\n    state = {\r\n            projects:[\r\n                {title:\"project1\",isapproved:true,comment:\"\",id:1},\r\n                {title:\"project2\",isapproved:false,comment:\"\",id:2},\r\n                {title:\"project3\",isapproved:false,comment:\"\",id:3},\r\n                {title:\"project4\",isapproved:false,comment:\"\",id:4},\r\n                {title:\"project5\",isapproved:true,comment:\"\",id:5}\r\n            ]\r\n    }\r\n    Approve = (id) => {\r\n        let projects = [...this.state.projects];\r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.isapproved = !project.isapproved;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    addComment = (id,comment) => {\r\n        let projects = [...this.state.projects];\r\n        \r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.comment = comment;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <ProjectContext.Provider value={{...this.state,Approve: this.Approve,addComment: this.addComment}}>\r\n                {this.props.children}\r\n            </ProjectContext.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ProjectContextProvider;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst ProjectDetails = (project) => {\r\n    // const handleClick = () => {\r\n    //     const pro_to_show = project;\r\n    //     ProjectForm(pro_to_show);\r\n    // } \r\n    return (\r\n            <NavLink to={{pathname:\"/projectform\",aboutProps:{project}}}>\r\n                <div>\r\n                    <label className=\"title\"> Title : {project.project.title}</label>\r\n                    <label className=\"id\"> ID : {project.project.id}</label>\r\n                </div>\r\n            </NavLink>\r\n     );\r\n}\r\n \r\nexport default ProjectDetails;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { ProjectContext } from \"../../context/projectcontext\";\r\nimport ProjectDetails from \"./projectdetails\";\r\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nconst ProjectList = () => {\r\n  const { projects } = useContext(ProjectContext);\r\n  return projects.length ? (\r\n    <div className=\"project-list\">\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Approved</Tab>\r\n          <Tab>Not Approved</Tab>\r\n        </TabList>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? null : (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            );\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            ) : null;\r\n          })}\r\n        </TabPanel>\r\n      </Tabs>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">No projects submitted</div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport \"./FacultyContent.css\";\r\nimport ProjectContextProvider from \"../../context/projectcontext\";\r\nimport ProjectList from \"../verification/projectlist\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\n\r\nconst FacultyContent = props => {\r\n  return (\r\n    <div>\r\n      <LoggedNavbar />\r\n      <ProjectContextProvider>\r\n        <ProjectList />\r\n      </ProjectContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacultyContent;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FacultyContent from \"../components/Faculty-component/FacultyContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"faculty\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"no user\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (\r\n      this.state.user.type === \"ig\" ||\r\n      this.state.user.type === \"pic\"\r\n    ) {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <FacultyContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChangePassword.css\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel: {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float: \"left\"\r\n  }\r\n});\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      user: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      openSuccess: false,\r\n      openFailure :false,\r\n      helptext : \"\",\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"no user\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  pushPassword = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/changePassword\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        newPassword: this.state.newPassword,\r\n        confirmPassword: this.state.confirmPassword\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({openFailure : true});\r\n      });\r\n  };\r\n\r\n  newpasswordHandler = e => {\r\n    this.setState({ newPassword: e.target.value });\r\n  };\r\n  confirmpasswordHandler = e => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(this.state.newPassword !== this.state.confirmPassword){\r\n      this.setState({helptext : \"Two fields Doesn't match\"}) ;\r\n    }else if(this.state.newPassword.length < 8){\r\n      this.setState({helptext : \"Please Enter a Password with length greater than 8\"});\r\n    }\r\n    else{\r\n       this.pushPassword(); \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if(this.state.openSuccess){\r\n        this.setState({openSuccess: false, user: \"no user\"});\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n      else if(this.state.openFailure){\r\n        this.setState({openFailure : false});\r\n      }\r\n    };\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user === \"no user\") {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div\r\n              className={classes.paper}\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"6px\"\r\n              }}\r\n            >\r\n              <Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  Your Password was changed successfully Please click anywhere\r\n                  to login again\r\n                </Alert>\r\n              </Snackbar>\r\n              <Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                  There was some problem while changing your password please refresh the page and try again\r\n                </Alert>\r\n              </Snackbar>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={this.handleSubmit}\r\n                noValidate\r\n              >\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  style={{ marginTop: \"15px\", marginBottom: \"15px\" }}\r\n                >\r\n                  Change Password\r\n                </Typography>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  value={this.state.newPassword}\r\n                  onChange={this.newpasswordHandler}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.confirmpasswordHandler}\r\n                />\r\n                <Typography variant=\"subtitle2\" color=\"error\">\r\n                  {this.state.helptext}\r\n                </Typography>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bolder\",\r\n                    backgroundColor: \"#1877f2\",\r\n                    marginBottom: \"25px\"\r\n                  }}\r\n                >\r\n                  Change Password\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ChangePassword);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <React.Fragment>\r\n            <h1>404 Page Not Found</h1>\r\n            <p>The page you were looking for was not found </p>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\",\r\n    margin: theme.spacing(2)\r\n  },\r\n  backButton: {},\r\n  buttonContainer: {\r\n    padding: \"auto\",\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n          {/* <Link\r\n            to=\"/\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          > */}\r\n            <Button style={{color:\"#000\"}} onClick={()=>{window.history.back()}}  variant=\"contained\">\r\n              <ArrowBackRoundedIcon />\r\n            </Button>\r\n          {/* </Link> */}\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typo1: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"Medium\"\r\n  },\r\n  typo2: {\r\n    textAllign: \"right\",\r\n    fontWeight: \"Light\"\r\n  }\r\n}));\r\n\r\nconst THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst AdminCommentPage = props => {\r\n  const classes = useStyles();\r\n  const comments = props.Comments;\r\n  if (comments.length === 0) {\r\n    console.log(comments.length);\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h4\">No comments have been added</Typography>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <ThemeProvider theme={THEME}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <Paper\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"0px\",\r\n                marginTop: \"50px\",\r\n                marginBottom: \"50px\"\r\n              }}\r\n            >\r\n              <Paper style={{ borderRadius: \"0\" }}>\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{ fontWeight: \"400\", textAlign: \"left\" }}\r\n                >\r\n                  &nbsp;Previous Comments:\r\n                </Typography>\r\n              </Paper>\r\n              {comments\r\n                .slice(0)\r\n                .reverse()\r\n                .map(comment => {\r\n                  let d = new Date(comment.time);\r\n                  return (\r\n                    <React.Fragment key={comment._id}>\r\n                      <Paper style={{ borderRadius: \"0\" }}>\r\n                        <Grid\r\n                          container\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"5px\"\r\n                          }}\r\n                          spacing={2}\r\n                        >\r\n                          <Grid\r\n                            className={classes.typo1}\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            md={8}\r\n                          >\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 16,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Author : {comment.author}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Roboto\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Date : {d.toString().substr(4, 12)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Helvetica Neue\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Time : {d.toString().slice(15, 24)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo1} item xs={12}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 18,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Comment : {comment.text}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </React.Fragment>\r\n                  );\r\n                  // }else{return null}\r\n                })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AdminCommentPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../components/ToUpper\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport AdminCommentPage from \"../components/Admin-component/AdminCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  }\r\n});\r\n\r\n//axios get Request\r\n\r\nclass ControlledExpansionPanels extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      approved: false,\r\n      openSuccess: false,\r\n      openFailure: false\r\n    };\r\n  }\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState({\r\n      comment: comment\r\n    });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  //axios request to send comments\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          console.log(response);\r\n          this.setState({\r\n            adData: null,\r\n            comment: \"\"\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //axios post request to \"/approve\"\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n\r\n    //call axios\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Proposal1 = Proposals[0];\r\n                let Proposal2 = Proposals[1];\r\n                let Proposal3 = Proposals[2];\r\n                let Comments = group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      let appliedDate = new Date(proposal.applied);\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Detailed Statement of Problem:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Internal Agency/External\r\n                                    Agency/CTL/Mastek/or any other:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Methods/Technique/Algorithm\r\n                                    proposed:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Software/Hardware Requirements:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/\r\n                                  {appliedDate.getMonth() + 1}/\r\n                                  {appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `http://localhost:8000/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {!proposal.approval.admin &&\r\n                                !Proposal1.approval.hod &&\r\n                                !Proposal2.approval.hod &&\r\n                                !Proposal3.approval.hod ? (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    onClick={() => {\r\n                                      this.handleApprove(pid, Gid);\r\n                                    }}\r\n                                  >\r\n                                    Approve Proposal\r\n                                  </Button>\r\n                                ) : (\r\n                                  <div>\r\n                                    {proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        This Proposal is Selected\r\n                                      </Button>\r\n                                    ) : proposal.approval.admin ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Waiting For Hod Approval\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved Another Proposal\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#e0e0e0\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\",\r\n                        boxShadow:\r\n                          \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                      }}\r\n                    >\r\n                      <Grid container className={classes.comment}>\r\n                        <Grid item xs={12} style={{ marginBottom: \"30px\" }}>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{ textAlign: \"left\", fontWeight: \"400\" }}\r\n                          >\r\n                            Comments\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comTitle}\r\n                        >\r\n                          <Typography>\r\n                            <b>Add Comments:</b>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                          <TextField\r\n                            className={classes.comField}\r\n                            variant=\"outlined\"\r\n                            component={\"span\"}\r\n                            multiline\r\n                            inputProps={{ style: { fontSize: 14 } }}\r\n                            rows={3}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            onChange={this.commentHandler}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comButton}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.sendComment(Gid);\r\n                            }}\r\n                          >\r\n                            Send Comment\r\n                          </Button>\r\n                          <Snackbar\r\n                            open={this.state.openSuccess}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert\r\n                              onClose={this.handleClose}\r\n                              severity=\"success\"\r\n                            >\r\n                              Successful comment\r\n                            </Alert>\r\n                          </Snackbar>\r\n                          <Snackbar\r\n                            open={this.state.openFailure}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert onClose={this.handleClose} severity=\"error\">\r\n                              Unsuccessful. Comment cannot be empty\r\n                            </Alert>\r\n                          </Snackbar>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                          <AdminCommentPage Comments={Comments} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nControlledExpansionPanels.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ControlledExpansionPanels);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  Box,\r\n  useTheme,\r\n  AccordionSummary,\r\n  Grid,\r\n  Button,\r\n  Accordion,\r\n  AccordionDetails\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst HodProjectList = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n  // console.log(props);\r\n  const Groups = props.Groups;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChangeT}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n          <Tab label=\"Approved by Project Coordinator\" {...a11yProps(1)} />\r\n          <Tab label=\"Pending Approval\" {...a11yProps(2)} />\r\n          <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && pref1HodApproval) ||\r\n              (pref2AdminApproval && pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && !pref1HodApproval) ||\r\n              (pref2AdminApproval && !pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                !pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1Approval = false;\r\n            let pref2Approval = false;\r\n            let pref3Approval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1Approval = pref1.approval.admin;\r\n              pref2Approval = pref2.approval.admin;\r\n              pref3Approval = pref3.approval.admin;\r\n            }\r\n\r\n            if (\r\n              !pref1Approval &&\r\n              !pref2Approval &&\r\n              !pref3Approval &&\r\n              Group.proposals.length !== 0\r\n            ) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n\r\n            if (Group.proposals.length === 0) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid\r\n                      container\r\n                      spacing={3}\r\n                      style={{ width: \"100%\", padding: \"auto\" }}\r\n                    >\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Typography>\r\n                          <b>Due Date for Submitting Proposals:</b>\r\n                          &nbsp;&nbsp;\r\n                          {DueDate}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </React.Fragment>\r\n    // <Typography>HELLO</Typography>\r\n  );\r\n};\r\n\r\nexport default HodProjectList;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  ButtonStyle:{\r\n    color:\"#000\",\r\n    backgroundColor:\"#e0e0e0\",\r\n    padding:\"0px 5px\",\r\n    cursor:\"pointer\",\r\n    borderRadius:\"2px\",\r\n    marginRight:\"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: '#fff'\r\n    }\r\n    \r\n  },\r\n  \r\n\r\n}));\r\n\r\n\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const histor = useHistory();\r\n   const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n   const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => histor.push(\"/hod\")\r\n    },\r\n    {\r\n      text: \"Groups\",\r\n      icon: <PeopleAltIcon/>,\r\n      onClick: () => histor.push(\"/hod/groups\")\r\n    }\r\n  ];\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n      {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <React.Fragment>\r\n            <ListItem button key={text} onClick={onClick} style={{marginRight:\"40px\"}}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n            <Divider/>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n     \r\n    </div>\r\n  );\r\n\r\n  return (\r\n        <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} >\r\n            {list(anchor)}\r\n          </Drawer>\r\n          <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n        <MenuIcon fontSize=\"large\" onClick={toggleDrawer(anchor, true)} className={classes.ButtonStyle} style={{}}/>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n          {auth && (\r\n            <div className={classes.profIcon}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/cp@2707user\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Change Password\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/logout\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Link\r\n            to=\"/cp@2707user\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              startIcon={<AssignmentIndIcon />}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            to=\"/logout\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"20px\" }}\r\n              startIcon={<ExitToAppIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n          </React.Fragment>\r\n          ))}\r\n    </div>\r\n          \r\n      \r\n     \r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withStyles, LinearProgress } from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport HodProjectList from \"./HodProjectList\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport HodSideMenu from \"./HodSideMenu\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\n\r\nlet userInfo = [];\r\nlet Groups = null;\r\nlet academicYear=\"\"\r\nlet Ad = null;\r\nlet filled = false;\r\n\r\nclass HodContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      adData: null,\r\n      filled\r\n    };\r\n  }\r\n\r\n  getGroup = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        academicYear=Groups[0].acadYear\r\n        //console.log(academicYear);\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.adData === null) {\r\n      this.getGroup();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n    //console.log(userInfo);\r\n    if (this.state.filled) {\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <HodSideMenu />\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n              <HodProjectList Groups={Groups} Designation={userInfo.type}/>\r\n            </div>\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(HodContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport HodContent from \"../components/Hod-component/HodContent\";\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"hod\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    //groups = this.state.Groups;\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"hod\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <HodContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typo1: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"Medium\"\r\n  },\r\n  typo2: {\r\n    textAllign: \"right\",\r\n    fontWeight: \"Light\"\r\n  }\r\n}));\r\n\r\nconst THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst HodCommentPage = props => {\r\n  const classes = useStyles();\r\n  const comments = props.Comments;\r\n  //console.log(comments);\r\n  if (comments.length === 0) {\r\n    console.log(comments.length);\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h4\">No comments have been added</Typography>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <ThemeProvider theme={THEME}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <Paper\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0,0,0,.1), 0 8px 16px rgba(0,0,0,.1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"0px\",\r\n                marginTop: \"50px\",\r\n                marginBottom: \"50px\"\r\n              }}\r\n            >\r\n              <Paper style={{ borderRadius: \"0\" }}>\r\n                {/* <Typography style={{fontWeight:\"bold\"}} variant=\"h4\">\r\n                            Your Previous Comments\r\n                        </Typography> */}\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{ fontWeight: \"400\", textAlign: \"left\" }}\r\n                >\r\n                  Previous Comments:\r\n                </Typography>\r\n              </Paper>\r\n              {comments\r\n                .slice(0)\r\n                .reverse()\r\n                .map(comment => {\r\n                  let d = new Date(comment.time);\r\n                  //comment.time = new Date(d.getTime() + 330*60000);\r\n                  // console.log(d)\r\n                  // console.log(comment.time)\r\n                  // let author=comment.author;\r\n                  // if(author.includes(\"admin\"))\r\n                  return (\r\n                    <React.Fragment key={comment._id}>\r\n                      <Paper style={{ borderRadius: \"0\" }}>\r\n                        <Grid\r\n                          container\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"5px\"\r\n                          }}\r\n                          spacing={2}\r\n                        >\r\n                          <Grid className={classes.typo1} item xs={8}>\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 20,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Author : {comment.author}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            {/* <Typography style={{fontSize:\"12px\",fontWeight:\"300\"}}>\r\n                                                Time : {comment.time}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Roboto\"\r\n                              }}\r\n                            >\r\n                              Date : {d.toString().substr(4, 12)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Helvetica Neue\"\r\n                              }}\r\n                            >\r\n                              Time : {d.toString().slice(15, 24)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo1} item xs={12}>\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 20,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Comment : {comment.text}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </React.Fragment>\r\n                  );\r\n                  // }else{return null}\r\n                })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HodCommentPage;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField, TableContainer, Table, TableHead, TableRow, TableCell, ThemeProvider, Paper, TableBody, createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport HodCommentPage from \"./HodCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n});\r\n\r\nconst days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false,\r\n    };\r\n  }\r\n  \r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState(\r\n      {\r\n        comment: comment\r\n      },\r\n      // function () {\r\n      //   console.log(this.state.comment);\r\n      // }\r\n    );\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    })\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if(comment===\"\"){\r\n      this.setState({\r\n        openFailure:true\r\n      })\r\n    }else{\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n           Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n          \r\n        }\r\n      })\r\n      .then(response => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        console.log(response);\r\n        this.setState({\r\n          comment:\"\",\r\n          adData: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n    let Presentations = Group.presentation\r\n    Presentations.sort((a,b)=>(new Date(a.scheduled_date).getTime()>new Date(b.scheduled_date).getTime())?1:-1)\r\n\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Comments =group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      let appliedDate = new Date(proposal.applied)\r\n                      return (\r\n                        <Accordion key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Detailed Statement of Problem:&nbsp;&nbsp;</b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Internal Agency/External Agency/CTL/Mastek/or any other:&nbsp;&nbsp;</b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Methods/Technique/Algorithm proposed:&nbsp;&nbsp;</b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Software/Hardware Requirements:&nbsp;&nbsp;</b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/{appliedDate.getMonth()+1}/{appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `http://localhost:8000/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    {(Presentations.length!==0)?(\r\n                        <React.Fragment>\r\n                          <ThemeProvider theme={theme}>\r\n                              <Typography style={{marginTop:\"20px\"}} variant=\"h4\">Presentation Details</Typography>\r\n                              <TableContainer\r\n                                  style={{ backgroundColor: \"#d3d3d3\" }}\r\n                                  className={classes.tableContainer}\r\n                                  component={Paper}\r\n                              >\r\n                                  <Table\r\n                                  className={classes.table}\r\n                                  size=\"small\"\r\n                                  aria-label=\"a dense table\"\r\n                                  >\r\n                                      <TableHead>\r\n                                          <TableRow>\r\n                                          <TableCell align=\"center\">No.</TableCell>\r\n                                          <TableCell align=\"center\">Date</TableCell>\r\n                                          <TableCell align=\"center\">Day</TableCell>\r\n                                          <TableCell align=\"center\">Time</TableCell>\r\n                                          <TableCell align=\"center\">Marks</TableCell>\r\n                                          </TableRow>\r\n                                      </TableHead>\r\n                                      <TableBody>\r\n                                          {Presentations.map((Presentation,index) => (\r\n                                          <TableRow key={Presentation._id}>\r\n                                              <TableCell align=\"center\">{index+1}</TableCell>\r\n                                              <TableCell align=\"center\">{new Date(Presentation.scheduled_date).getDate()}/{new Date(Presentation.scheduled_date).getMonth()+1}/{new Date(Presentation.scheduled_date).getFullYear()}</TableCell>\r\n                                              <TableCell align=\"center\">{days[new Date(Presentation.scheduled_date).getDay()]}</TableCell>\r\n                                              {(new Date(Presentation.scheduled_date).getHours()>12)?(\r\n                                                  <TableCell align=\"center\">\r\n                                                      {new Date(Presentation.scheduled_date).getHours()-12}:{new Date(Presentation.scheduled_date).getMinutes()} pm \r\n                                                  </TableCell>\r\n                                              ):(\r\n                                                  <TableCell align=\"center\">\r\n                                                      {new Date(Presentation.scheduled_date).getHours()}:{new Date(Presentation.scheduled_date).getMinutes()} am \r\n                                                  </TableCell>\r\n                                              )}\r\n                                              {(Presentation.marks===null)?(\r\n                                                  <React.Fragment>\r\n                                                      {new Date(Presentation.scheduled_date).getTime()>Date.now()?(\r\n                                                          <TableCell align=\"center\">\r\n                                                              Presentation Not conducted\r\n                                                          </TableCell>\r\n                                                      ):(\r\n                                                          <TableCell align=\"center\">\r\n                                                              <Typography style={{fontSize:\"12\"}} color=\"secondary\">\r\n                                                                  Presentation Missing\r\n                                                              </Typography>\r\n                                                          </TableCell>\r\n                                                      )}\r\n                                                  </React.Fragment>\r\n                                              ):(\r\n                                                  <TableCell align=\"center\">\r\n                                                      {Presentation.marks}\r\n                                                  </TableCell>\r\n                                              )}\r\n                                          </TableRow>\r\n                                          ))}\r\n                                      </TableBody>\r\n                                  </Table>\r\n                              </TableContainer>\r\n                          </ThemeProvider>\r\n                        </React.Fragment>\r\n                    ):(\r\n                        <React.Fragment>\r\n                          <Typography style={{marginTop:\"20px\"}} variant=\"h4\">\r\n                            Presentations\r\n                          </Typography>\r\n                          <Typography>\r\n                              No Presentations have been scheduled.\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                    )}\r\n                    <Grid container className={classes.comment}>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comTitle}\r\n                      >\r\n                        <Typography>\r\n                          <b>Add Comments:</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                          className={classes.comField}\r\n                          variant=\"outlined\"\r\n                          component={\"span\"}\r\n                          multiline\r\n                          inputProps={{ style: { fontSize: 14 } }}\r\n                          rows={3}\r\n                          id=\"comment\"\r\n                          name=\"comment\"\r\n                          type=\"text\"\r\n                          value={this.state.comment}\r\n                          onChange={this.commentHandler}\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comButton}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            this.sendComment(Gid);\r\n                          }}\r\n                        >\r\n                          Send Comment\r\n                        </Button>\r\n                        <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Successful comment\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Unsuccessful. Comment cannot be empty\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={12}>\r\n                        <HodCommentPage Comments={Comments}/>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Archive from \"@material-ui/icons/Archive\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet department = null;\r\nlet Gname = null;\r\nlet Groupid = null;\r\nlet deleteMemberEmail = null;\r\nlet groupData = [];\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  mainAccor: {\r\n    color: \"#303030\",\r\n    margin: \"auto\"\r\n  },\r\n  mainAccorContainer: {\r\n    width: \"80%\",\r\n    margin: \"2px auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  memberHolder: {\r\n    width: \"10%\",\r\n    backgroundColor: \"#909090\"\r\n  },\r\n  groupCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    textAlign: \"left\"\r\n  },\r\n  accorStyle: {\r\n    backgroundColor: \"#d3d3d3\"\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  presCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  }\r\n});\r\n\r\nclass AdminGroupsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      groupDetails: null,\r\n      deleteMemberOpen: false,\r\n      addMemberOpen: false,\r\n      memberName: \"\",\r\n      memberEmail: \"\",\r\n      memberRollno: \"\",\r\n      deleteProposalsOpen: false,\r\n      deleteAllUserDialog: false,\r\n      archive: false,\r\n      loading: false,\r\n      archiveSuccess: false\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        groupData = res.data;\r\n        this.setState({\r\n          groupDetails: res.data\r\n        });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //DELETE MEMBERS---------------------------------------------\r\n  handleDeleteMemberDialogOpen = (id, email) => {\r\n    deleteMemberEmail = email;\r\n    Groupid = id;\r\n    console.log(deleteMemberEmail, Groupid);\r\n    this.setState({\r\n      deleteMemberOpen: true\r\n    });\r\n  };\r\n  handleDeleteMemberDialogClose = () => {\r\n    this.setState({\r\n      deleteMemberOpen: false\r\n    });\r\n  };\r\n  handleDeleteMember = (gid, email) => {\r\n    this.handleDeleteMemberDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: gid,\r\n        email: email\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Member deleted!!!!\");\r\n        deleteMemberEmail = null;\r\n        Groupid = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //DELETE PROPOSALS SECTION--------------------------------\r\n  handleDeleteProposalsDialogOpen(e, gid) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    Groupid = gid;\r\n    console.log(Groupid);\r\n    this.setState({\r\n      deleteProposalsOpen: true\r\n    });\r\n  }\r\n  handleDeleteProposalsDialogClose = () => {\r\n    this.setState({\r\n      deleteProposalsOpen: false\r\n    });\r\n  };\r\n  handleDeleteProposals = gid => {\r\n    this.handleDeleteProposalsDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteProposal\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: gid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Groupid = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleDeleteAllUser = () => {\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteAllUsers\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ loading: false, deleteAllUserDialog: false });\r\n        window.location.reload();\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loading: false, deleteAllUserDialog: false });\r\n        console.log(err);\r\n      });\r\n  };\r\n  handleArchieve = () => {\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/archive\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ loading: false, archive: false, archiveSuccess: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loading: false, archive: false });\r\n        console.log(err);\r\n      });\r\n  };\r\n  //ADD MEMBER SECTION ------------------------------------\r\n  handleAddMemberDialogOpen = (gid, dept, gname) => {\r\n    Groupid = gid;\r\n    department = dept;\r\n    Gname = gname;\r\n    console.log(Groupid, department, Gname);\r\n    this.setState({\r\n      addMemberOpen: true\r\n    });\r\n  };\r\n  handleAddMemberDialogClose = () => {\r\n    this.setState({\r\n      addMemberOpen: false\r\n    });\r\n  };\r\n\r\n  handleMemberNameChange = e => {\r\n    this.setState({\r\n      memberName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleMemberEmailChange = e => {\r\n    this.setState({\r\n      memberEmail: e.target.value\r\n    });\r\n  };\r\n  handleMemberRollnoChange = e => {\r\n    this.setState({\r\n      memberRollno: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddMember = (id, department, groupName) => {\r\n    console.log(\r\n      id,\r\n      this.state.memberName,\r\n      this.state.memberRollno,\r\n      this.state.memberEmail,\r\n      department,\r\n      groupName\r\n    );\r\n    if (\r\n      this.state.memberName === \"\" ||\r\n      this.state.memberEmail === \"\" ||\r\n      this.state.memberRollno === \"\"\r\n    ) {\r\n      alert(\"Member name,email or rollno cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addmember\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: id,\r\n          name: this.state.memberName,\r\n          email: this.state.memberEmail,\r\n          rollno: this.state.memberRollno,\r\n          department: department,\r\n          groupName: groupName\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"Member Added Successfully!!!!!\");\r\n          Groupid = null;\r\n          department = null;\r\n          Gname = null;\r\n          this.setState({\r\n            memberEmail: \"\",\r\n            memberRollno: \"\",\r\n            memberName: \"\",\r\n            addMemberOpen: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"Member not added\");\r\n          this.setState({\r\n            addHodOpen: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleChildClick = e => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.loading) return <LinearProgress />;\r\n    if (this.state.groupDetails === null) {\r\n      this.checkData();\r\n      return <LinearProgress />;\r\n    }\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n          return;\r\n        }\r\n        this.setState({ archiveSuccess: false });\r\n      };\r\n      return (\r\n        <React.Fragment>\r\n          <SideMenu />\r\n\r\n          {/* Dialog box for delete MEMBER confirmation*/}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteMemberOpen}\r\n              onClose={this.handleDeleteMemberDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Member\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete this Member? You need to\r\n                  assign another student after deleting this one\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteMemberDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    this.handleDeleteMember(Groupid, deleteMemberEmail)\r\n                  }\r\n                  color=\"primary\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/*------------------------ ADD MEMBER DIALOG ---------------------*/}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.addMemberOpen}\r\n              onClose={() => this.handleAddMemberDialogClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Add Member</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Please add name,email and Rollno of Student\r\n                </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"MemberName\"\r\n                  label=\"Member Name\"\r\n                  type=\"text\"\r\n                  value={this.state.memberName}\r\n                  onChange={this.handleMemberNameChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"MemberEmail\"\r\n                  label=\"Member Email\"\r\n                  type=\"text\"\r\n                  value={this.state.memberEmail}\r\n                  onChange={this.handleMemberEmailChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"MemberRoll\"\r\n                  label=\"Member Roll\"\r\n                  type=\"text\"\r\n                  value={this.state.memberRollno}\r\n                  onChange={this.handleMemberRollnoChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleAddMemberDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    this.handleAddMember(Groupid, department, Gname)\r\n                  }\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/* -----------------DELETE PROPOSALS DIALOG---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteProposalsOpen}\r\n              onClose={this.handleDeleteProposalsDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Proposals\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete Submitted Proposals? If you\r\n                  delete the Proposals then student will have to fill the\r\n                  proposals again\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteProposalsDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() => this.handleDeleteProposals(Groupid)}\r\n                  color=\"primary\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/* -----------------DELETE ALL USER DIALOG---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteAllUserDialog}\r\n              onClose={() => {\r\n                this.setState({ deleteAllUserDialog: false });\r\n              }}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete ALL User\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete All users and groups? All the\r\n                  students,HOD,guides will be removed from the database as well\r\n                  as the details of all groups will also be deleted before\r\n                  deleting make sure you have archived the groups\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ deleteAllUserDialog: false });\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleDeleteAllUser} color=\"primary\">\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          {/* -----------------ARCHIEVE---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.archive}\r\n              onClose={() => {\r\n                this.setState({ archive: false });\r\n              }}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Archive Groups\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Archiving will save all the groups data in the archive\r\n                  section.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ archive: false });\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleArchieve} color=\"primary\">\r\n                  Archive\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          <Snackbar\r\n            open={this.state.archiveSuccess}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              Archived Groups Data Successfully\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          {/* -----------------------MEMBER ACCORDION------------------------*/}\r\n          {groupData.length !== 0 ? (\r\n            <div className={classes.mainAccorContainer}>\r\n              <br />\r\n              <Grid container style={{ padding: \"5px\" }}>\r\n                <Grid item xs={12} sm={6} style={{ margin: \"auto\" }}>\r\n                  <Typography variant=\"h3\" style={{ marginBottom: \"18px\" }}>\r\n                    Manage Groups\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  style={{ textAlign: \"right\", margin: \"auto\" }}\r\n                >\r\n                  <Button\r\n                    endIcon={<Archive />}\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      this.setState({ archive: true });\r\n                    }}\r\n                    color=\"primary\"\r\n                    style={{ margin: \"5px 5px\" }}\r\n                  >\r\n                    Archive\r\n                  </Button>\r\n                  <Button\r\n                    endIcon={<DeleteIcon />}\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      this.setState({ deleteAllUserDialog: true });\r\n                    }}\r\n                    color=\"primary\"\r\n                  >\r\n                    Delete All Users\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {groupData.map(group => {\r\n                let proposal1Stat = null;\r\n                let proposal2Stat = null;\r\n                let proposal3Stat = null;\r\n                if (group.proposals.length === 3) {\r\n                  proposal1Stat = group.proposals[0].approval.admin;\r\n                  proposal2Stat = group.proposals[1].approval.admin;\r\n                  proposal3Stat = group.proposals[2].approval.admin;\r\n                }\r\n\r\n                let gid = group.id;\r\n                let dept = group.department;\r\n                let gname = group.name;\r\n                return (\r\n                  <Accordion className={classes.mainAccor} key={group.name}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        <b>{toFirstCharUppercase(group.name)}</b>\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <React.Fragment>\r\n                        {/* MEMBERS ACCORDON */}\r\n                        <div className={classes.root}>\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel1a-content\"\r\n                              id=\"panel1a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Members\r\n                              </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div style={{ width: \"100%\" }}>\r\n                                <Card className={classes.groupCard}>\r\n                                  <Grid container>\r\n                                    <Grid item xs={1}></Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        <b>Name</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        <b>Email</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      <Typography>\r\n                                        <b>Rollno</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      {group.members.length < 3 ? (\r\n                                        <Button\r\n                                          onClick={() =>\r\n                                            this.handleAddMemberDialogOpen(\r\n                                              gid,\r\n                                              dept,\r\n                                              gname\r\n                                            )\r\n                                          }\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                        >\r\n                                          Add Member\r\n                                        </Button>\r\n                                      ) : null}\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Card>\r\n                                {group.members.map(member => {\r\n                                  let dmemberEmail = member.email;\r\n                                  return (\r\n                                    <Card\r\n                                      className={classes.groupCard}\r\n                                      key={member.email}\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={1}></Grid>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography>{member.name}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography>\r\n                                            {member.email}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          <Typography>\r\n                                            {member.rollno}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          <DeleteIcon\r\n                                            className={classes.deleteIconStyle}\r\n                                            onClick={() =>\r\n                                              this.handleDeleteMemberDialogOpen(\r\n                                                gid,\r\n                                                dmemberEmail\r\n                                              )\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    </Card>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n\r\n                          {/* PROPOSAL ACCORDION */}\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel2a-content\"\r\n                              id=\"panel2a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Proposals\r\n                              </Typography>\r\n                              {group.proposals.length !== 0 &&\r\n                              !proposal1Stat &&\r\n                              !proposal2Stat &&\r\n                              !proposal3Stat ? (\r\n                                <Button\r\n                                  onClick={e => {\r\n                                    this.handleDeleteProposalsDialogOpen(\r\n                                      e,\r\n                                      gid\r\n                                    );\r\n                                  }}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Delete All Proposals\r\n                                </Button>\r\n                              ) : null}\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div className={classes.root}>\r\n                                {group.proposals.length === 3 ? (\r\n                                  group.proposals.map((proposal, index) => {\r\n                                    let approval = proposal.approval;\r\n                                    // let pid = proposal._id;\r\n\r\n                                    return (\r\n                                      <Accordion\r\n                                        style={{ textAlign: \"left\" }}\r\n                                        key={index}\r\n                                      >\r\n                                        <AccordionSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls=\"panel1a-content\"\r\n                                          id=\"panel1a-header\"\r\n                                        >\r\n                                          <Typography\r\n                                            className={classes.heading}\r\n                                          >\r\n                                            Proposal {index + 1}\r\n                                          </Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                          <Grid\r\n                                            container\r\n                                            className={classes.content}\r\n                                            spacing={1}\r\n                                          >\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Title of Proposal:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.title}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Detailed Statement of\r\n                                                  Problem:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.details}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Internal Agency/External\r\n                                                  Agency/CTL/Mastek/or any\r\n                                                  other:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.agency}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Methods/Technique/Algorithm\r\n                                                  proposed:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.method}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Software/Hardware\r\n                                                  Requirements:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.requirements}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Domain of\r\n                                                  Specialization:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.specialization}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Result Expected:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.result}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>Appied On:&nbsp;&nbsp;</b>\r\n                                                {/* {proposal.applied.split(\"T\")[0]} */}\r\n                                                {proposal.applied.substr(0, 10)}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Attached Print:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.attachPrints}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              {approval.admin ? (\r\n                                                <Typography>\r\n                                                  <b>Admin approval status:</b>\r\n                                                  Approved\r\n                                                </Typography>\r\n                                              ) : (\r\n                                                <Typography>\r\n                                                  <b>Admin approval status:</b>\r\n                                                  not approved\r\n                                                </Typography>\r\n                                              )}\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              {approval.hod ? (\r\n                                                <Typography>\r\n                                                  <b>HOD approval status:</b>\r\n                                                  Approved\r\n                                                </Typography>\r\n                                              ) : (\r\n                                                <Typography>\r\n                                                  <b>HOD approval status:</b>not\r\n                                                  approved\r\n                                                </Typography>\r\n                                              )}\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                              <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                onClick={() => {\r\n                                                  window.open(\r\n                                                    `http://localhost:8000/${proposal.attachPrints}`\r\n                                                  );\r\n                                                }}\r\n                                              >\r\n                                                Show Uploaded Document\r\n                                              </Button>\r\n                                            </Grid>\r\n                                            <Grid\r\n                                              item\r\n                                              xs={12}\r\n                                              sm={6}\r\n                                              style={{ textAlign: \"right\" }}\r\n                                            ></Grid>\r\n                                          </Grid>\r\n                                        </AccordionDetails>\r\n                                      </Accordion>\r\n                                    );\r\n                                  })\r\n                                ) : (\r\n                                  <Typography>\r\n                                    Proposals Not filled yet\r\n                                  </Typography>\r\n                                )}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n\r\n                          {/* PRESENTATION ACCORDION */}\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel3a-content\"\r\n                              id=\"panel3a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Presentation\r\n                              </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div style={{ width: \"100%\" }}>\r\n                                <Card className={classes.presCard}>\r\n                                  <Grid container>\r\n                                    <Grid item xs={1}></Grid>\r\n                                    <Grid item xs={3}>\r\n                                      Presentation\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      Date\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      Time\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      Marks\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Card>\r\n                                {group.presentation.map((pres, index) => {\r\n                                  return (\r\n                                    <Card\r\n                                      className={classes.presCard}\r\n                                      key={index}\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={1}></Grid>\r\n                                        <Grid item xs={3}>\r\n                                          Presentation {index + 1}\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                          {pres.scheduled_date.split(\"T\")[0]}\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          {pres.scheduled_date.slice(11, 16)}\r\n                                        </Grid>\r\n                                        {pres.marks === null ? (\r\n                                          <Grid item xs={3}>\r\n                                            Not assigned\r\n                                          </Grid>\r\n                                        ) : (\r\n                                          <Grid item xs={3}>\r\n                                            {pres.marks}\r\n                                          </Grid>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </Card>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <Typography variant=\"h3\" style={{ marginBottom: \"18px\" }}>\r\n              No Groups\r\n            </Typography>\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminGroupsPage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nlet dguideId = null;\r\nlet dguideEmail = null;\r\nlet dguideName = null;\r\nlet checkHod = false;\r\nlet dHodId = false;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  },\r\n  accorStyle: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  guideList: {\r\n    padding: \"10px\",\r\n    margin: \"0px auto\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  },\r\n  guideListHolder: {\r\n    width: \"80%\",\r\n    margin: \"auto\",\r\n    marginTop: \"30px\",\r\n    padding: \"20px\"\r\n    //backgroundColor:\"#fff\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  mHodContainer: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    width: \"80%\",\r\n    margin: \"auto\",\r\n    marginTop: \"80px\",\r\n    boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n  }\r\n});\r\n\r\nlet guideData = null;\r\n\r\nclass AdminGuidePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      guideDetails: null,\r\n      Open: false,\r\n      Loading: false,\r\n      guideName: \"\",\r\n      guideEmail: \"\",\r\n      hodName: \"\",\r\n      hodEmail: \"\",\r\n      deleteOpen: false,\r\n      deleteHodOpen: false,\r\n      addHodOpen: false\r\n    };\r\n  }\r\n\r\n  //Delete Hod SEction\r\n  handleDeleteHodDialogOpen = id => {\r\n    dHodId = id;\r\n    this.setState({\r\n      deleteHodOpen: true\r\n    });\r\n  };\r\n  handleDeleteHodDialogClose = () => {\r\n    this.setState({\r\n      deleteHodOpen: false\r\n    });\r\n  };\r\n\r\n  handleDeleteHod = id => {\r\n    this.handleDeleteHodDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=hod\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Hod deleted!!!!\");\r\n        dHodId = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Add Hod Section\r\n  handleAddHodDialogOpen = () => {\r\n    this.setState({\r\n      addHodOpen: true\r\n    });\r\n  };\r\n  handleAddHodDialogClose = () => {\r\n    this.setState({\r\n      addHodOpen: false\r\n    });\r\n  };\r\n\r\n  handleHodNameChange = e => {\r\n    this.setState({\r\n      hodName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleHodEmailChange = e => {\r\n    this.setState({\r\n      hodEmail: e.target.value\r\n    });\r\n  };\r\n\r\n  //axios for addHod\r\n  handleAddHod = () => {\r\n    if (this.state.hodName === \"\" || this.state.hodEmail === \"\") {\r\n      alert(\"HOD name or email cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addhod\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name: this.state.hodName,\r\n          email: this.state.hodEmail\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"HOD Assigned Successfully!!!!!\");\r\n          this.setState({\r\n            hodName: \"\",\r\n            hodEmail: \"\",\r\n            addHodOpen: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"HOD not assigned\");\r\n          this.setState({\r\n            addHodOpen: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Add Guide Button & different options in Dialog Box\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      Open: true\r\n    });\r\n  };\r\n  handleCloseCancel = () => {\r\n    console.log(\"CANCEL\");\r\n    this.setState({\r\n      Open: false\r\n    });\r\n  };\r\n  handleCloseSubmit = () => {\r\n    this.setState({\r\n      Loading: true\r\n    });\r\n    if (this.state.guideName === \"\" || this.state.guideEmail === \"\") {\r\n      alert(\"Guide name or email cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide?type=new\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name: this.state.guideName,\r\n          email: this.state.guideEmail\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"submitted\");\r\n          this.setState({\r\n            Loading: false,\r\n            guideName: \"\",\r\n            guideEmail: \"\",\r\n            Open: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"Guide not added\");\r\n          this.setState({\r\n            Loading: false,\r\n            Open: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Delete guide DialogBOX\r\n\r\n  handleDeleteDialogOpen = (id, name, email) => {\r\n    dguideEmail = email;\r\n    dguideId = id;\r\n    dguideName = name;\r\n    this.setState({\r\n      deleteOpen: true\r\n    });\r\n  };\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({\r\n      deleteOpen: false\r\n    });\r\n  };\r\n\r\n  handleDeleteGuide = (id, name, email) => {\r\n    this.handleDeleteDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=guide\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        name: name,\r\n        email: email\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"guide deleted!!!!\");\r\n        dguideEmail = null;\r\n        dguideId = null;\r\n        dguideName = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Dialog box Guide name and email\r\n\r\n  handleGNameChange = e => {\r\n    this.setState({\r\n      guideName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleGEmailChange = e => {\r\n    this.setState({\r\n      guideEmail: e.target.value\r\n    });\r\n  };\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  getGuide = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        guideData = res.data;\r\n        this.setState({\r\n          guideDetails: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (guideData === null) {\r\n      this.getGuide();\r\n    }\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      if (guideData !== null) {\r\n        return (\r\n          <React.Fragment>\r\n            <SideMenu />\r\n            {/* MANAGE GUIDE UI START */}\r\n            <div className={classes.mHodContainer}>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <Typography variant=\"h2\" style={{ margin: \"20px auto\" }}>\r\n                    Manage Guide\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  {!this.state.Loading ? (\r\n                    <div>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleClickOpen}\r\n                        style={{ margin: \"35px\", padding: \"10px 50px\" }}\r\n                      >\r\n                        Add Guide\r\n                      </Button>\r\n                      <Dialog\r\n                        open={this.state.Open}\r\n                        onClose={this.handleCloseCancel}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                      >\r\n                        <DialogTitle id=\"form-dialog-title\">\r\n                          Add Guide\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <DialogContentText>\r\n                            Please add name and email of Guide.\r\n                          </DialogContentText>\r\n                          <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"guideName\"\r\n                            label=\"Guide Name\"\r\n                            type=\"text\"\r\n                            value={this.state.guideName}\r\n                            onChange={this.handleGNameChange}\r\n                            fullWidth\r\n                            required\r\n                          />\r\n                          <TextField\r\n                            margin=\"dense\"\r\n                            id=\"guideEmail\"\r\n                            label=\"Guide Email\"\r\n                            type=\"text\"\r\n                            value={this.state.guideEmail}\r\n                            onChange={this.handleGEmailChange}\r\n                            fullWidth\r\n                            required\r\n                          />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button\r\n                            onClick={this.handleCloseCancel}\r\n                            color=\"primary\"\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.handleCloseSubmit}\r\n                            color=\"primary\"\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <CircularProgress />\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div className={classes.guideListHolder}>\r\n                {guideData !== null ? (\r\n                  guideData.map(guide => {\r\n                    if (guide.type === \"hod\") {\r\n                      checkHod = true;\r\n                    }\r\n                    if (guide.type === \"guide\")\r\n                      return (\r\n                        <Card className={classes.guideList} key={guide.name}>\r\n                          <Grid container>\r\n                            <Grid item xs={1}></Grid>\r\n                            <Grid item xs={4}>\r\n                              <Typography>{guide.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <Typography>{guide.email}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              <DeleteIcon\r\n                                className={classes.deleteIconStyle}\r\n                                onClick={() =>\r\n                                  this.handleDeleteDialogOpen(\r\n                                    guide.id,\r\n                                    guide.name,\r\n                                    guide.email\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Card>\r\n                      );\r\n                    else return null;\r\n                  })\r\n                ) : (\r\n                  <CircularProgress />\r\n                )}\r\n              </div>\r\n              {/* Dialog box for delete confirmation of Guide   */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.deleteOpen}\r\n                  onClose={this.handleDeleteDialogClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete Guide\"}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      Are you sure you want to delete this guide? If this guide\r\n                      is assigned to any groups,then you need to assign guides\r\n                      for that group again\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleDeleteDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() =>\r\n                        this.handleDeleteGuide(\r\n                          dguideId,\r\n                          dguideName,\r\n                          dguideEmail\r\n                        )\r\n                      }\r\n                      color=\"primary\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </div>\r\n            {/* MANAGE GUIDE UI END */}\r\n            {/* MANAGE HOD UI START */}\r\n            <div\r\n              className={classes.mHodContainer}\r\n              style={{ marginBottom: \"200px\" }}\r\n            >\r\n              <Grid container>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <Typography variant=\"h2\" style={{ margin: \"20px auto\" }}>\r\n                    Manage Hod\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  {\" \"}\r\n                  <div>\r\n                    {checkHod ? null : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleAddHodDialogOpen}\r\n                        style={{ margin: \"35px\", padding: \"10px 50px\" }}\r\n                      >\r\n                        Assign HOD\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div className={classes.guideListHolder}>\r\n                {guideData !== null ? (\r\n                  guideData.map(hod => {\r\n                    if (hod.type === \"hod\") {\r\n                      checkHod = true;\r\n                      return (\r\n                        <Card className={classes.guideList}>\r\n                          <Grid container>\r\n                            <Grid item xs={1}></Grid>\r\n                            <Grid item xs={4}>\r\n                              <Typography>{hod.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <Typography>{hod.email}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              <DeleteIcon\r\n                                className={classes.deleteIconStyle}\r\n                                onClick={() =>\r\n                                  this.handleDeleteHodDialogOpen(hod.id)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Card>\r\n                      );\r\n                    } else return null;\r\n                  })\r\n                ) : (\r\n                  <CircularProgress />\r\n                )}\r\n              </div>\r\n              {/* Dialog for Delete hod */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.deleteHodOpen}\r\n                  onClose={this.handleDeleteHodDialogClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete HOD\"}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      Are you sure you want to delete this HOD?\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleDeleteHodDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => this.handleDeleteHod(dHodId)}\r\n                      color=\"primary\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n              {/* Add HOD DIALOG */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.addHodOpen}\r\n                  onClose={this.handleAddHodDialogClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                  <DialogTitle id=\"form-dialog-title\">Add HOD</DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>\r\n                      Please add name and email of HOD\r\n                    </DialogContentText>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"HodName\"\r\n                      label=\"HOD Name\"\r\n                      type=\"text\"\r\n                      value={this.state.hodName}\r\n                      onChange={this.handleHodNameChange}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"HodEmail\"\r\n                      label=\"HOD Email\"\r\n                      type=\"text\"\r\n                      value={this.state.hodEmail}\r\n                      onChange={this.handleHodEmailChange}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleAddHodDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button onClick={this.handleAddHod} color=\"primary\">\r\n                      Submit\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </div>\r\n            {/* MANAGE HOD UI END */}\r\n          </React.Fragment>\r\n        );\r\n      } else return <LinearProgress />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminGuidePage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { withStyles, Grid, Card } from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\n\r\nlet dArchiveId = null;\r\nlet archData = null;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  mainAccor: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    margin: \"auto\"\r\n  },\r\n  mainAccorContainer: {\r\n    width: \"80%\",\r\n    margin: \"2px auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  memberHolder: {\r\n    width: \"10%\",\r\n    backgroundColor: \"#909090\"\r\n  },\r\n  groupCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    textAlign: \"left\"\r\n  },\r\n  accorStyle: {\r\n    backgroundColor: \"#d3d3d3\"\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  presCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  }\r\n});\r\n\r\nclass AdminArchives extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      expanded: false,\r\n      archiveData: null,\r\n      deleteDialogOpen: false\r\n    };\r\n  }\r\n\r\n  //DIALOG FOR DELETE ARCHIVE\r\n  handleDeleteArchiveDialogOpen = (e, id) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    dArchiveId = id;\r\n    this.setState({\r\n      deleteDialogOpen: true\r\n    });\r\n  };\r\n  handleDeleteArchiveDialogClose = () => {\r\n    this.setState({\r\n      deleteDialogOpen: false\r\n    });\r\n  };\r\n  handleDeleteArchive = id => {\r\n    this.handleDeleteArchiveDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteArchieve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Archive deleted!!!!\");\r\n        dArchiveId = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Get Archive Data\r\n  getArchive = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/archive\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res);\r\n        archData = res.data.data;\r\n        this.setState(\r\n          {\r\n            archiveData: res.data.data\r\n          },\r\n          console.log(this.state.archiveData)\r\n        );\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.user === \"\" && this.state.archiveData === null) {\r\n      this.getStat();\r\n      this.getArchive();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return this.state.archiveData !== null ? (\r\n        <React.Fragment>\r\n          {/* DIALOG FOR DELETE ARCHIVE */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteDialogOpen}\r\n              onClose={this.handleDeleteArchiveDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Archive Data\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to this Archive Data? After deleting\r\n                  this, the Data will be lost completely\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteArchiveDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => this.handleDeleteArchive(dArchiveId)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          <SideMenu />\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              width: \"80%\",\r\n              margin: \"30px auto\",\r\n              boxShadow:\r\n                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n            }}\r\n          >\r\n            <Typography variant=\"h2\">Archive</Typography>\r\n          </div>\r\n          {/* ACCORDION FOR GROUPDATA */}\r\n          <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n            {archData\r\n              ? archData.map(data => {\r\n                  let archId = data._id;\r\n                  return (\r\n                    <Accordion\r\n                      className={classes.mainAccor}\r\n                      key={data.acadYear}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Grid container>\r\n                          <Grid item xs={4}>\r\n                            <Typography variant=\"h6\">\r\n                              {data.acadYear}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6}></Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{ textAlign: \"right\", padding: \"auto\" }}\r\n                          >\r\n                            <DeleteIcon\r\n                              onClick={e =>\r\n                                this.handleDeleteArchiveDialogOpen(e, archId)\r\n                              }\r\n                              className={classes.deleteIconStyle}\r\n                              style={{ margin: \"3px\" }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <div style={{ width: \"100%\" }}>\r\n                          {data.groups.map(group => {\r\n                            return (\r\n                              <Accordion key={group.name}>\r\n                                <AccordionSummary\r\n                                  expandIcon={<ExpandMoreIcon />}\r\n                                  aria-controls=\"panel1a-content\"\r\n                                  id=\"panel1a-header\"\r\n                                >\r\n                                  <Typography className={classes.heading}>\r\n                                    {toFirstCharUppercase(group.name)}\r\n                                  </Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                  <div style={{ width: \"100%\" }}>\r\n                                    <Accordion className={classes.accorStyle}>\r\n                                      <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel1a-content\"\r\n                                        id=\"panel1a-header\"\r\n                                      >\r\n                                        <Typography className={classes.heading}>\r\n                                          Members\r\n                                        </Typography>\r\n                                      </AccordionSummary>\r\n                                      <AccordionDetails>\r\n                                        <React.Fragment>\r\n                                          <div style={{ width: \"100%\" }}>\r\n                                            <Card className={classes.groupCard}>\r\n                                              <Grid container>\r\n                                                <Grid item xs={1}></Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    <b>Name</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    <b>Email</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    <b>Rollno</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}></Grid>\r\n                                              </Grid>\r\n                                            </Card>\r\n                                            {group.members.map(member => {\r\n                                              return (\r\n                                                <Card\r\n                                                  className={classes.groupCard}\r\n                                                  key={member.name}\r\n                                                >\r\n                                                  <Grid\r\n                                                    container\r\n                                                    key={member.rollno}\r\n                                                  >\r\n                                                    <Grid item xs={1}></Grid>\r\n                                                    <Grid item xs={3}>\r\n                                                      <Typography>\r\n                                                        {member.name}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={3}>\r\n                                                      <Typography>\r\n                                                        {member.email}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}>\r\n                                                      <Typography>\r\n                                                        {member.rollno}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}></Grid>\r\n                                                  </Grid>\r\n                                                </Card>\r\n                                              );\r\n                                            })}\r\n                                          </div>\r\n                                        </React.Fragment>\r\n                                      </AccordionDetails>\r\n                                    </Accordion>\r\n                                    <Accordion className={classes.accorStyle}>\r\n                                      <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel2a-content\"\r\n                                        id=\"panel2a-header\"\r\n                                      >\r\n                                        <Typography className={classes.heading}>\r\n                                          Proposals\r\n                                        </Typography>\r\n                                      </AccordionSummary>\r\n                                      <AccordionDetails>\r\n                                        <div className={classes.root}>\r\n                                          {group.proposals.length === 3 ? (\r\n                                            group.proposals.map(\r\n                                              (proposal, index) => {\r\n                                                let approval =\r\n                                                  proposal.approval;\r\n\r\n                                                return (\r\n                                                  <Accordion\r\n                                                    style={{\r\n                                                      textAlign: \"left\"\r\n                                                    }}\r\n                                                    key={proposal.title}\r\n                                                  >\r\n                                                    <AccordionSummary\r\n                                                      expandIcon={\r\n                                                        <ExpandMoreIcon />\r\n                                                      }\r\n                                                      aria-controls=\"panel1a-content\"\r\n                                                      id=\"panel1a-header\"\r\n                                                    >\r\n                                                      <Typography\r\n                                                        className={\r\n                                                          classes.heading\r\n                                                        }\r\n                                                      >\r\n                                                        Proposal {index + 1}\r\n                                                      </Typography>\r\n                                                    </AccordionSummary>\r\n                                                    <AccordionDetails>\r\n                                                      <Grid\r\n                                                        container\r\n                                                        className={\r\n                                                          classes.content\r\n                                                        }\r\n                                                        spacing={1}\r\n                                                      >\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Title of\r\n                                                              Proposal:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.title}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Detailed Statement\r\n                                                              of\r\n                                                              Problem:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.details}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Internal\r\n                                                              Agency/External\r\n                                                              Agency/CTL/Mastek/or\r\n                                                              any\r\n                                                              other:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.agency}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Methods/Technique/Algorithm\r\n                                                              proposed:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.method}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Software/Hardware\r\n                                                              Requirements:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {\r\n                                                              proposal.requirements\r\n                                                            }\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Domain of\r\n                                                              Specialization:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {\r\n                                                              proposal.specialization\r\n                                                            }\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Result\r\n                                                              Expected:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.result}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Appied\r\n                                                              On:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {/* {proposal.applied.split(\"T\")[0]} */}\r\n                                                            {proposal.applied.substr(\r\n                                                              0,\r\n                                                              10\r\n                                                            )}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12}>\r\n                                                          {approval.admin ? (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                Admin approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              Approved\r\n                                                            </Typography>\r\n                                                          ) : (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                Admin approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              not approved\r\n                                                            </Typography>\r\n                                                          )}\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          {approval.hod ? (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                HOD approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              Approved\r\n                                                            </Typography>\r\n                                                          ) : (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                HOD approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              not approved\r\n                                                            </Typography>\r\n                                                          )}\r\n                                                        </Grid>\r\n\r\n                                                        <Grid\r\n                                                          item\r\n                                                          xs={12}\r\n                                                          sm={6}\r\n                                                          style={{\r\n                                                            textAlign: \"right\"\r\n                                                          }}\r\n                                                        ></Grid>\r\n                                                      </Grid>\r\n                                                    </AccordionDetails>\r\n                                                  </Accordion>\r\n                                                );\r\n                                              }\r\n                                            )\r\n                                          ) : (\r\n                                            <Typography>\r\n                                              Proposals Not filled yet\r\n                                            </Typography>\r\n                                          )}\r\n                                        </div>\r\n                                      </AccordionDetails>\r\n                                    </Accordion>\r\n                                  </div>\r\n                                </AccordionDetails>\r\n                              </Accordion>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                })\r\n              : null}\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <LinearProgress />\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\nexport default withStyles(useStyles)(AdminArchives);\r\n","import React from 'react';\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, CircularProgress, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Footer from '../Footer/Footer';\r\n\r\n\r\nlet Groups=null;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: \"100%\"\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(16),\r\n      fontWeight: \"600\",\r\n      flexBasis: \"33.33%\",\r\n      flexShrink: 0\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(16),\r\n      color: theme.palette.text.secondary\r\n    },\r\n    accor: {\r\n      width: \"100%\",\r\n      margin: \"auto\"\r\n    },\r\n    accordet: {\r\n      width: \"100%\",\r\n      margin: \"auto\"\r\n    }\r\n  }));\r\n\r\n\r\n                \r\n\r\nconst GuideGroupList = (props) => {\r\n    const [adData,setAdData] = React.useState(null);\r\n    const [filled,setFilled] = React.useState(false)\r\n    const histor = useHistory();\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [loading,setLoading] = React.useState(false);\r\n\r\n\r\n    function checkData() {\r\n        setLoading(true);\r\n        axios({\r\n        method: \"get\",\r\n        url: SERVER_URL + \"/guideGroup\",\r\n        withCredentials: true,\r\n        headers : {\r\n            Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n        }\r\n        })\r\n        .then(res => {\r\n            Groups = res.data;\r\n            setAdData(\"new\");\r\n            setFilled(true);\r\n            setLoading(false);\r\n        })\r\n    \r\n        .catch(function (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n    //accordion handleChange\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    if(loading){\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    if(adData===null){\r\n        checkData();\r\n    }\r\n    if(filled)\r\n    {\r\n        if(Groups.length!==0){\r\n            return(\r\n                <React.Fragment >\r\n                    <Typography style={{margin:\"10px\"}} variant=\"h4\">\r\n                        Assigned Groups\r\n                    </Typography>\r\n                    {Groups.map(Group => {\r\n                        const routeChange = () => {\r\n                            histor.push({\r\n                            pathname: `/guide/prefs/${id}`,\r\n                            });\r\n                        };\r\n                        //console.log(Group);\r\n                        let DueDate = Group.dueDate.split(\"T\")[0];\r\n                        let members = Group.members;\r\n                        let Gname = Group.name;\r\n                        let id = Group.id;\r\n                        let pref1 = [];\r\n                        // let pref2 = [];\r\n                        // let pref3 = [];\r\n                        let AppliedOn = null;\r\n    \r\n                        if (Group.proposals.length !== 0) {\r\n                            pref1 = Group.proposals[0];\r\n                            // pref2 = Group.proposals[1];\r\n                            // pref3 = Group.proposals[2];\r\n    \r\n                            AppliedOn = pref1.applied.split(\"T\")[0];\r\n                            //console.log(AppliedOn, DueDate);\r\n                        }\r\n                        // if (Group.guide.name===userInfo.name) {\r\n                            return (\r\n                            <Accordion\r\n                                style={{\r\n                                    width: \"90%\",\r\n                                    margin: \"auto\",\r\n                                    textAlign: \"left\",\r\n                                    marginTop: \"2px\",\r\n                                    boxShadow:\r\n                                    \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                                }}\r\n                                expanded={expanded === Gname}\r\n                                onChange={handleChange(Gname)}\r\n                                className={classes.accor}\r\n                                key={Group.name}\r\n                            >\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1bh-content\"\r\n                                id=\"panel1bh-header\"\r\n                                >\r\n                                <Typography className={classes.heading}>\r\n                                    {toFirstCharUppercase(Group.name)}\r\n                                </Typography>\r\n                                {members.map(member => {\r\n                                    return (\r\n                                    <Typography\r\n                                        key={member.name}\r\n                                        className={classes.secondaryHeading}\r\n                                    >\r\n                                        {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                    );\r\n                                })}\r\n                                </AccordionSummary>\r\n                                <AccordionDetails className={classes.accordet}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Name\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.name}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Email\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.email}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Roll no\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                    {DueDate >= AppliedOn ? (\r\n                                        <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                        Proposals Submitted On Time\r\n                                        </Typography>\r\n                                    ) : (\r\n                                        <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                        Proposals Submitted LATE\r\n                                        </Typography>\r\n                                    )}\r\n                                    </Grid>\r\n                                    <Grid item container xs={12}>\r\n                                    {Group.proposals.length === 3 ? (\r\n                                        <React.Fragment>\r\n                                            <Grid item xs={3}>\r\n                                                <Button\r\n                                                onClick={routeChange}\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                >\r\n                                                More Details\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                            <Typography>Preferences not filled</Typography>\r\n                                        </Button>\r\n                                    )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                            );\r\n                        // }\r\n                        // return null;\r\n                        })}\r\n                        <Footer />\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <Typography>\r\n                    No group has been assigned to you yet.\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n    else{\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n}\r\n \r\n \r\nexport default GuideGroupList;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport GuideGroupList from \"../components/Guide Component/GroupList\";\r\nimport Profile from \"../components/Profile\"\r\n\r\n\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"guide\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"guide\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <LoggedNavbar />\r\n            <Profile userInfo={this.state.user} academicYear={null} />\r\n            <GuideGroupList userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n  Card\r\n} from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport HodCommentPage from \"../Hod-component/HodCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n// const months=[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n// let pd= new Date()\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  }\r\n});\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      scheduleLoading: false,\r\n      dateTime: \"\",\r\n      marks: \"\",\r\n      totalMarks: \"\"\r\n    };\r\n  }\r\n\r\n  sche_pres = (e, id) => {\r\n    let dt = new Date(this.state.dateTime);\r\n    console.log(dt.toISOString());\r\n    console.log(this.state.dateTime);\r\n    this.setState({ scheduleLoading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/presentation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        datetime: dt.toISOString(),\r\n        gid: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"SCHEDULED\");\r\n        this.setState({ scheduleLoading: false });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        this.setState({ scheduleLoading: false });\r\n      });\r\n  };\r\n\r\n  handleDateTimeChange = e => {\r\n    this.setState({ dateTime: e.target.value });\r\n    //console.log(dateTime)\r\n  };\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState(\r\n      {\r\n        comment: comment\r\n      }\r\n      // function () {\r\n      //   console.log(this.state.comment);\r\n      // }\r\n    );\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          console.log(response);\r\n          this.setState({\r\n            comment: \"\",\r\n            adData: null\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  handleMarkSubmit = (e, groupID, presentationID) => {\r\n    console.log(this.state.marks);\r\n    console.log(this.state.totalMarks);\r\n    if (parseInt(this.state.marks, 10) > parseInt(this.state.totalMarks, 10)) {\r\n      alert(\"Marks obtained cannot be greater than max marks\");\r\n      this.setState({ marks: \"\", totalMarks: \"\" });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/presentationMarks\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: groupID,\r\n          pid: presentationID,\r\n          marks: this.state.marks + \"/\" + this.state.totalMarks\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          console.log(\"Marks submitted\");\r\n          this.setState({ marks: \"\", totalMarks: \"\" });\r\n          window.location.reload();\r\n        })\r\n        .catch(err => {\r\n          this.setState({ marks: \"\", totalMarks: \"\" });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleMarks = e => {\r\n    this.setState({ marks: e.target.value });\r\n  };\r\n  handleTotalMarks = e => {\r\n    this.setState({ totalMarks: e.target.value });\r\n  };\r\n\r\n  handleDeletePresentation = (e, PID, GID) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deletePresentation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        pid: PID,\r\n        gid: GID\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Deleted\");\r\n        window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              let Gid = group.id;\r\n              if (group.id === this.props.match.params.id) {\r\n                let Presentations = group.presentation;\r\n                let Proposals = group.proposals;\r\n                let Comments = group.comments;\r\n                Presentations.sort((a, b) =>\r\n                  new Date(a.scheduled_date).getTime() >\r\n                  new Date(b.scheduled_date).getTime()\r\n                    ? 1\r\n                    : -1\r\n                );\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let appliedDate = new Date(proposal.applied);\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Detailed Statement of Problem:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Internal Agency/External\r\n                                    Agency/CTL/Mastek/or any other:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Methods/Technique/Algorithm\r\n                                    proposed:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Software/Hardware Requirements:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/\r\n                                  {appliedDate.getMonth() + 1}/\r\n                                  {appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `http://localhost:8000/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <Card\r\n                      style={{\r\n                        marginTop: \"50px\",\r\n                        backgroundColor: \"#e0e0e0\",\r\n                        padding: \"20px\"\r\n                      }}\r\n                    >\r\n                      <Grid style={{ marginTop: \"20px\" }} container>\r\n                        <Grid item xs={4}>\r\n                          <Typography\r\n                            style={{ marginBottom: \"20px\" }}\r\n                            variant=\"h3\"\r\n                          >\r\n                            Presentation\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                          <form\r\n                            onSubmit={e => {\r\n                              this.sche_pres(e, Gid);\r\n                            }}\r\n                          >\r\n                            <Grid container>\r\n                              <Grid item xs={3}></Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={6}\r\n                                style={{\r\n                                  padding: \"5px\",\r\n                                  backgroundColor: \"#fff\"\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                <TextField\r\n                                  id=\"datetime-local\"\r\n                                  label=\"Next Presentation\"\r\n                                  type=\"datetime-local\"\r\n                                  defaultValue={new Date().toISOString()}\r\n                                  className={classes.textField}\r\n                                  required\r\n                                  InputLabelProps={{\r\n                                    shrink: true\r\n                                  }}\r\n                                  onChange={this.handleDateTimeChange}\r\n                                  style={{\r\n                                    padding: \"5px 20px\",\r\n                                    borderRadius: \"2px\"\r\n                                  }}\r\n                                />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={3}\r\n                                style={{\r\n                                  padding: \"5px\",\r\n                                  textAlign: \"left\",\r\n                                  backgroundColor: \"#fff\"\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                {!this.state.scheduleLoading ? (\r\n                                  <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{ margin: \"10px\" }}\r\n                                  >\r\n                                    Schedule\r\n                                  </Button>\r\n                                ) : (\r\n                                  <CircularProgress />\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </form>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {Presentations.length !== 0 ? (\r\n                            <React.Fragment>\r\n                              {Presentations.map((presentation, index) => {\r\n                                const panel = presentation._id;\r\n                                let d = new Date(presentation.scheduled_date);\r\n                                return (\r\n                                  <Accordion\r\n                                    key={presentation._id}\r\n                                    expanded={expanded === panel}\r\n                                    onChange={this.handleChange(panel)}\r\n                                  >\r\n                                    <AccordionSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls=\"panel1bh-content\"\r\n                                      id=\"panel1bh-header\"\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography variant=\"h6\">\r\n                                            <b>Presentation {index + 1}</b>\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        {presentation.marks === null ? (\r\n                                          <React.Fragment>\r\n                                            {d.getTime() > Date.now() ? (\r\n                                              <React.Fragment>\r\n                                                <Grid item xs={6} />\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    Presentation Not conducted\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                              </React.Fragment>\r\n                                            ) : (\r\n                                              <React.Fragment>\r\n                                                <Grid item xs={6} />\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography color=\"secondary\">\r\n                                                    Presentation Missing\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                              </React.Fragment>\r\n                                            )}\r\n                                          </React.Fragment>\r\n                                        ) : (\r\n                                          <React.Fragment>\r\n                                            <Grid item xs={6} />\r\n                                            <Grid item xs={3}>\r\n                                              <Typography\r\n                                                style={{ color: \"green\" }}\r\n                                              >\r\n                                                Presentation conducted\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                          </React.Fragment>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <Grid\r\n                                        container\r\n                                        className={classes.content}\r\n                                        spacing={1}\r\n                                        style={{\r\n                                          padding: \"0px\"\r\n                                        }}\r\n                                      >\r\n                                        <Grid\r\n                                          item\r\n                                          xs={2}\r\n                                          style={{\r\n                                            textAlign: \"left\",\r\n                                            backgroundColor: \"#d3d3d3\"\r\n                                          }}\r\n                                        >\r\n                                          <React.Fragment>\r\n                                            {d.getHours() > 12 ? (\r\n                                              <Typography variant=\"h5\">\r\n                                                {d.getHours() - 12}:\r\n                                                {d.getMinutes()} pm\r\n                                              </Typography>\r\n                                            ) : (\r\n                                              <Typography variant=\"h5\">\r\n                                                {d.getHours()}:{d.getMinutes()}{\" \"}\r\n                                                am\r\n                                              </Typography>\r\n                                            )}\r\n                                            {days[d.getDay()]} {d.getDate()}/\r\n                                            {d.getMonth() + 1}/{d.getFullYear()}\r\n                                          </React.Fragment>\r\n                                        </Grid>\r\n                                        {presentation.marks === null &&\r\n                                        d.getTime() <= Date.now() ? (\r\n                                          <Grid\r\n                                            item\r\n                                            xs={10}\r\n                                            style={{\r\n                                              backgroundColor: \"#fff\",\r\n                                              padding: \"0px\",\r\n                                              margin: \"0px 0px\",\r\n                                              border: \"4px solid #d3d3d3\"\r\n                                            }}\r\n                                          >\r\n                                            <Grid container>\r\n                                              <Grid\r\n                                                item\r\n                                                xs={4}\r\n                                                style={{ textAlign: \"right\" }}\r\n                                              >\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={this.state.marks}\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Marks obtained\"\r\n                                                  onChange={this.handleMarks}\r\n                                                  style={{\r\n                                                    margin: \"10px 0px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n                                              <Grid item xs={4}>\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={this.state.totalMarks}\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Total Marks\"\r\n                                                  onChange={\r\n                                                    this.handleTotalMarks\r\n                                                  }\r\n                                                  style={{\r\n                                                    margin: \"10px 0px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n                                              <Grid item xs={4}>\r\n                                                <Button\r\n                                                  size=\"large\"\r\n                                                  variant=\"contained\"\r\n                                                  color=\"primary\"\r\n                                                  onClick={e => {\r\n                                                    this.handleMarkSubmit(\r\n                                                      e,\r\n                                                      Gid,\r\n                                                      presentation._id\r\n                                                    );\r\n                                                  }}\r\n                                                  style={{ margin: \"10px 0px\" }}\r\n                                                >\r\n                                                  Submit Marks\r\n                                                </Button>\r\n                                              </Grid>\r\n                                            </Grid>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                        {presentation.marks !== null ? (\r\n                                          <React.Fragment>\r\n                                            <Grid\r\n                                              item\r\n                                              xs={3}\r\n                                              style={{\r\n                                                border: \"4px solid #d3d3d3\",\r\n                                                padding: \"12px\"\r\n                                              }}\r\n                                            >\r\n                                              <Typography variant=\"h6\">\r\n                                                Marks Obtained:&nbsp;\r\n                                                {presentation.marks}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid\r\n                                              item\r\n                                              xs={7}\r\n                                              style={{ textAlign: \"right\" }}\r\n                                            >\r\n                                              <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                onClick={e => {\r\n                                                  this.handleDeletePresentation(\r\n                                                    e,\r\n                                                    presentation._id,\r\n                                                    Gid\r\n                                                  );\r\n                                                }}\r\n                                              >\r\n                                                Delete presentation\r\n                                              </Button>\r\n                                            </Grid>\r\n                                          </React.Fragment>\r\n                                        ) : (\r\n                                          <Grid\r\n                                            item\r\n                                            xs={12}\r\n                                            style={{ textAlign: \"right\" }}\r\n                                          >\r\n                                            <Button\r\n                                              variant=\"contained\"\r\n                                              color=\"secondary\"\r\n                                              onClick={e => {\r\n                                                this.handleDeletePresentation(\r\n                                                  e,\r\n                                                  presentation._id,\r\n                                                  Gid\r\n                                                );\r\n                                              }}\r\n                                            >\r\n                                              Delete presentation\r\n                                            </Button>\r\n                                          </Grid>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </AccordionDetails>\r\n                                  </Accordion>\r\n                                );\r\n                              })}\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            <React.Fragment>\r\n                              <Typography>No presentation scheduled</Typography>\r\n                            </React.Fragment>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#e0e0e0\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\",\r\n                        boxShadow:\r\n                          \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                      }}\r\n                    >\r\n                      <Grid container className={classes.comment}>\r\n                        <Grid item xs={12} style={{ marginBottom: \"30px\" }}>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{ textAlign: \"left\", fontWeight: \"400\" }}\r\n                          >\r\n                            Comments\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comTitle}\r\n                        >\r\n                          <Typography>\r\n                            <b>Add Comments:</b>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                          <TextField\r\n                            className={classes.comField}\r\n                            variant=\"outlined\"\r\n                            component={\"span\"}\r\n                            multiline\r\n                            inputProps={{ style: { fontSize: 14 } }}\r\n                            rows={3}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            onChange={this.commentHandler}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comButton}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.sendComment(Gid);\r\n                            }}\r\n                          >\r\n                            Send Comment\r\n                          </Button>\r\n                          <Snackbar\r\n                            open={this.state.openSuccess}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert\r\n                              onClose={this.handleClose}\r\n                              severity=\"success\"\r\n                            >\r\n                              Successful comment\r\n                            </Alert>\r\n                          </Snackbar>\r\n                          <Snackbar\r\n                            open={this.state.openFailure}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert onClose={this.handleClose} severity=\"error\">\r\n                              Unsuccessful. Comment cannot be empty\r\n                            </Alert>\r\n                          </Snackbar>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                          <HodCommentPage Comments={Comments} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./Login/background2.jpg\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SERVER_URL from \"./URL\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport qs from \"qs\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n\r\n\tleftpaper: {\r\n\t\tbackgroundImage: `url(${Image})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"transparent\",\r\n\t\tborderRadius: \"6px\",\r\n\t\tfloat: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"#fff\",\r\n\t\tpaddingTop: \"60px\",\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  paddingTop: \"20px\"\r\n\t\t}\r\n\t},\r\n\tform: {\r\n\t    width: \"90%\", \r\n\t    marginTop: theme.spacing(1)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tfontWeight: \"bolder\",\r\n\t\tbackgroundColor: \"#1877f2\",\r\n\t\tmarginBottom: \"25px\"\r\n\t},\r\n\tfields: {\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborderRadius: \"3px\"\r\n\t},\r\n\ttitle: {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tcolor: \"#fff\",\r\n\t\t[theme.breakpoints.down(\"775\")]: {\r\n\t\t  fontSize: \"45px\"\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  fontSize: \"40px\"\r\n\t\t}\r\n\t},\r\n\tavatar: {\r\n\t    margin: theme.spacing(1),\r\n\t    backgroundColor: \"#1877f2\",\r\n\t    height: \"50px\",\r\n\t    width: \"50px\",\r\n\t    marginTop: \"30px\"\r\n  },\r\n\r\n});\r\n\r\nclass forgetPassword extends Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttoken :localStorage.getItem(\"token\"),\r\n\t\t\tmsg : \"\",\r\n\t\t\temail : \"\",\r\n\t\t\tloading : false,\r\n\t\t\topenSuccess:false,\r\n\t\t\topenInfo:false,\r\n\t\t\topenFailure:false\r\n\t\t}\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t}\r\n\thandleChange = name => ({ target: { value } }) => {\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tsubmitForm(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({loading:true})\r\n\t\tlet email = this.state.email\r\n\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: SERVER_URL+\"/forgetPassword\",\r\n\t\t\tdata: qs.stringify({email: email}),\r\n\t\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n\t\t\t}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tif(res.data[0]===\"A\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmsg:res.data,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenInfo:true\r\n\t\t\t\t\t})\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmsg:res.data,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenSuccess:true\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmsg:\"there was some problem please refresh the page and try again\",\r\n\t\t\t\t\tloading:false,\r\n\t\t\t\t\topenFailure:true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\trender() {\r\n\t\tif(this.state.token != null)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\r\n\t\tif(this.state.loading)\r\n\t\t\treturn <LinearProgress/>\r\n\r\n\t\tconst { classes } = this.props;\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\t\tif(this.state.openSuccess){\r\n\t\t\t\tthis.setState({openSuccess: false});\r\n\t\t\t}\r\n\t\t\telse if(this.state.openInfo){\r\n\t\t\t\tthis.setState({openInfo: false});\r\n\t\t\t}\r\n\t\t\telse if(this.state.openFailure){\r\n\t\t\t\tthis.setState({openFailure: false});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className={classes.leftpaper}>\r\n\t          <Typography variant=\"h2\" className={classes.title}>\r\n\t            <b>Project Management System</b>\r\n\t          </Typography>\r\n\t          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n\t            <CssBaseline />\r\n\t            <Avatar variant=\"circle\" className={classes.avatar}>\r\n\t\t          <PersonIcon fontSize=\"large\" />\r\n\t\t        </Avatar>\r\n\t\t        <Typography component=\"h2\" variant=\"h6\">\r\n\t\t          <b>Forget Password</b>\r\n\t\t        </Typography>\r\n\t            <form className={classes.form} onSubmit={this.submitForm}>\r\n\t              <TextField\r\n\t                type=\"email\"\r\n\t                variant=\"filled\"\r\n\t                margin=\"normal\"\r\n\t                required\r\n\t                fullWidth\r\n\t                id=\"email\"\r\n\t                label=\"email\"\r\n\t                value={this.state.email}\r\n\t                onChange={this.handleChange(\"email\")}\r\n\t                className={classes.fields}\r\n\t                \r\n\t              />\r\n\t              <Button\r\n\t                type=\"submit\"\r\n\t                fullWidth\r\n\t                variant=\"contained\"\r\n\t                color=\"primary\"\r\n\t                className={classes.submit}\r\n\t              >\r\n\t                Reset Password\r\n\t              </Button>\r\n\t              \r\n\t            </form>\r\n\t\t\t\t<Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\">\r\n\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openInfo} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"info\">\r\n\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t  \r\n\t          </Container>\r\n\t        </div>\r\n\t      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(forgetPassword);","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./Login/background2.jpg\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SERVER_URL from \"./URL\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport qs from \"qs\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = theme => ({\r\n\r\n\tleftpaper: {\r\n\t\tbackgroundImage: `url(${Image})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"transparent\",\r\n\t\tborderRadius: \"6px\",\r\n\t\tfloat: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"#fff\",\r\n\t\tpaddingTop: \"60px\",\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  paddingTop: \"20px\"\r\n\t\t}\r\n\t},\r\n\tform: {\r\n\t    width: \"90%\", \r\n\t    marginTop: theme.spacing(1)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tfontWeight: \"bolder\",\r\n\t\tbackgroundColor: \"#1877f2\",\r\n\t\tmarginBottom: \"25px\"\r\n\t},\r\n\tfields: {\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborderRadius: \"3px\"\r\n\t},\r\n\ttitle: {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tcolor: \"#fff\",\r\n\t\t[theme.breakpoints.down(\"775\")]: {\r\n\t\t  fontSize: \"45px\"\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  fontSize: \"40px\"\r\n\t\t}\r\n\t},\r\n\tavatar: {\r\n\t    margin: theme.spacing(1),\r\n\t    backgroundColor: \"#1877f2\",\r\n\t    height: \"50px\",\r\n\t    width: \"50px\",\r\n\t    marginTop: \"30px\"\r\n  },\r\n\r\n});\r\n\r\nclass resetPassword extends Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttoken :localStorage.getItem(\"token\"),\r\n\t\t\tmsg : \"\",\r\n\t\t\tnewPassword : \"\",\r\n\t\t\tconfirmPassword:\"\",\r\n\t\t\tloading : false,\r\n\t\t\topenSuccees:false,\r\n\t\t\topenFailure:false,\r\n\t\t\topenInfo:false,\r\n\t\t\tdone:false\r\n\t\t}\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t}\r\n\thandleChange = name => ({ target: { value } }) => {\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tsubmitForm(e){\r\n\t\te.preventDefault();\r\n\t\tif(this.state.newPassword !== this.state.confirmPassword){\r\n\t\t  this.setState({msg : \"Two fields Doesn't match\"}) ;\r\n\t\t}else if(this.state.newPassword.length < 8){\r\n\t\t  this.setState({msg : \"Please Enter a Password with length greater than 8\"});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState({loading:true})\r\n\t\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: SERVER_URL+\"/resetPassword/\"+this.props.match.params.id,\r\n\t\t\tdata: qs.stringify({\r\n\t\t\t\tnewPassword:this.state.newPassword\r\n\t\t\t}),\r\n\t\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n\t\t\t}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tif(res.data === \"yes\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenSuccees:true\r\n\t\t\t\t\t})\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenInfo:true\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading:false,\r\n\t\t\t\t\topenFailure:true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.state.token != null)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\t\tif(this.state.loading)\r\n\t\t\treturn <LinearProgress/>\r\n\t\tif (this.state.done)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\t\tconst { classes } = this.props\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\tif(this.state.openSuccees)\r\n\t\t\tthis.setState({openSuccees: false,done:true});\r\n\t\telse if(this.state.openFailure)\r\n\t\t\tthis.setState({openFailure : false});\r\n\t\telse if(this.state.openInfo)\r\n\t\t\tthis.setState({openInfo : false});\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className={classes.leftpaper}>\r\n\t          <Typography variant=\"h2\" className={classes.title}>\r\n\t            <b>Project Management System</b>\r\n\t          </Typography>\r\n\t          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n\t            <CssBaseline />\r\n\t            <Avatar variant=\"circle\" className={classes.avatar}>\r\n\t\t          <PersonIcon fontSize=\"large\" />\r\n\t\t        </Avatar>\r\n\t\t        <Typography component=\"h2\" variant=\"h6\">\r\n\t\t          <b>Reset Password</b>\r\n\t\t        </Typography>\r\n\t            <form className={classes.form} onSubmit={this.submitForm}>\r\n\t              <TextField\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  className={classes.fields}\r\n                  value={this.state.newPassword}\r\n                  onChange={this.handleChange(\"newPassword\")}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  className={classes.fields}\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.handleChange(\"confirmPassword\")}\r\n                />\r\n\t              <Typography variant=\"subtitle2\" color=\"info\">\r\n\t                  {this.state.msg}\r\n\t              </Typography>\r\n\t              <Button\r\n\t                type=\"submit\"\r\n\t                fullWidth\r\n\t                variant=\"contained\"\r\n\t                color=\"primary\"\r\n\t                className={classes.submit}\r\n\t              >\r\n\t                Reset Password\r\n\t              </Button>\r\n\t             \r\n\t            </form>\r\n\t\t\t\t<Snackbar open={this.state.openSuccees} onClose={handleClose} autoHideDuration={3000}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\" >\r\n\t\t\t\t\tYour Password was changed successfully You will now be redirected to login page \r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openInfo} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tThis Link has expired please reapply for reset password\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tThere was some problem while changing your password please refresh the page and try again\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>  \r\n\t          </Container>\r\n\t        </div>\r\n\t      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(resetPassword);","import React from 'react'\r\nimport HodSideMenu from './HodSideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress, makeStyles } from \"@material-ui/core\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Button,CircularProgress,Grid} from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// function Alert(props) {\r\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// }\r\n\r\nlet Ad=null;\r\nlet groupData=null\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    \r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n  }));\r\n\r\nconst HodgroupsPage = (props) => {\r\n\r\n  const [user,setUser] = React.useState(\"\")\r\n  const [groupDetails,setGroupDetails] = React.useState(null)\r\n  const [loading,setLoading] = React.useState(false)\r\n  const [filled,setFilled] = React.useState(false)\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [reqSent,setReqSent] = React.useState(false);\r\n  \r\n  function getStat(){\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        setUser(res.data);\r\n      })\r\n\r\n      .catch(err => {\r\n        setUser(\"No User\");\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  \r\n  function checkData() {\r\n    setReqSent(true);\r\n    setLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        setReqSent(false);\r\n        Ad = res.data.length;\r\n        groupData=res.data\r\n        setGroupDetails(res.data);\r\n        setFilled(true)\r\n        setLoading(false);\r\n      })\r\n      .catch(function (err) {\r\n        setReqSent(false);\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // function handleChildClick(e){\r\n  //   e.stopPropagation();\r\n  //   console.log('handleChildClick');\r\n  // }\r\n    if (groupDetails === null && reqSent === false){\r\n      checkData();\r\n    } \r\n    if (user === \"\") {\r\n      getStat();\r\n      return <LinearProgress />;\r\n    } else if (user.type === \"hod\") {\r\n      if(loading){\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    if(filled)\r\n    {\r\n        if(groupData.length!==0){\r\n            return(\r\n                <React.Fragment >\r\n                    <HodSideMenu style={{marginBottom:\"10px\"}}/>\r\n                    <Typography style={{margin:\"20px\"}} variant = \"h3\">\r\n                      Assigned Groups\r\n                    </Typography>\r\n                    {groupData.map(Group => {\r\n                        const routeChange = () => {\r\n                            histor.push({\r\n                            pathname: `/hod/groups/prefs/${id}`,\r\n                            });\r\n                        };\r\n                        let DueDate = Group.dueDate.split(\"T\")[0];\r\n                        let members = Group.members;\r\n                        let Gname = Group.name;\r\n                        let id = Group.id;\r\n                        let pref1 = [];\r\n                        let AppliedOn = null;\r\n    \r\n                        if (Group.proposals.length !== 0) {\r\n                            pref1 = Group.proposals[0];\r\n                            // pref2 = Group.proposals[1];\r\n                            // pref3 = Group.proposals[2];\r\n    \r\n                            AppliedOn = pref1.applied.split(\"T\")[0];\r\n                            //console.log(AppliedOn, DueDate);\r\n                        }\r\n                        // if (Group.guide.name===userInfo.name) {\r\n                            return (\r\n                            <Accordion\r\n                                style={{\r\n                                    width: \"90%\",\r\n                                    margin: \"auto\",\r\n                                    textAlign: \"left\",\r\n                                    marginTop: \"2px\",\r\n                                    boxShadow:\r\n                                    \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                                }}\r\n                                expanded={expanded === Gname}\r\n                                onChange={handleChange(Gname)}\r\n                                className={classes.accor}\r\n                                key={Group.name}\r\n                            >\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1bh-content\"\r\n                                id=\"panel1bh-header\"\r\n                                >\r\n                                <Typography className={classes.heading}>\r\n                                    {toFirstCharUppercase(Group.name)}\r\n                                </Typography>\r\n                                {members.map(member => {\r\n                                    return (\r\n                                    <Typography\r\n                                        key={member.name}\r\n                                        className={classes.secondaryHeading}\r\n                                    >\r\n                                        {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                    );\r\n                                })}\r\n                                </AccordionSummary>\r\n                                <AccordionDetails className={classes.accordet}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Name\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.name}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Email\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.email}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Roll no\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                    {DueDate >= AppliedOn ? (\r\n                                        <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                        Proposals Submitted On Time\r\n                                        </Typography>\r\n                                    ) : (\r\n                                        <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                        Proposals Submitted LATE\r\n                                        </Typography>\r\n                                    )}\r\n                                    </Grid>\r\n                                    <Grid item container xs={12}>\r\n                                    {Group.proposals.length === 3 ? (\r\n                                        <React.Fragment>\r\n                                            <Grid item xs={3}>\r\n                                                <Button\r\n                                                onClick={routeChange}\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                >\r\n                                                More Details\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                            <Typography>Preferences not filled</Typography>\r\n                                        </Button>\r\n                                    )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                            );\r\n                        // }\r\n                        // return null;\r\n                        })}\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <React.Fragment>\r\n                  <HodSideMenu />\r\n                  <Typography>\r\n                    No group has been assigned to you yet.\r\n                  </Typography>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n    else{\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n\r\n\r\nexport default HodgroupsPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Admin from \"./Pages/Admin\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport Logout from \"./Pages/Logout\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Student from \"./Pages/Student\";\r\nimport Yami from \"./Pages/Yami\";\r\nimport Faculty from \"./Pages/Faculty\";\r\nimport ChangePassword from \"./components/ChangePassword/ChangePassword\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport PrefPage from \"./Pages/PrefPage\";\r\nimport Hod from \"./Pages/Hod\";\r\nimport HodPrefPage from \"./components/Hod-component/HodPrefPage\";\r\nimport AdminGroupsPage from \"./components/Admin-component/AdminGroupsPage\";\r\nimport AdminGuidePage from \"./components/Admin-component/AdminGuidePage\";\r\nimport AdminArchives from \"./components/Admin-component/AdminArchives\"\r\nimport Guide from \"./Pages/Guide\"\r\nimport GuidePrefPage from \"./components/Guide Component/GuidePrefPage\";\r\nimport forgetPassword from \"./Pages/forgetPassword\";\r\nimport resetPassword from \"./Pages/resetPassword\";\r\nimport HodGroupsPage from \"./components/Hod-component/HodGroupsPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/admin\" exact component={Admin} />\r\n        <Route path=\"/hod\" exact component={Hod} />\r\n        <Route path=\"/logout\" exact component={Logout} />\r\n        <Route path=\"/faculty\" exact component={Faculty} />\r\n        <Route path=\"/student\" exact component={Student} />\r\n        <Route path=\"/yami\" exact component={Yami} />\r\n        <Route path=\"/guide\" exact component={Guide}/>\r\n        <Route path=\"/cp@2707user\" exact component={ChangePassword} />\r\n        <Route path=\"/admin/prefs/:id\" exact component={PrefPage} />\r\n        <Route path=\"/hod/prefs/:id\" exact component={HodPrefPage} />\r\n        <Route path=\"/guide/prefs/:id\" exact component={GuidePrefPage} />\r\n        <Route path=\"/admin/groups\" exact component={AdminGroupsPage}/>\r\n        <Route path=\"/admin/guides\" exact component={AdminGuidePage}/>\r\n        <Route path=\"/admin/archives\" exact component={AdminArchives}/>\r\n        <Route path=\"/forgetPassword\" exact component={forgetPassword}/>\r\n        <Route path=\"/resetPassword/:id\" exact component={resetPassword}/>\r\n        <Route path=\"/hod/groups\" exact component={HodGroupsPage} />\r\n        <Route path=\"/hod/groups/prefs/:id\" exact component={GuidePrefPage} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.register();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/background2.43a914dc.jpg\";"],"sourceRoot":""}