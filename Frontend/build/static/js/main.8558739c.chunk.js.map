{"version":3,"sources":["Pages/URL.js","components/Navbar/MenuAppBar.js","components/Navbar/LoggedNavbar.js","components/Admin-component/AdminInstructions.js","components/Footer/Footer.js","components/Profile.js","components/ToUpper.js","components/Admin-component/ProjectList.js","components/Admin-component/SideMenu.js","components/Admin-component/AdminContent.js","Pages/Admin.js","Pages/Login/Login.js","Pages/Logout.js","components/Student-component/StudentContent.js","components/Student-component/studentHomePage.js","components/Student-component/StudentCommentPage.js","components/Student-component/StudentPresentation.js","components/Student-component/studentWholePage.js","Pages/Student.js","components/Yami-component/YamiContent.js","Pages/Yami.js","context/projectcontext.js","components/verification/projectdetails.js","components/verification/projectlist.js","components/Faculty-component/FacultyContent.js","Pages/Faculty.js","components/ChangePassword/ChangePassword.js","components/NotFound.js","components/Navbar/Navbar.js","components/Admin-component/AdminCommentPage.js","Pages/PrefPage.js","components/Hod-component/HodProjectList.js","components/Hod-component/HodContent.js","Pages/Hod.js","components/Hod-component/HodCommentPage.js","components/Hod-component/HodPrefPage.js","components/Admin-component/AdminGroupsPage.js","components/Admin-component/AdminGuidePage.js","components/Admin-component/AdminArchives.js","components/Guide Component/GuideDetail.js","components/Guide Component/GroupList.js","Pages/Guide.js","components/Guide Component/GuidePrefPage.js","Pages/forgetPassword.js","Pages/resetPassword.js","App.js","serviceWorker.js","index.js","Pages/Login/background2.jpg"],"names":["SERVER_URL","kickUser","axios","method","url","withCredentials","headers","Authorization","localStorage","getItem","then","res","console","log","data","catch","err","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","profIcon","breakpoints","up","display","navMenu","down","MenuAppBar","classes","React","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleMenu","event","currentTarget","handleClose","window","location","href","className","AppBar","position","style","backgroundColor","Toolbar","to","textDecoration","color","Button","variant","Typography","IconButton","aria-label","aria-controls","aria-haspopup","onClick","fontSize","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","startIcon","marginLeft","LoggedNavbar","props","state","Fragment","Component","width","padding","letterSpacing","marginBottom","pos","Profile","Card","boxShadow","borderRadius","CardContent","fontWeight","fontFamily","paddingTop","rootItems","foot","margin","footEnd","Footer","Grid","container","item","xs","sm","Date","getFullYear","createMuiTheme","typography","h3","minWidth","marginTop","userInfo","academicYear","ThemeProvider","paddingBottom","md","name","type","department","email","toFirstCharUppercase","charAt","toUpperCase","slice","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","component","a11yProps","heading","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","accor","accordet","dueDateContainer","ControlledAccordions","Groups","dueDate","Guides","histor","useHistory","expanded","setExpanded","useTheme","setValue","assignLoading","setAssignLoading","guide","setGuide","guideE","setGuideE","changeDuedate","setDueDate","DueDateOpen","setDOpen","handleGuideChange","e","target","map","Guide","appendLeadingZeroes","n","handleChangeDueDateDialogClose","handleChange","panel","isExpanded","Dialog","DialogTitle","DialogContent","DialogContentText","utils","DateFnsUtils","autoOk","required","inputVariant","format","onChange","date","current_datetime","formatted_date","getMonth","getDate","InputAdornmentProps","DialogActions","credentials","qs","stringify","reload","alert","split","Tabs","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","Group","DueDate","members","Gname","pref1","pref2","pref3","AppliedOn","pref1AdminApproval","pref2AdminApproval","pref3AdminApproval","pref1HodApproval","pref2HodApproval","pref3HodApproval","proposals","length","applied","approval","admin","hod","Accordion","key","AccordionSummary","expandIcon","member","AccordionDetails","rollno","push","pathname","TextField","size","select","helperText","CircularProgress","groupId","assignGuide","handleChangeGuide","disabled","pref1Approval","pref2Approval","pref3Approval","LinearProgress","ButtonStyle","cursor","SideMenu","top","left","bottom","right","setState","itemsList","icon","toggleDrawer","anchor","Drawer","clsx","list","fullList","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","tempDate","Alert","elevation","Ad","AdminContent","handleDateChange","prefDueDate","a","handleAcademicYear","Academicyear","hodHandler","hodNameHandler","hodName","reason","openSuccess","openFailure","adData","submitHandler","preventDefault","formData","FormData","append","student_file","loading","fileValidation","fileInput","document","getElementById","files","filePath","exec","filled","this","checkData","checkGuides","onSubmit","gridField","InputTitle","Inputfield","autoFocus","FormControl","Select","Input","alignItems","submit","Snackbar","autoHideDuration","severity","footer","withStyles","flexDirection","minHeight","main","paper","pape","form","fields","border","paddingLeft","Admin","getStat","loggedIn","user","removeItem","Data","data_access","today","Login","username","password","msg","invalidCredentials","getResponse","bind","submitForm","response","access_token","setItem","token","exact","leftpaper","Container","maxWidth","CssBaseline","Avatar","avatar","fullWidth","autoComplete","background","float","backgroundImage","Image","backgroundSize","height","Logout","responsiveFontSizes","stuData","Stu","Proposals","StudentContent","handleClickOpen","handleAgreeClickClose","handleCancelClickClose","tabValue","handleTopChange","pn","prefs","preferences","i","Top","handleDosChange","Dos","handleDsopChange","cs","Dsop","handleAgencyChange","Agency","handleMtapChange","Mtap","handleRedChange","Red","handleShrChange","Shr","handleFileChange","selectedFile","handleClick","currentStep","handleSubmit","specialization","details","agency","result","requirements","JSON","_next","_prev","handleNext","prefno","formFilled","Step1","Step2","previousButton","Step3","handleClickClose","aria-describedby","largeWinTabs","centered","tabPanel","typographyFilled","attachPrints","smallWinTabs","scrollButtons","multiline","inputProps","rows","buttonprop","borderTop","tableContainer","table","propF","fill","StudentHomePage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","_id","proposal","approved","propTitle","propApproved","typo","StudentCommentPage","comments","comment","author","time","days","Presentations","StudentPresentation","presentation","sort","b","scheduled_date","getTime","Presentation","getDay","getHours","getMinutes","marks","now","vert_tab_grid","borderRight","divider","hor_tab_grid","borderBottom","large_win_tabs","small_win_tabs","StudentWholePage","obtained","setObtained","setAcademicYear","reqSent","setReqSent","orientation","tab","YamiContent","mailHandler","mail","nameHandler","deptHandler","dept","noValidate","InputLabel","deptLabel","Yami","ProjectContext","createContext","ProjectContextProvider","projects","isapproved","Approve","project","addComment","Provider","ProjectDetails","aboutProps","ProjectList","useContext","FacultyContent","ChangePassword","pushPassword","newPassword","confirmPassword","newpasswordHandler","confirmpasswordHandler","helptext","NotFound","backButton","buttonContainer","Navbar","typo1","typo2","textAllign","THEME","join","AdminCommentPage","Comments","reverse","d","fontStyle","toString","substr","ControlledExpansionPanels","commentHandler","handleApprove","pid","Gid","group","Proposal1","Proposal2","Proposal3","grid","appliedDate","content","comTitle","comField","comButton","sendComment","HodProjectList","history","Designation","HodContent","getGroup","acadYear","Hod","HodCommentPage","HodPrefPage","Groupid","deleteMemberEmail","groupData","AdminGroupsPage","handleDeleteMemberDialogOpen","deleteMemberOpen","handleDeleteMemberDialogClose","handleDeleteMember","gid","handleDeleteProposalsDialogClose","deleteProposalsOpen","handleDeleteProposals","handleAddMemberDialogOpen","gname","addMemberOpen","handleAddMemberDialogClose","handleMemberNameChange","memberName","handleMemberEmailChange","memberEmail","handleMemberRollnoChange","memberRollno","handleAddMember","groupName","addHodOpen","handleChildClick","stopPropagation","groupDetails","mainAccorContainer","proposal1Stat","proposal2Stat","proposal3Stat","mainAccor","accorStyle","groupCard","dmemberEmail","deleteIconStyle","handleDeleteProposalsDialogOpen","presCard","pres","memberHolder","dguideId","dguideEmail","dguideName","checkHod","dHodId","guideData","AdminGuidePage","handleDeleteHodDialogOpen","deleteHodOpen","handleDeleteHodDialogClose","handleDeleteHod","handleAddHodDialogOpen","handleAddHodDialogClose","handleHodNameChange","handleHodEmailChange","hodEmail","handleAddHod","Open","handleCloseCancel","handleCloseSubmit","Loading","guideName","guideEmail","handleDeleteDialogOpen","deleteOpen","handleDeleteDialogClose","handleDeleteGuide","handleGNameChange","handleGEmailChange","getGuide","guideDetails","guideListHolder","guideList","fontWeightRegular","GuideDetails","GuideGroupList","setAdData","setFilled","setLoading","sche_pres","dt","dateTime","toISOString","scheduleLoading","datetime","handleDateTimeChange","handleMarkSubmit","groupID","presentationID","totalMarks","parseInt","handleMarks","handleTotalMarks","handleDeletePresentation","PID","GID","match","params","defaultValue","textField","InputLabelProps","shrink","alignContent","forgetPassword","openInfo","resetPassword","openSuccees","done","App","path","Faculty","Student","PrefPage","GuidePrefPage","AdminArchives","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","register","error","message","module","exports"],"mappings":"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","file":"static/js/main.8558739c.chunk.js","sourcesContent":["if (process.env.NODE_ENV === \"production\")\r\n\tvar SERVER_URL = \"\";\r\nelse\t\r\n\tvar SERVER_URL = \"http://127.0.0.1:8000\";\r\nexport default SERVER_URL;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\n\r\nconst kickUser = () => {\r\n  axios({\r\n    method: \"get\",\r\n    url: SERVER_URL + \"/logout\",\r\n    withCredentials: true,\r\n    headers : {\r\n      Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n    }\r\n  })\r\n    .then(function (res) {\r\n      console.log(res.data);\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const pres_url = window.location.href;\r\n  if(pres_url===\"http://localhost:3000/cp@2707user\"){\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n          <Toolbar>\r\n            <Link\r\n              to=\"/\"\r\n              style={{ textDecoration: \"none\", color: \"#000\", marginRight:\"5px\" }}\r\n            >\r\n              <Button color=\"inherit\" variant=\"contained\">\r\n                <ArrowBackRoundedIcon />\r\n              </Button>\r\n            </Link>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              Project Management System\r\n            </Typography>\r\n            {auth && (\r\n              <div className={classes.profIcon}>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle style={{ fontSize: 40 }} />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\"\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\"\r\n                  }}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  <MenuItem onClick={handleClose}>\r\n                    <Link\r\n                      to=\"/cp@2707user\"\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                    >\r\n                      Change Password\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem onClick={handleClose}>\r\n                    <Link\r\n                      to=\"/logout\"\r\n                      onClick={kickUser}\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                    >\r\n                      Logout\r\n                    </Link>\r\n                  </MenuItem>\r\n                </Menu>\r\n              </div>\r\n            )}\r\n            <Link\r\n              to=\"/cp@2707user\"\r\n              className={classes.navMenu}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                startIcon={<AssignmentIndIcon />}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Link>\r\n            <Link\r\n              to=\"/logout\"\r\n              onClick={kickUser}\r\n              className={classes.navMenu}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                startIcon={<ExitToAppIcon />}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }else{\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n          <Toolbar>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              Project Management System\r\n            </Typography>\r\n            {auth && (\r\n              <div className={classes.profIcon}>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle style={{ fontSize: 40 }} />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\"\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\"\r\n                  }}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  <MenuItem onClick={handleClose}>\r\n                    <Link\r\n                      to=\"/cp@2707user\"\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                    >\r\n                      Change Password\r\n                    </Link>\r\n                  </MenuItem>\r\n                  <MenuItem onClick={handleClose}>\r\n                    <Link\r\n                      to=\"/logout\"\r\n                      onClick={kickUser}\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                    >\r\n                      Logout\r\n                    </Link>\r\n                  </MenuItem>\r\n                </Menu>\r\n              </div>\r\n            )}\r\n            <Link\r\n              to=\"/cp@2707user\"\r\n              className={classes.navMenu}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                startIcon={<AssignmentIndIcon />}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Link>\r\n            <Link\r\n              to=\"/logout\"\r\n              onClick={kickUser}\r\n              className={classes.navMenu}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                startIcon={<ExitToAppIcon />}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MenuAppBar from \"./MenuAppBar\";\r\n\r\nclass LoggedNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuAppBar />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedNavbar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textAlign: \"left\",\r\n    width: \"87%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: \"20px\",\r\n    \"borderLeftColor\": \"blue\",\r\n    \"border-left-style\": \"solid\",\r\n    \"border-left-width\": \"10px\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"20px\",\r\n    letterSpacing: \"1px\",\r\n    marginBottom:\"3px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h4\" style={{ fontWeight: \"600\",fontFamily:\"sans-serif\",marginBottom:\"10px\" }}>\r\n          Instructions -\r\n        </Typography>\r\n\r\n        \r\n        <Typography className={classes.title}>\r\n          1. Please fill the below form to create project list of your department          \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          2. Project list file should be of .csv  or .xlsx format          \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          3. the file should contain name,rollno,email,group_name\r\n           and the first row itself should be values e.g tim drake,1,tim@drake.com,group1 \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          4. On submitting the form you will create a list mentioned in the file\r\n          and will give authorities to emails mentioned by you\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport \"./Footer.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: \"#333\",\r\n    color: \"#fff\",\r\n    paddingTop: \"20px\"\r\n  },\r\n  rootItems: {\r\n    padding: \"8px\"\r\n  },\r\n  foot: {\r\n    margin: \"auto\"\r\n  },\r\n  footEnd: {\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#222\",\r\n    margin: \"0\"\r\n  }\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <footer>\r\n        <Grid container className={classes.root}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Privacy</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms And Conditions</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms of Use</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <BusinessIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>\r\n                  K.J.Somaiya Institute Of Engineering And Information\r\n                  Technology\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography> Sion,Mumbai</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <ContactMailIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>abcd@gmail.com</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>36326623966996</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.footEnd}>\r\n            <Typography>\r\n              &copy;{new Date().getFullYear()} KJSIEIT,Inc. All Rights Reserved.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '1.5rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '2rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    width: \"90%\",\r\n    textAlign: \"left\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"30px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"1px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  const userInfo = props;\r\n  const academicYear=props.academicYear;\r\n  console.log(props)\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <ThemeProvider theme={theme}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={1}>\r\n              <AccountBoxRoundedIcon style={{ fontSize: 50 }} />\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n              <Typography variant=\"h3\" style={{ fontWeight: \"600\", paddingBottom:\"20px\", }}>\r\n                User Details -\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </ThemeProvider>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Name:</b> {userInfo.userInfo.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Designation:</b> {userInfo.userInfo.type}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Department:</b> {userInfo.userInfo.department}\r\n              </Typography>\r\n            </Grid>            \r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b>Email:</b> {userInfo.userInfo.email}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b>Academic Year:</b> {academicYear}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","export const toFirstCharUppercase = name =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { CircularProgress,Card, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, LinearProgress, Menu, MenuItem, TextField } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  dueDateContainer:{\r\n    borderRadius:\"0px\"\r\n  }\r\n}));\r\n\r\n// let Guides = null;\r\n\r\n\r\nexport default function ControlledAccordions(props) {\r\n  let Groups = props.Groups;\r\n  let dueDate = Groups[0].dueDate\r\n  let Guides = props.Guides;\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n  const [assignLoading,setAssignLoading]=React.useState(false);\r\n  const [guide,setGuide] = React.useState(null);\r\n  const [guideE,setGuideE] = React.useState(null);\r\n  const [changeDuedate,setDueDate] = React.useState(new Date());\r\n  const [DueDateOpen,setDOpen] = React.useState(false)\r\n\r\n\r\n//Guide Menu\r\n  // const handleMenuClick = (event) => {\r\n  //   //console.log(Guides)\r\n  //   setAnchorEl(event.currentTarget);\r\n  // };\r\n  // const handleMenuClose = (event,index1) => {\r\n  //   if(index1===\"backdropClick\"){\r\n  //     console.log(index1)\r\n  //     setAnchorEl(null);\r\n  //   }else{\r\n  //     guideIndex=index1;\r\n  //     console.log(index1)\r\n  //     setAnchorEl(null);\r\n  //   }\r\n  // };\r\n\r\n  const handleGuideChange = (e) =>{\r\n    setGuide(e.target.value);\r\n    Guides.map(Guide=>{\r\n      if(Guide.name===e.target.value){\r\n        setGuideE(Guide.email)\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n//Change DueDate-------------------------------\r\n  //to change format of the month\r\nconst appendLeadingZeroes=(n)=> {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\n\r\nconst handleChangeDueDateDialogOpen=()=>{\r\n  setDOpen(true)\r\n}\r\nconst handleChangeDueDateDialogClose=()=>{\r\n  setDOpen(false)\r\n}\r\nconst handleChangeDueDate=()=>{\r\n  console.log(changeDuedate)\r\n  axios({\r\n    method: \"post\",\r\n    url: SERVER_URL + \"/updateDueDate\",\r\n    credentials: \"include\",\r\n    withCredentials: true,\r\n    data: qs.stringify({\r\n      dueDate:changeDuedate\r\n    }),\r\n    headers: {\r\n      \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n      \"Authorization\" : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n    }\r\n  })\r\n  .then(res => {\r\n    console.log(\"Due Changed\")\r\n    window.location.reload(false);\r\n  })\r\n\r\n  .catch(err => {\r\n    alert(\"DueDate didnt Change\")\r\n    console.log(err);\r\n  });\r\n}\r\nconst handleSetDueDate=(date)=>{\r\n  let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      appendLeadingZeroes(current_datetime.getDate());\r\n  setDueDate(formatted_date)\r\n}\r\n  \r\n\r\n// Assign Guide button\r\n\r\n  const assignGuide = (e,id) => {  \r\n    console.log(guide,guideE)\r\n    if(guide===null){\r\n      alert(\"Please select a guide first\")\r\n    }else{\r\n      setAssignLoading(true)\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name:guide,\r\n          email:guideE,\r\n          groupId:id\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          \"Authorization\" : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"submitted\")\r\n        setAssignLoading(false)\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        alert(\"Guide not assigned\")\r\n        setAssignLoading(false)\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n const handleChangeGuide = (id) => {\r\n  Groups.map(Group=>{\r\n    if(Group.id===id){\r\n      Group.guide.name=null;\r\n      Group.guide.email=null;\r\n    }\r\n  })\r\n  setGuide(null)\r\n }\r\n\r\n\r\n  // Tabs handleChange\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // SwipeableView index changing\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n// Accordion handleChange\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // let e={}\r\n\r\n  if(Guides!==null){\r\n    if(guide===null){\r\n      setGuide(Guides[0].name)\r\n    }\r\n    return (\r\n      <div>\r\n      {/* DIALOG FOR CHANGE DUEDATE */}\r\n      <Dialog open={DueDateOpen} onClose={handleChangeDueDateDialogClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\" style={{margin:\"auto 100px\"}}>Change DueDate</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Select a new DueDate\r\n          </DialogContentText>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                autoOk\r\n                required\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                format=\"yyyy/MM/dd\"\r\n                value={changeDuedate}\r\n                onChange={handleSetDueDate}\r\n                InputAdornmentProps={{ position: \"start\" }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleChangeDueDateDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleChangeDueDate} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div>\r\n\r\n      </div>\r\n      {/* DIALOG END */}\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n          <div >\r\n          <Card className={classes.dueDateContainer}>\r\n            <Grid container  style={{padding:\"5px\"}}>\r\n              <Grid item xs={8} style={{margin:\"auto\"}}><Typography variant=\"h6\">&nbsp;&nbsp;<b>DueDate for Submitting Proposals:&nbsp;{dueDate.split(\"T\")[0]}</b></Typography></Grid>\r\n              <Grid item xs={4} style={{textAlign:\"right\"}}><Button onClick={handleChangeDueDateDialogOpen} variant=\"contained\" color=\"primary\">Change DueDate</Button></Grid>\r\n            </Grid>\r\n          </Card>\r\n          </div>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChangeT}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n            >\r\n              <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n              <Tab label=\"Approval by HOD left\" {...a11yProps(1)} />\r\n              <Tab label=\"Applied\" {...a11yProps(2)} />\r\n              <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n                let pref1AdminApproval = false;\r\n                let pref2AdminApproval = false;\r\n                let pref3AdminApproval = false;\r\n                let pref1HodApproval = false;\r\n                let pref2HodApproval = false;\r\n                let pref3HodApproval = false;\r\n  \r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n  \r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  //console.log(AppliedOn, DueDate);\r\n                  pref1AdminApproval = pref1.approval.admin;\r\n                  pref2AdminApproval = pref2.approval.admin;\r\n                  pref3AdminApproval = pref3.approval.admin;\r\n                  pref1HodApproval = pref1.approval.hod;\r\n                  pref2HodApproval = pref2.approval.hod;\r\n                  pref3HodApproval = pref3.approval.hod;\r\n                }\r\n  \r\n                if (\r\n                  (pref1AdminApproval && pref1HodApproval) ||\r\n                  (pref2AdminApproval && pref2HodApproval) ||\r\n                  (pref3AdminApproval &&\r\n                    pref3HodApproval &&\r\n                    Group.proposals.length !== 0)\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.name}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.email}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item container xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <React.Fragment>\r\n                                <Grid item xs={3}>\r\n                                  <Button\r\n                                    onClick={routeChange}\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    Show Preferences\r\n                                  </Button>\r\n                                </Grid>\r\n                                <Grid container item xs={9}>\r\n                                  {(Group.guide.name===null)?(\r\n                                    <React.Fragment>\r\n                                      <Grid item xs={5} />\r\n                                      <Grid item xs={3}>\r\n                                        <TextField\r\n                                          size=\"medium\"\r\n                                          id=\"selectGuide\"\r\n                                          select\r\n                                          value={guide}\r\n                                          onChange={handleGuideChange}\r\n                                          helperText=\"Please select Guide\"\r\n                                        >         \r\n                                          {Guides.map((Guide)=>{\r\n                                            return(\r\n                                              <MenuItem key={Guide.email} value={Guide.name}>{Guide.name}</MenuItem>\r\n                                          )\r\n                                          })}\r\n                                        </TextField> \r\n                                      </Grid>\r\n                                      <Grid item xs ={1} />\r\n                                      <Grid item xs={3}>\r\n                                        { !assignLoading ? (\r\n                                            <Button style={{marginRight:\"20px\"}} variant=\"contained\" color=\"secondary\" onClick={(e)=>assignGuide(e,id)}>Assign Guide</Button>\r\n                                        ) : (\r\n                                            <CircularProgress />\r\n                                        )}\r\n                                      </Grid>\r\n                                   </React.Fragment>\r\n                                ):(\r\n                                  <React.Fragment>\r\n                                    <Grid item xs={2} />\r\n                                    <Grid item xs={3}>\r\n                                      <Typography variant=\"h6\" color=\"secondary\">\r\n                                        Guide Assigned: \r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography variant=\"h6\" color=\"secondary\">{Group.guide.name}</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                      <Button variant=\"contained\" color=\"primary\" onClick={()=>{handleChangeGuide(id)}}>Change Guide</Button>\r\n                                    </Grid>\r\n                                  </React.Fragment>\r\n                                )}\r\n                              </Grid> \r\n                              </React.Fragment>\r\n                            ) : (\r\n                              <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n  \r\n                let pref1AdminApproval = false;\r\n                let pref2AdminApproval = false;\r\n                let pref3AdminApproval = false;\r\n                let pref1HodApproval = false;\r\n                let pref2HodApproval = false;\r\n                let pref3HodApproval = false;\r\n  \r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n  \r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  //console.log(DueDate, AppliedOn);\r\n                  pref1AdminApproval = pref1.approval.admin;\r\n                  pref2AdminApproval = pref2.approval.admin;\r\n                  pref3AdminApproval = pref3.approval.admin;\r\n                  pref1HodApproval = pref1.approval.hod;\r\n                  pref2HodApproval = pref2.approval.hod;\r\n                  pref3HodApproval = pref3.approval.hod;\r\n                }\r\n  \r\n                if (\r\n                  (pref1AdminApproval && !pref1HodApproval) ||\r\n                  (pref2AdminApproval && !pref2HodApproval) ||\r\n                  (pref3AdminApproval &&\r\n                    !pref3HodApproval &&\r\n                    Group.proposals.length !== 0)\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.name}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.email}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll-no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n  \r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n                let pref1Approval = false;\r\n                let pref2Approval = false;\r\n                let pref3Approval = false;\r\n  \r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n  \r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  pref1Approval = pref1.approval.admin;\r\n                  pref2Approval = pref2.approval.admin;\r\n                  pref3Approval = pref3.approval.admin;\r\n                }\r\n  \r\n                if (\r\n                  !pref1Approval &&\r\n                  !pref2Approval &&\r\n                  !pref3Approval &&\r\n                  Group.proposals.length !== 0\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.name}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.rollno}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n  \r\n            <TabPanel value={value} index={3} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n  \r\n                if (Group.proposals.length === 0) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                          style={{ width: \"100%\", padding: \"auto\" }}\r\n                        >\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.name}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n  \r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll-no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.rollno}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <Typography>\r\n                              <b>Due Date for Submitting Proposals:</b>&nbsp;&nbsp;\r\n                              {DueDate}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n          </SwipeableViews>\r\n        </div>\r\n      </div>\r\n    );\r\n  }else{\r\n    return(\r\n      <LinearProgress />\r\n    )\r\n  }\r\n  \r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst kickUser = () => {\r\n  axios({\r\n    method: \"get\",\r\n    url: SERVER_URL + \"/logout\",\r\n    withCredentials: true,\r\n    headers : {\r\n      Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n    }\r\n  })\r\n    .then(function (res) {\r\n      console.log(res.data);\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  ButtonStyle:{\r\n    color:\"#000\",\r\n    backgroundColor:\"#e0e0e0\",\r\n    padding:\"0px 5px\",\r\n    cursor:\"pointer\",\r\n    borderRadius:\"2px\",\r\n    marginRight:\"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: '#fff'\r\n    }\r\n    \r\n  },\r\n  \r\n\r\n}));\r\n\r\n\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const histor = useHistory();\r\n   const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n   const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => histor.push(\"/admin\")\r\n    },\r\n    {\r\n      text: \"Groups\",\r\n      icon: <PeopleAltIcon/>,\r\n      onClick: () => histor.push(\"/admin/groups\")\r\n    },\r\n    {\r\n      text: \"Guides\",\r\n      icon: <SupervisedUserCircleIcon/>,\r\n      onClick: () => histor.push(\"/admin/guides\")\r\n    },\r\n    {\r\n      text: \"Archives\",\r\n      icon: <ArchiveIcon />,\r\n      onClick: () => histor.push(\"/admin/archives\")\r\n    }\r\n  ];\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n      {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <React.Fragment>\r\n            <ListItem button key={text} onClick={onClick} style={{marginRight:\"40px\"}}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n            <Divider/>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n     \r\n    </div>\r\n  );\r\n\r\n  return (\r\n        <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} >\r\n            {list(anchor)}\r\n          </Drawer>\r\n          <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n        <MenuIcon fontSize=\"large\" onClick={toggleDrawer(anchor, true)} className={classes.ButtonStyle} style={{}}/>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n          {auth && (\r\n            <div className={classes.profIcon}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/cp@2707user\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Change Password\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/logout\"\r\n                    onClick={kickUser}\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Link\r\n            to=\"/cp@2707user\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              startIcon={<AssignmentIndIcon />}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            to=\"/logout\"\r\n            onClick={kickUser}\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"20px\" }}\r\n              startIcon={<ExitToAppIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n          </React.Fragment>\r\n          ))}\r\n    </div>\r\n          \r\n      \r\n     \r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport AdminInstructions from \"./AdminInstructions\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LinearProgress,\r\n  TextField,\r\n  withStyles,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Input,\r\n  Snackbar,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SideMenu from \"./SideMenu\"\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\n//getting todays date\r\nvar tempDate = new Date();\r\nvar date =\r\n  tempDate.getFullYear() +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getMonth() + 1) +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getDate());\r\nconsole.log(date);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet userInfo = [];\r\nlet Ad = null;\r\nlet filled = false;\r\nlet Groups = null;\r\nlet Guides=null;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\n\r\nclass AdminContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hod: \"\",\r\n      hodName: \"\",\r\n      student_file: null,\r\n      adData: null,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      loading: false,\r\n      prefDueDate: date,\r\n      Academicyear: \"2020-2021\"\r\n    };\r\n  }\r\n\r\n  //to change format of the month\r\n  appendLeadingZeroes(n) {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  handleDateChange = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getDate());\r\n    this.setState({ prefDueDate: formatted_date });\r\n    let a = new Date(\"2020-12-01\");\r\n    if (current_datetime < a) {\r\n      console.log(\"success\");\r\n    } else if (current_datetime > a) {\r\n      console.log(\"failed\");\r\n    }\r\n    console.log(a);\r\n  };\r\n\r\n  //function to handle Academic Year\r\n  handleAcademicYear = e => {\r\n    this.setState({ Academicyear: e.target.value });\r\n  };\r\n\r\n  hodHandler = e => {\r\n    this.setState({ hod: e.target.value });\r\n  };\r\n  hodNameHandler = e => {\r\n    this.setState({ hodName: e.target.value });\r\n  };\r\n\r\n  // picHandler = e => {\r\n  //   this.setState({ pic: e.target.value });\r\n  // };\r\n  // picNameHandler = e => {\r\n  //   this.setState({ picName: e.target.value });\r\n  // };\r\n  // igHandler = e => {\r\n  //   this.setState({ ig: e.target.value });\r\n  // };\r\n  // igNameHandler = e => {\r\n  //   this.setState({ igName: e.target.value });\r\n  // };\r\n  // studentfileHandler = e => {\r\n  //   this.fileValidation(e);\r\n  // };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    var formData = new FormData();\r\n    formData.append(\"hodName\", this.state.hodName);\r\n    formData.append(\"hodEmail\", this.state.hod);\r\n    formData.append(\"student_file\", this.state.student_file);\r\n    formData.append(\"dueDate\", this.state.prefDueDate);\r\n    formData.append(\"acadYear\", this.state.Academicyear);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/admin\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n    this.setState({ hod: \"\", student_file: null, hodName: \"\" });\r\n  };\r\n\r\n  fileValidation = e => {\r\n    var fileInput = document.getElementById(\"file\");\r\n    console.log(fileInput);\r\n    console.log(e.target.files[0]);\r\n    var filePath = fileInput.value;\r\n    console.log(filePath);\r\n    // Allowing file type\r\n    var allowedExtensions = /(\\.csv|\\.xlsx)$/i;\r\n\r\n    if (!allowedExtensions.exec(filePath)) {\r\n      alert(\"Invalid file type\");\r\n      fileInput.value = \"\";\r\n      return false;\r\n    } else {\r\n      this.setState(\r\n        { student_file: e.target.files[0] },\r\n        console.log(this.state.student_file)\r\n      );\r\n    }\r\n  };\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        // console.log(res.data)\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n  checkGuides(){\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n    .then(res => {\r\n      Guides = res.data;\r\n      console.log(res,Guides)\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.prefDueDate);\r\n    let academicYear=this.state.Academicyear\r\n    //console.log(academicYear);\r\n    const { classes } = this.props;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <LoggedNavbar />\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.adData === null || Guides===null) {\r\n      this.checkData();\r\n      this.checkGuides();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n\r\n    if (this.state.filled === true) {\r\n      if (Ad === 0) {\r\n        return (\r\n          <div className={classes.root}>\r\n            <SideMenu/>\r\n            <Profile userInfo={userInfo} />\r\n            <AdminInstructions />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"50px auto\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\"\r\n              }}\r\n            >\r\n              <form\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  marginTop: \"30px\",\r\n                  padding: \"20px 30px\"\r\n                }}\r\n                onSubmit={this.submitHandler}\r\n              >\r\n                <Typography variant=\"h2\" style={{ marginBottom: \"30px\" }}>\r\n                  Create Project List\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Enter Head Of Department Details:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hodName\"\r\n                      label=\"Enter Head of Department Name\"\r\n                      value={this.state.hodName}\r\n                      onChange={this.hodNameHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hod\"\r\n                      label=\"Enter Head of Department Email\"\r\n                      value={this.state.hod}\r\n                      onChange={this.hodHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  {/* <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student List File:\r\n                    </Typography>\r\n                  </Grid> */}\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Academic Year:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {\" \"}\r\n                        <FormControl\r\n                          variant=\"outlined\"\r\n                          label=\"Academic Year\"\r\n                          style={{ width: \"60%\", padding: \"8px\" }}\r\n                        >\r\n                          <Select\r\n                            required\r\n                            value={this.state.Academicyear}\r\n                            onChange={this.handleAcademicYear}\r\n                            name=\"Academic Year\"\r\n                          >\r\n                            <MenuItem value=\"2020-2021\">2020-2021</MenuItem>\r\n                            <MenuItem value=\"2021-2022\">2021-2022</MenuItem>\r\n                            <MenuItem value=\"2022-2023\">2022-2023</MenuItem>\r\n                            <MenuItem value=\"2023-2024\">2023-2024</MenuItem>\r\n                            <MenuItem value=\"2024-2025\">2024-2025</MenuItem>\r\n                            <MenuItem value=\"2025-2026\">2025-2026</MenuItem>\r\n                            <MenuItem value=\"2026-2027\">2026-2027</MenuItem>\r\n                            <MenuItem value=\"2027-2028\">2027-2028</MenuItem>\r\n                            <MenuItem value=\"2028-2029\">2028-2029</MenuItem>\r\n                            <MenuItem value=\"2029-2030\">2029-2030</MenuItem>\r\n                            <MenuItem value=\"2030-2031\">2030-2031</MenuItem>\r\n                            <MenuItem value=\"2031-2032\">2031-2032</MenuItem>\r\n                            <MenuItem value=\"2032-2033\">2032-2033</MenuItem>\r\n                            <MenuItem value=\"2033-2034\">2033-2034</MenuItem>\r\n                            <MenuItem value=\"2034-2035\">2034-2035</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Due Date for Proposal Submission:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            autoOk\r\n                            required\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"yyyy/MM/dd\"\r\n                            value={this.state.prefDueDate}\r\n                            InputAdornmentProps={{ position: \"start\" }}\r\n                            onChange={this.handleDateChange}\r\n                            style={{ width: \"60%\", padding: \"8px\" }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student Group List:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <Input\r\n                      className={classes.Input}\r\n                      type=\"file\"\r\n                      id=\"file\"\r\n                      name=\"student_file\"\r\n                      onChange={this.fileValidation}\r\n                      style={{\r\n                        width: \"60%\",\r\n                        padding: \"12px\"\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <div style={{ alignItems: \"center\", margin: \"0 30%\" }}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                        startIcon={<CloudUploadIcon />}\r\n                        style={{\r\n                          padding: \"8px 50px\",\r\n                          fontSize: \"18px\",\r\n                          backgroundColor: \"#1877f2\",\r\n                          margin: \"25px\"\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Data submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Data not submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </div>\r\n        );\r\n      }\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <SideMenu/>\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n            {}\r\n              <ProjectList Groups={Groups} Guides={Guides} />\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AdminContent from \"../components/Admin-component/AdminContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n// var today = new Date(),\r\n//   date = today.getDate();\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <AdminContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../URL\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./background2.jpg\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet Data = \"\";\r\nlet data_access = \"\";\r\nlet Ad = [];\r\nvar today = new Date(),\r\n  date =\r\n    today.getDate() +\r\n    \"a\" +\r\n    today.getMonth() +\r\n    \"V\" +\r\n    today.getFullYear() +\r\n    \"fUcKyoU\" +\r\n    50 +\r\n    \"Z\" +\r\n    today.getDate();\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    background: \"transparent\",\r\n    // boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n    borderRadius: \"6px\",\r\n    float: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    paddingTop: \"40px\",\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      paddingTop: \"20px\"\r\n    }\r\n  },\r\n  leftpaper: {\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundSize: \"cover\",\r\n    height: \"100%\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#1877f2\",\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    marginTop: \"30px\"\r\n  },\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  title: {\r\n    paddingTop: \"50px\",\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"775\")]: {\r\n      fontSize: \"45px\"\r\n    },\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      fontSize: \"40px\"\r\n    }\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n\r\n    if (token == null) {\r\n      loggedIn = false;\r\n      console.log(\"token is null\");\r\n    }\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedIn,\r\n      user: \"\",\r\n      msg: \"\",\r\n      invalidCredentials: false,\r\n      getResponse: false\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChange = name => ({ target: { value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    //Login Logic\r\n    this.setState({ getResponse: true });\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL+\"/login\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        email: username,\r\n        password: password\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n      }\r\n    })\r\n      .then(\r\n        function (response) {\r\n          Data = response.data.type;\r\n          data_access = response.data.access_token;\r\n          localStorage.setItem(\"access_token\", response.data.access_token);\r\n          this.setState({\r\n            user: response.data.type,\r\n            loggedIn: true,\r\n            msg: \"set\",\r\n            getResponse: false\r\n          });\r\n        }.bind(this)\r\n      )\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ invalidCredentials: true, getResponse: false });\r\n      });\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(function (res) {\r\n        Ad = res.data;\r\n        console.log(Ad);\r\n      })\r\n      // .then(() => {\r\n      //   localStorage.setItem(\"data\", \"set\");\r\n      // })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getToken() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === null) {\r\n      this.setState({\r\n        loggedIn: false\r\n      });\r\n      console.log(this.state.loggedIn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (Data === \"admin\") {\r\n      this.checkData();\r\n    }\r\n    if (Data === \"yami\") {\r\n      localStorage.setItem(\"token\", \"N1g70xwfa0V6oCXVweqt\" + date);\r\n    }\r\n    if (Data === \"admin\") {\r\n      localStorage.setItem(\"token\", \"admin\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"guide\") {\r\n      localStorage.setItem(\"token\", \"guide\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"ig\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"pic\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"hod\") {\r\n      localStorage.setItem(\"token\", \"hod\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"student\") {\r\n      localStorage.setItem(\"token\", \"student\");\r\n      localStorage.setItem(\"access_token\",data_access);\r\n    }\r\n    Data = \"\";\r\n    if (this.state.loggedIn) {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (token === \"N1g70xwfa0V6oCXVweqt\" + date)\r\n        return <Redirect to=\"/yami\" exact />;\r\n      if (token === \"admin\") return <Redirect to=\"/admin\" exact />;\r\n      if (token === \"student\") return <Redirect to=\"/student\" exact />;\r\n      if (token === \"faculty\") return <Redirect to=\"/faculty\" exact />;\r\n      if (token === \"hod\") return <Redirect to=\"/hod\" exact />;\r\n      if (token === \"guide\") return <Redirect to=\"/guide\" exact />;\r\n    }\r\n    const handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n      this.setState({ invalidCredentials: false });\r\n    };\r\n    // if (this.state.loggedIn) {\r\n    //   return <Redirect to=\"/admin\" />;\r\n    // }\r\n    if (this.state.getResponse) {\r\n      return <LinearProgress />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.leftpaper}>\r\n          <Typography variant=\"h2\" className={classes.title}>\r\n            <b>Project Management System</b>\r\n          </Typography>\r\n          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n            <CssBaseline />\r\n            <Avatar variant=\"circle\" className={classes.avatar}>\r\n              <PersonIcon fontSize=\"large\" />\r\n            </Avatar>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              <b>User Login</b>\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={this.submitForm}>\r\n              <TextField\r\n                type=\"email\"\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange(\"username\")}\r\n                className={classes.fields}\r\n              />\r\n              <TextField\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange(\"password\")}\r\n                autoComplete=\"current-password\"\r\n                className={classes.fields}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n            <Link\r\n              to=\"/forgetPassword\"\r\n              style={{ textDecoration: \"underline\", color: \"#fff\", marginRight:\"5px\" }}\r\n            >\r\n            forgot password ? reset now\r\n            </Link>\r\n            <Snackbar\r\n              open={this.state.invalidCredentials}\r\n              autoHideDuration={6000}\r\n              onClose={handleClose}\r\n            >\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                Invalid Username/Password Please try again\r\n              </Alert>\r\n            </Snackbar>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Login);\r\n// <Grid container>\r\n//   <Hidden xsDown>\r\n//     <Grid item   md={7}   className={classes.leftpaper}>\r\n//     </Grid>\r\n//   </Hidden>\r\n//   <Grid item  component=\"main\" maxWidth=\"xs\" md={5}>\r\n//     <CssBaseline />\r\n//     <div\r\n//       className={classes.paper}\r\n//       style={{\r\n//         boxShadow:\r\n//           \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n//         backgroundColor: \"#fff\",\r\n//         borderRadius: \"6px\"\r\n//       }}\r\n//     >\r\n//       <Avatar\r\n//         variant=\"circle\"\r\n//         className={classes.avatar}\r\n//         style={{ marginTop: \"30px\" }}\r\n//       >\r\n//         <PersonIcon fontSize=\"large\" />\r\n//       </Avatar>\r\n//       <Typography component=\"h2\" variant=\"h6\">\r\n//         User Login\r\n//       </Typography>\r\n//       <form\r\n//         className={classes.form}\r\n//         onSubmit={this.submitForm}\r\n//         noValidate\r\n//       >\r\n//         <TextField\r\n//           type=\"email\"\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           id=\"username\"\r\n//           label=\"username\"\r\n//           value={this.state.username}\r\n//           onChange={this.handleChange(\"username\")}\r\n//           className={classes.fields}\r\n//           autoFocus\r\n//         />\r\n//         <TextField\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           label=\"Password\"\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           value={this.state.password}\r\n//           onChange={this.handleChange(\"password\")}\r\n//           autoComplete=\"current-password\"\r\n//           className={classes.fields}\r\n//         />\r\n\r\n//         <Button\r\n//           type=\"submit\"\r\n//           fullWidth\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           className={classes.submit}\r\n//           style={{\r\n//             padding: \"10px\",\r\n//             fontSize: \"18px\",\r\n//             fontWeight: \"bolder\",\r\n//             backgroundColor: \"#1877f2\",\r\n//             marginBottom: \"25px\"\r\n//           }}\r\n//         >\r\n//           Log In\r\n//         </Button>\r\n//       </form>\r\n//       <Snackbar\r\n//         open={this.state.invalidCredentials}\r\n//         autoHideDuration={6000}\r\n//         onClose={handleClose}\r\n//       >\r\n//         <Alert onClose={handleClose} severity=\"error\">\r\n//           Invalid Username/Password Please try again\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </div>\r\n//   </Grid>\r\n// </Grid>\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Logout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"access_token\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>You Have been Logged out</h1>\r\n        <button onClick={() => {window.location.reload(false)}}><Link to=\"/\">Login Again</Link></button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport {Typography, TextField, Grid, Button, withStyles, CircularProgress, Tabs, Tab, Box, AppBar, createMuiTheme, ThemeProvider, responsiveFontSizes } from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet stuData = null;\r\nlet Stu = null;\r\nlet filled = false;\r\nlet Proposals = null;\r\nlet pref1=[];\r\nlet pref2=[];\r\nlet pref3=[];\r\n\r\nconst useStyles = theme => ({\r\n  buttonprop: {\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  TextField: {\r\n    width: \"100%\"\r\n  },\r\n  typography:{\r\n    fontSize:\"16px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  typographyFilled:{\r\n    fontWeight:\"700\",\r\n    fontSize:\"20px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  tabPanel:{\r\n    borderTop:\"1px solid #000\",\r\n    width:\"100%\"\r\n  },\r\n  largeWinTabs:{\r\n    [theme.breakpoints.down('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n  smallWinTabs:{\r\n    [theme.breakpoints.up('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nclass StudentContent extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      preferences: [\r\n        {\r\n          filled: false,\r\n          prefno: 1,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 2,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 3,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        }\r\n      ],\r\n      currentStep: 1,\r\n      stuData: null,\r\n      tabValue: 0,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      formFilled: false,\r\n      loading: false,\r\n      open:false\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({open:true})\r\n  };\r\n\r\n  handleAgreeClickClose = () => {\r\n    Stu=0;\r\n    this.setState({open:false})\r\n  }\r\n  handleCancelClickClose = () => {\r\n    this.setState({open:false})\r\n  }\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      stuData: null\r\n    });\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      tabValue: newValue\r\n    });\r\n  };\r\n\r\n  handleTopChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      //let prefno = prefs[i].prefno;\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Top = e.target.value;\r\n        //prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n        // console.log(this.state.preferences);\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleDosChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dos = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleDsopChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dsop = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleAgencyChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Agency = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleMtapChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Mtap = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleRedChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Red = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleShrChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Shr = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleFileChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        prefs[i].selectedFile = e.target.files[0];\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClick = (e, pn) => {\r\n    e.preventDefault();\r\n    if (this.state.currentStep === 3) {\r\n      console.log(\"HELLO\");\r\n      let prefs = [...this.state.preferences];\r\n      for (var i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n          console.log(prefs[i].filled);\r\n          this.handleSubmit(e);\r\n        }\r\n      }\r\n    } else {\r\n      let prefs = [...this.state.preferences];\r\n      for (i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n          console.log(prefs[i].filled);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(this.state.preferences);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let pref1 = this.state.preferences[0];\r\n    let pref2 = this.state.preferences[1];\r\n    let pref3 = this.state.preferences[2];\r\n    //console.log(pref1);\r\n    let proposals = [\r\n      {\r\n        title: pref1.Top,\r\n        specialization: pref1.Dos,\r\n        details: pref1.Dsop,\r\n        agency: pref1.Agency,\r\n        method: pref1.Mtap,\r\n        result: pref1.Red,\r\n        requirements: pref1.Shr\r\n      },\r\n      {\r\n        title: pref2.Top,\r\n        specialization: pref2.Dos,\r\n        details: pref2.Dsop,\r\n        agency: pref2.Agency,\r\n        method: pref2.Mtap,\r\n        result: pref2.Red,\r\n        requirements: pref2.Shr\r\n      },\r\n      {\r\n        title: pref3.Top,\r\n        specialization: pref3.Dos,\r\n        details: pref3.Dsop,\r\n        agency: pref3.Agency,\r\n        method: pref3.Mtap,\r\n        result: pref3.Red,\r\n        requirements: pref3.Shr\r\n      }\r\n    ];\r\n    var formData = new FormData();\r\n    formData.append(\"proposals\", JSON.stringify(proposals));\r\n    formData.append(\"file1\", this.state.preferences[0].selectedFile);\r\n    formData.append(\"file2\", this.state.preferences[1].selectedFile);\r\n    formData.append(\"file3\", this.state.preferences[2].selectedFile);\r\n    console.log(proposals);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n\r\n    console.log(this.state.preferences);\r\n  };\r\n\r\n  checkData = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers : {\r\n                Authorization : 'Bearer '+localStorage.getItem(\"access_token\"),\r\n            }\r\n    })\r\n      .then(res => {\r\n        Stu = res.data.proposals.length;\r\n        Proposals = res.data.proposals;\r\n        //console.log(Proposals);\r\n        pref1 = Proposals[0]\r\n        pref2 = Proposals[1]\r\n        pref3 = Proposals[2]\r\n        // console.log(pref1)\r\n        this.setState({\r\n          stuData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  _next = e => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n    this.handleClick(e, currentStep - 1);\r\n  };\r\n\r\n  _prev = () => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n  };\r\n\r\n  handleNext = e => {\r\n    e.preventDefault();\r\n    let currentStep = this.state.currentStep;\r\n    let {\r\n      Top,\r\n      Dos,\r\n      Dsop,\r\n      Agency,\r\n      Mtap,\r\n      Red,\r\n      Shr,\r\n      selectedFile\r\n    } = this.state.preferences[currentStep - 1];\r\n    if (\r\n      Top === \"\" ||\r\n      Dos === \"\" ||\r\n      Dsop === \"\" ||\r\n      Agency === \"\" ||\r\n      Mtap === \"\" ||\r\n      Red === \"\" ||\r\n      Shr === \"\" ||\r\n      selectedFile === null\r\n    ) {\r\n      alert(\"Please enter all the details of the preference\");\r\n    } else {\r\n      // console.log(this.state.preferences);\r\n      this.setState({ open: true });\r\n      this._next(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    stuData = this.state.stuData;\r\n    filled = this.state.filled;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (stuData === null) {\r\n      this.checkData();\r\n    }\r\n    if (filled === true) {\r\n      if (Stu === 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <form>\r\n              <Step1\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleClose={this.handleClose}\r\n                handleFileChange={this.handleFileChange}\r\n              />\r\n              <Step2\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                handleClose={this.handleClose}\r\n                _prev={this._prev}\r\n              />\r\n              <Step3\r\n                classes={classes}\r\n                openSuccess={this.state.openSuccess}\r\n                openFailure={this.state.openFailure}\r\n                handleClose={this.handleClose}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleSubmit={this.handleSubmit}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                _prev={this._prev}\r\n              />\r\n              {/* {this.previousButton()} */}\r\n            </form>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n      if (Stu !== 0) {\r\n        let value=this.state.tabValue;\r\n          return (\r\n            <React.Fragment>\r\n              {!(pref1.approval.admin||pref2.approval.admin||pref3.approval.admin)?(\r\n                <React.Fragment>\r\n                  <Button onClick={this.handleClickOpen} variant=\"outlined\" color=\"primary\">\r\n                    Re-enter Proposals\r\n                  </Button>\r\n                  <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClickClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                  >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Re-enter the proposals?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                      <DialogContentText id=\"alert-dialog-description\">\r\n                        If you click ok then you have to re-enter the proposals completely. If you refresh the page or close the tabs then all your changes will be lost. \r\n                      </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={this.handleCancelClickClose} color=\"primary\" autoFocus>\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={this.handleAgreeClickClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </React.Fragment>\r\n              ):(null)}\r\n              <div className={classes.largeWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\" centered>\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </div>\r\n              <div className={classes.smallWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs variant=\"scrollable\" scrollButtons=\"on\" value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\">\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <CircularProgress />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step1(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 1) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 1\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step2(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 2) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 2\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n            {/* <Snackbar open={props.open} autoHideDuration={6000} onClose={props.handleClose}>\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preference 2 submitted successfully\r\n              </Alert>\r\n            </Snackbar> */}\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step3(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 3) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 3\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              type=\"submit\"\r\n              onClick={e => {\r\n                props.handleClick(e, props.currentStep);\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Snackbar\r\n              open={props.openSuccess}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preferences submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n              open={props.openFailure}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"error\">\r\n                Preferences not submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(StudentContent);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from \"@material-ui/core\";\r\n\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nlet propF = false;\r\nlet sData = null;\r\nlet fill = false;\r\nlet Group = null;\r\n\r\nconst StudentHomePage = (props) => {\r\n\r\n    Group=props.Group;\r\n    AppliedOn=props.AppliedOn;\r\n    DueDate=props.DueDate;\r\n    const [stuData, setStuData] = useState(\"new\");\r\n    const [filled, setFilled ] = useState(true);\r\n    const [loading,setLoading] = useState(false);\r\n    const classes = useStyles();\r\n    if(Group.proposals.length!==0){\r\n      propF=true\r\n    }\r\n    sData = stuData;\r\n    fill = filled;\r\n\r\n  function propApproved(proposals) {\r\n    let approved = false;\r\n    let propTitle = \"\";\r\n    proposals.map(proposal => {\r\n      if (proposal.approval.admin && proposal.approval.hod) {\r\n        approved = true;\r\n        propTitle = proposal.title;\r\n      }\r\n    });\r\n\r\n    if (approved) {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"primary\" variant=\"h4\">\r\n              Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h4\">\r\n              Your Proposal <b>{propTitle}</b> has been approved. Please start\r\n              working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"secondary\" variant=\"h4\">\r\n              Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h4\">\r\n              Your Proposal <b>{propTitle}</b> has been approved. Please start\r\n              working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"primary\" variant=\"h4\">\r\n              Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"secondary\" variant=\"h4\">\r\n              Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  // console.log(propF)\r\n  if (loading) {\r\n    return (\r\n      <div style={{ margin: \"auto\" }}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  // if (sData === null) {\r\n  //   checkData();\r\n  // }\r\n  if (fill && propF) {\r\n    let i = 1;\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Typography style={{ marginTop: \"20px\" }} variant=\"h4\">\r\n            Approval Status\r\n          </Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Proposal</TableCell>\r\n                  <TableCell align=\"center\">Proposal Title</TableCell>\r\n                  <TableCell align=\"center\">Admin</TableCell>\r\n                  <TableCell align=\"center\">Head of Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {proposals.map(proposal => (\r\n                  <TableRow key={proposal.title}>\r\n                    <TableCell align=\"center\">{i++}</TableCell>\r\n                    <TableCell align=\"center\">{proposal.title}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.admin ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.hod ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {propApproved(proposals)}\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  if (fill && !propF) {\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {proposals.length === 0 ? (\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              <b>Due Date for Submitting Proposals:</b>&nbsp;&nbsp;{DueDate}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <Typography style={{ marginBottom: \"40px\" }} variant=\"h3\">\r\n            Preferences not filled\r\n          </Typography>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return <CircularProgress />;\r\n};\r\n\r\nexport default StudentHomePage;\r\n","import React from 'react';\r\nimport { makeStyles, Typography, CircularProgress, Grid, Paper } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo:{\r\n        textAlign:\"Left\"\r\n    }\r\n}))\r\n\r\nlet Group = null;\r\n\r\nconst StudentCommentPage = (props) => {\r\n    Group = props.Group\r\n    const classes = useStyles();\r\n\r\n\r\n    if(Group === null){\r\n        return (\r\n            <div style={{ margin: \"auto\" }}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }else{\r\n        const {comments} = Group;\r\n        if(comments.length === 0){\r\n            return(\r\n                <React.Fragment>\r\n                    <Typography variant=\"h4\">No comments have been added</Typography>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            console.log(comments);\r\n            return(\r\n            comments.map(comment => {\r\n                console.log(comment);\r\n                return(\r\n                    <React.Fragment key={comment._id}>\r\n                        <Paper>\r\n                            <Grid style={{marginTop:\"10px\",marginBottom:\"10px\"}} container spacing={2}>\r\n                                <Grid className={classes.typo} item xs={6}>\r\n                                    <Typography>Author : {comment.author}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={6}>\r\n                                    <Typography>Time : {comment.time}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={12}>\r\n                                    <Typography>Comment : {comment.text}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </React.Fragment>\r\n                );\r\n            }))\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentCommentPage;","import { CircularProgress, createMuiTheme, makeStyles, Paper, responsiveFontSizes, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, ThemeProvider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\nconst useStyles = makeStyles(theme => ({\r\n    tableContainer: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"50px\"\r\n      },\r\n      table: {\r\n        minWidth: 650\r\n      }\r\n  }));\r\n\r\nconst days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\nlet Group=null;\r\nlet Presentations = null;\r\n\r\nconst StudentPresentation = (props) => {\r\n    const classes = useStyles();\r\n    Group=props.Group;\r\n    Presentations=Group.presentation\r\n    Presentations.sort((a,b)=>(new Date(a.scheduled_date).getTime()>new Date(b.scheduled_date).getTime())?1:-1)\r\n    if(Group===null){\r\n        return(\r\n            <React.Fragment>\r\n                <CircularProgress />\r\n            </React.Fragment>\r\n        )\r\n    }else{\r\n        if(Presentations.length!==0){\r\n            return(\r\n                <React.Fragment>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h4\">Presentation Details</Typography>\r\n                        <TableContainer\r\n                            style={{ backgroundColor: \"#d3d3d3\" }}\r\n                            className={classes.tableContainer}\r\n                            component={Paper}\r\n                        >\r\n                            <Table\r\n                            className={classes.table}\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                            >\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                    <TableCell align=\"center\">No.</TableCell>\r\n                                    <TableCell align=\"center\">Date</TableCell>\r\n                                    <TableCell align=\"center\">Day</TableCell>\r\n                                    <TableCell align=\"center\">Time</TableCell>\r\n                                    <TableCell align=\"center\">Marks</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Presentations.map((Presentation,index) => (\r\n                                    <TableRow key={Presentation._id}>\r\n                                        <TableCell align=\"center\">{index+1}</TableCell>\r\n                                        <TableCell align=\"center\">{new Date(Presentation.scheduled_date).getDate()}/{new Date(Presentation.scheduled_date).getMonth()+1}/{new Date(Presentation.scheduled_date).getFullYear()}</TableCell>\r\n                                        <TableCell align=\"center\">{days[new Date(Presentation.scheduled_date).getDay()]}</TableCell>\r\n                                        {(new Date(Presentation.scheduled_date).getHours()>12)?(\r\n                                            <TableCell align=\"center\">\r\n                                                {new Date(Presentation.scheduled_date).getHours()-12}:{new Date(Presentation.scheduled_date).getMinutes()} pm \r\n                                            </TableCell>\r\n                                        ):(\r\n                                            <TableCell align=\"center\">\r\n                                                {new Date(Presentation.scheduled_date).getHours()}:{new Date(Presentation.scheduled_date).getMinutes()} am \r\n                                            </TableCell>\r\n                                        )}\r\n                                        {(Presentation.marks===null)?(\r\n                                            <React.Fragment>\r\n                                                {new Date(Presentation.scheduled_date).getTime()>Date.now()?(\r\n                                                    <TableCell align=\"center\">\r\n                                                        Presentation Not conducted\r\n                                                    </TableCell>\r\n                                                ):(\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography style={{fontSize:\"12\"}} color=\"secondary\">\r\n                                                            Presentation missed\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                )}\r\n                                            </React.Fragment>\r\n                                        ):(\r\n                                            <TableCell align=\"center\">\r\n                                                {Presentation.marks}\r\n                                            </TableCell>\r\n                                        )}\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ThemeProvider>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <Typography>\r\n                    No Presentations have been scheduled. Please check later or contact your Faculty\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentPresentation;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Container, CircularProgress } from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport StudentContent from \"./StudentContent\";\r\nimport Profile from \"../Profile\";\r\nimport StudentHomePage from \"./studentHomePage\";\r\nimport StudentCommentPage from \"./StudentCommentPage\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport StudentPresentation from \"./StudentPresentation\";\r\n\r\nlet userInfo = [];\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Container>\r\n          <Box>\r\n            <Typography component={\"span\"}>{children}</Typography>\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    maxWidth: \"100%\",\r\n    marginTop: \"3px\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  // tabs: {\r\n  //   borderRight: `1px solid ${theme.palette.divider}`,\r\n  // },\r\n  TabPanel: {\r\n    //borderLeft:`1px solid ${theme.palette.divider}`,\r\n    display: \"block\"\r\n    //margin:\"1px\",\r\n  },\r\n  vert_tab_grid: {\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  hor_tab_grid: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  large_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.down(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  small_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.up(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nlet Group=null;\r\n\r\nconst StudentWholePage = props => {\r\n  userInfo = props.userInfo;\r\n  const [obtained,setObtained] = React.useState(false)\r\n  const [academicYear,setAcademicYear] = React.useState(\"\")\r\n  const [reqSent,setReqSent] = React.useState(false)\r\n  //console.log(userInfo.name);\r\n\r\n\r\n  function checkData() {\r\n    setReqSent(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers:{\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Group = res.data;\r\n        setObtained(true);\r\n        DueDate = Group.dueDate.split(\"T\")[0];\r\n        if(Group.proposals.length!==0){\r\n          AppliedOn = Group.proposals[0].applied.split(\"T\")[0];\r\n        }\r\n        setAcademicYear(Group.academicYear)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  if(obtained===false && reqSent===false){\r\n    checkData()\r\n  }\r\n  if(obtained===true)\r\n  return (\r\n    <React.Fragment>\r\n      <Profile academicYear={academicYear} userInfo={userInfo} />\r\n      <div\r\n        style={{\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n        }}\r\n        className={classes.small_win_tabs}\r\n      >\r\n        <Grid container className={classes.root}>\r\n          <ThemeProvider theme={theme}>\r\n            <Grid item xs={12} className={classes.hor_tab_grid}>\r\n              <Tabs\r\n                orientation=\"horizontal\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"horizontal tabs\"\r\n                variant=\"fullWidth\"\r\n                //scrollButtons=\"on\"\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n              >\r\n                <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Preferences\"\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Comments\"\r\n                  {...a11yProps(2)}\r\n                />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Presentations\"\r\n                  {...a11yProps(3)}\r\n                />\r\n              </Tabs>\r\n            </Grid>\r\n            {/* <Grid item xs={2} /> */}\r\n          </ThemeProvider>\r\n          <Grid className={classes.TabPanel} item xs={12}>\r\n            <TabPanel value={value} index={0}>\r\n              <StudentHomePage Group={Group} DueDate={DueDate} AppliedOn={AppliedOn}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <StudentContent />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <StudentCommentPage Group={Group} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n              <StudentPresentation Group={Group} />\r\n            </TabPanel>\r\n          </Grid>\r\n          {/* <Grid item xs={1}></Grid> */}\r\n        </Grid>\r\n      </div>\r\n      <div\r\n        style={{\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n        }}\r\n        className={classes.large_win_tabs}\r\n      >\r\n        <Grid style={{ marginTop: \"3px\" }} container className={classes.root}>\r\n          <ThemeProvider theme={theme}>\r\n            <Grid item xs={3} className={classes.vert_tab_grid}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs\"\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n              >\r\n                <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Preferences\"\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Comments\"\r\n                  {...a11yProps(2)}\r\n                />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Presentations\"\r\n                  {...a11yProps(3)}\r\n                />\r\n              </Tabs>\r\n            </Grid>\r\n          </ThemeProvider>\r\n          <Grid className={classes.TabPanel} item xs={9}>\r\n            <TabPanel value={value} index={0}>\r\n              <StudentHomePage Group={Group} DueDate={DueDate} AppliedOn={AppliedOn}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <StudentContent />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <StudentCommentPage Group={Group} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n              <StudentPresentation Group={Group} />\r\n            </TabPanel>\r\n          </Grid>\r\n          {/* <Grid item xs={1}></Grid> */}\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  else{\r\n    return(\r\n      <CircularProgress />\r\n    )\r\n  }\r\n};\r\n\r\nexport default StudentWholePage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport StudentWholePage from \"../components/Student-component/studentWholePage\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\n//import StudentContent from \"../components/Student-component/StudentContent\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"student\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    \r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        //console.log(res.data);\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"NO user\" });\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"access_token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"student\") {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <StudentWholePage userInfo={this.state.user} />\r\n          <footer>\r\n            <Footer />\r\n          </footer>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel : {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float : \"left\",\r\n  }\r\n});\r\n\r\nclass YamiContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      openSuccess : false,\r\n      openFailure : false,\r\n      name:\"\",\r\n      mail: \"\",\r\n      dept: \"Computer Science\"\r\n    };\r\n  }\r\n\r\n  mailHandler = event => {\r\n    this.setState({ mail: event.target.value });\r\n  };\r\n  nameHandler = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  deptHandler = event => {\r\n    this.setState({ dept: event.target.value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const {name, mail, dept } = this.state;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/yami\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        name : name,\r\n        email: mail,\r\n        department: dept\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(response => {\r\n        this.setState({openSuccess:true});\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({openFailure:true});\r\n      });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      this.setState({openFailure:false,openSuccess:false})\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <LoggedNavbar />\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div\r\n            className={classes.paper}\r\n            style={{\r\n              boxShadow:\r\n                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: \"6px\"\r\n            }}\r\n          >\r\n           \r\n            <form\r\n              className={classes.form}\r\n              onSubmit={this.submitHandler}\r\n              noValidate\r\n            >\r\n              <Typography variant=\"h4\" style={{ marginTop:'15px',marginBottom:'15px'}}>\r\n                Create Admin\r\n              </Typography>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin name\"\r\n                value={this.state.name}\r\n                onChange={this.nameHandler}\r\n                autoFocus/>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin email\"\r\n                value={this.state.mail}\r\n                onChange={this.mailHandler}\r\n                />\r\n              <InputLabel\r\n              className = {classes.deptLabel}> Select Department</InputLabel>\r\n              <Select\r\n                value={this.state.dept}\r\n                onChange={this.deptHandler}\r\n                label=\"Department\"\r\n                fullWidth\r\n              >\r\n                <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\r\n                <MenuItem value=\"Information Technology\">Information Technology</MenuItem>\r\n                <MenuItem value=\"Electronics and Telecommunication\">Electronics and Telecommunication</MenuItem>\r\n                <MenuItem value=\"Electronics\">Electronics</MenuItem>\r\n              </Select>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  fontSize: \"18px\",\r\n                  fontWeight: \"bolder\",\r\n                  backgroundColor: \"#1877f2\",\r\n                  marginBottom: \"25px\"\r\n                }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </form>\r\n            <Snackbar open={this.state.openSuccess} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                A new Admin was created successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={this.state.openFailure} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                There was some problem while creating the admin please refresh the page and try again.\r\n              </Alert>\r\n            </Snackbar>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n        \r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(YamiContent);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport YamiContent from \"../components/Yami-component/YamiContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Yami extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"None\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === null) {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"yami\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <YamiContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" exact />;\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, Component} from 'react';\r\nexport const ProjectContext = createContext();\r\n\r\nclass ProjectContextProvider extends Component{\r\n    state = {\r\n            projects:[\r\n                {title:\"project1\",isapproved:true,comment:\"\",id:1},\r\n                {title:\"project2\",isapproved:false,comment:\"\",id:2},\r\n                {title:\"project3\",isapproved:false,comment:\"\",id:3},\r\n                {title:\"project4\",isapproved:false,comment:\"\",id:4},\r\n                {title:\"project5\",isapproved:true,comment:\"\",id:5}\r\n            ]\r\n    }\r\n    Approve = (id) => {\r\n        let projects = [...this.state.projects];\r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.isapproved = !project.isapproved;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    addComment = (id,comment) => {\r\n        let projects = [...this.state.projects];\r\n        \r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.comment = comment;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <ProjectContext.Provider value={{...this.state,Approve: this.Approve,addComment: this.addComment}}>\r\n                {this.props.children}\r\n            </ProjectContext.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ProjectContextProvider;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst ProjectDetails = (project) => {\r\n    // const handleClick = () => {\r\n    //     const pro_to_show = project;\r\n    //     ProjectForm(pro_to_show);\r\n    // } \r\n    return (\r\n            <NavLink to={{pathname:\"/projectform\",aboutProps:{project}}}>\r\n                <div>\r\n                    <label className=\"title\"> Title : {project.project.title}</label>\r\n                    <label className=\"id\"> ID : {project.project.id}</label>\r\n                </div>\r\n            </NavLink>\r\n     );\r\n}\r\n \r\nexport default ProjectDetails;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { ProjectContext } from \"../../context/projectcontext\";\r\nimport ProjectDetails from \"./projectdetails\";\r\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nconst ProjectList = () => {\r\n  const { projects } = useContext(ProjectContext);\r\n  return projects.length ? (\r\n    <div className=\"project-list\">\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Approved</Tab>\r\n          <Tab>Not Approved</Tab>\r\n        </TabList>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? null : (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            );\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            ) : null;\r\n          })}\r\n        </TabPanel>\r\n      </Tabs>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">No projects submitted</div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport \"./FacultyContent.css\";\r\nimport ProjectContextProvider from \"../../context/projectcontext\";\r\nimport ProjectList from \"../verification/projectlist\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\n\r\nconst FacultyContent = props => {\r\n  return (\r\n    <div>\r\n      <LoggedNavbar />\r\n      <ProjectContextProvider>\r\n        <ProjectList />\r\n      </ProjectContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacultyContent;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FacultyContent from \"../components/Faculty-component/FacultyContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"faculty\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"no user\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (\r\n      this.state.user.type === \"ig\" ||\r\n      this.state.user.type === \"pic\"\r\n    ) {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <FacultyContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChangePassword.css\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel: {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float: \"left\"\r\n  }\r\n});\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      user: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      openSuccess: false,\r\n      openFailure :false,\r\n      helptext : \"\",\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"no user\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  pushPassword = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/changePassword\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        newPassword: this.state.newPassword,\r\n        confirmPassword: this.state.confirmPassword\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({openFailure : true});\r\n      });\r\n  };\r\n\r\n  newpasswordHandler = e => {\r\n    this.setState({ newPassword: e.target.value });\r\n  };\r\n  confirmpasswordHandler = e => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(this.state.newPassword !== this.state.confirmPassword){\r\n      this.setState({helptext : \"Two fields Doesn't match\"}) ;\r\n    }else if(this.state.newPassword.length < 8){\r\n      this.setState({helptext : \"Please Enter a Password with length greater than 8\"});\r\n    }\r\n    else{\r\n       this.pushPassword(); \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if(this.state.openSuccess){\r\n        this.setState({openSuccess: false, user: \"no user\"});\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n      else if(this.state.openFailure){\r\n        this.setState({openFailure : false});\r\n      }\r\n    };\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user === \"no user\") {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div\r\n              className={classes.paper}\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"6px\"\r\n              }}\r\n            >\r\n              <Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  Your Password was changed successfully Please click anywhere\r\n                  to login again\r\n                </Alert>\r\n              </Snackbar>\r\n              <Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                  There was some problem while changing your password please refresh the page and try again\r\n                </Alert>\r\n              </Snackbar>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={this.handleSubmit}\r\n                noValidate\r\n              >\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  style={{ marginTop: \"15px\", marginBottom: \"15px\" }}\r\n                >\r\n                  Change Password\r\n                </Typography>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  value={this.state.newPassword}\r\n                  onChange={this.newpasswordHandler}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.confirmpasswordHandler}\r\n                />\r\n                <Typography variant=\"subtitle2\" color=\"error\">\r\n                  {this.state.helptext}\r\n                </Typography>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bolder\",\r\n                    backgroundColor: \"#1877f2\",\r\n                    marginBottom: \"25px\"\r\n                  }}\r\n                >\r\n                  Change Password\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ChangePassword);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <React.Fragment>\r\n            <h1>404 Page Not Found</h1>\r\n            <p>The page you were looking for was not found </p>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\",\r\n    margin: theme.spacing(2)\r\n  },\r\n  backButton: {},\r\n  buttonContainer: {\r\n    padding: \"auto\",\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n          <Link\r\n            to=\"/\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button color=\"inherit\" variant=\"contained\">\r\n              <ArrowBackRoundedIcon />\r\n            </Button>\r\n          </Link>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typo1: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"Medium\"\r\n  },\r\n  typo2: {\r\n    textAllign: \"right\",\r\n    fontWeight: \"Light\"\r\n  }\r\n}));\r\n\r\nconst THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst AdminCommentPage = props => {\r\n  const classes = useStyles();\r\n  const comments = props.Comments;\r\n  //console.log(comments);\r\n  if (comments.length === 0) {\r\n    console.log(comments.length);\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h4\">No comments have been added</Typography>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <ThemeProvider theme={THEME}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <Paper\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0,0,0,.1), 0 8px 16px rgba(0,0,0,.1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"0px\",\r\n                marginTop: \"50px\",\r\n                marginBottom: \"50px\"\r\n              }}\r\n            >\r\n              <Paper style={{ borderRadius: \"0\" }}>\r\n                {/* <Typography style={{fontWeight:\"bold\"}} variant=\"h4\">\r\n                            Your Previous Comments\r\n                        </Typography> */}\r\n                <Typography variant=\"h3\" style={{ fontWeight: \"500\" }}>\r\n                  Previous Comments\r\n                </Typography>\r\n              </Paper>\r\n              {comments\r\n                .slice(0)\r\n                .reverse()\r\n                .map(comment => {\r\n                  let d = new Date(comment.time);\r\n                  //comment.time = new Date(d.getTime() + 330*60000);\r\n                  // console.log(d)\r\n                  // console.log(comment.time)\r\n                  //let author = comment.author;\r\n                  // if(author.includes(\"admin\"))\r\n                  return (\r\n                    <React.Fragment key={comment._id}>\r\n                      <Paper style={{ borderRadius: \"0\" }}>\r\n                        <Grid\r\n                          container\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"5px\"\r\n                          }}\r\n                          spacing={2}\r\n                        >\r\n                          <Grid\r\n                            className={classes.typo1}\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            md={8}\r\n                          >\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 16,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Author : {comment.author}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            {/* <Typography style={{fontSize:\"12px\",fontWeight:\"300\"}}>\r\n                                                Time : {comment.time}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Roboto\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Date : {d.toString().substr(4, 12)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Helvetica Neue\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Time : {d.toString().slice(15, 24)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo1} item xs={12}>\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 18,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Comment : {comment.text}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </React.Fragment>\r\n                  );\r\n                  // }else{return null}\r\n                })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AdminCommentPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../components/ToUpper\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport AdminCommentPage from \"../components/Admin-component/AdminCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  }\r\n});\r\n\r\n//axios get Request\r\n\r\nclass ControlledExpansionPanels extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      approved: false,\r\n      openSuccess: false,\r\n      openFailure: false\r\n    };\r\n  }\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState({\r\n      comment: comment\r\n    });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  //axios request to send comments\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          console.log(response);\r\n          this.setState({\r\n            adData: null,\r\n            comment: \"\"\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        console.log(Groups[3].comments);\r\n\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //axios post request to \"/approve\"\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n\r\n    //call axios\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Proposal1 = Proposals[0];\r\n                let Proposal2 = Proposals[1];\r\n                let Proposal3 = Proposals[2];\r\n                console.log(\r\n                  Proposal1.approval,\r\n                  Proposal2.approval,\r\n                  Proposal3.approval\r\n                );\r\n                let Comments = group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      let appliedDate=new Date(proposal.applied)\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                             <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Detailed Statement of Problem:&nbsp;&nbsp;</b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Internal Agency/External Agency/CTL/Mastek/or any other:&nbsp;&nbsp;</b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Methods/Technique/Algorithm proposed:&nbsp;&nbsp;</b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Software/Hardware Requirements:&nbsp;&nbsp;</b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/{appliedDate.getMonth()+1}/{appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Attached Print:&nbsp;&nbsp;</b>\r\n                                  {proposal.attachPrints}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `http://localhost:8000/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {!proposal.approval.admin &&\r\n                                !Proposal1.approval.hod &&\r\n                                !Proposal2.approval.hod &&\r\n                                !Proposal3.approval.hod ? (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    onClick={() => {\r\n                                      this.handleApprove(pid, Gid);\r\n                                    }}\r\n                                  >\r\n                                    Approve Proposal\r\n                                  </Button>\r\n                                ) : (\r\n                                  <div>\r\n                                    {proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        This Proposal is Selected\r\n                                      </Button>\r\n                                    ) : proposal.approval.admin ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Waiting For Hod Approval\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved Another Proposal\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <Grid container className={classes.comment}>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comTitle}\r\n                      >\r\n                        <Typography>\r\n                          <b>Add Comments:</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                          className={classes.comField}\r\n                          variant=\"outlined\"\r\n                          component={\"span\"}\r\n                          multiline\r\n                          inputProps={{ style: { fontSize: 14 } }}\r\n                          rows={3}\r\n                          id=\"comment\"\r\n                          name=\"comment\"\r\n                          type=\"text\"\r\n                          value={this.state.comment}\r\n                          onChange={this.commentHandler}\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comButton}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            this.sendComment(Gid);\r\n                          }}\r\n                        >\r\n                          Send Comment\r\n                        </Button>\r\n                        <Snackbar\r\n                          open={this.state.openSuccess}\r\n                          autoHideDuration={6000}\r\n                          onClose={this.handleClose}\r\n                        >\r\n                          <Alert onClose={this.handleClose} severity=\"success\">\r\n                            Successful comment\r\n                          </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar\r\n                          open={this.state.openFailure}\r\n                          autoHideDuration={6000}\r\n                          onClose={this.handleClose}\r\n                        >\r\n                          <Alert onClose={this.handleClose} severity=\"error\">\r\n                            Unsuccessful. Comment cannot be empty\r\n                          </Alert>\r\n                        </Snackbar>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={12}>\r\n                        <AdminCommentPage Comments={Comments} />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n\r\n    // return (\r\n    //   <div className={classes.root}>\r\n\r\n    //     <Accordion\r\n    //       expanded={expanded === \"panel1\"}\r\n    //       onChange={this.handleChange(\"panel1\")}\r\n    //     >\r\n    //       <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n    //         <Typography className={classes.heading}>\r\n    //           General settings\r\n    //         </Typography>\r\n    //         <Typography className={classes.secondaryHeading}>\r\n    //           I am an expansion panel\r\n    //         </Typography>\r\n    //       </AccordionSummary>\r\n    //       <AccordionDetails>\r\n    //         <Typography>\r\n    //           Nulla facilisi. Phasellus sollicitudin nulla et quam mattis\r\n    //           feugiat. Aliquam eget maximus est, id dignissim quam.\r\n    //         </Typography>\r\n    //       </AccordionDetails>\r\n    //     </Accordion>\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\nControlledExpansionPanels.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ControlledExpansionPanels);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  Box,\r\n  useTheme,\r\n  AccordionSummary,\r\n  Grid,\r\n  Button,\r\n  Accordion,\r\n  AccordionDetails\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst HodProjectList = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n  // console.log(props);\r\n  const Groups = props.Groups;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChangeT}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n          <Tab label=\"Approved by Project Coordinator\" {...a11yProps(1)} />\r\n          <Tab label=\"Pending Approval\" {...a11yProps(2)} />\r\n          <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            // console.log(Group);\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && pref1HodApproval) ||\r\n              (pref2AdminApproval && pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && !pref1HodApproval) ||\r\n              (pref2AdminApproval && !pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                !pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1Approval = false;\r\n            let pref2Approval = false;\r\n            let pref3Approval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1Approval = pref1.approval.admin;\r\n              pref2Approval = pref2.approval.admin;\r\n              pref3Approval = pref3.approval.admin;\r\n            }\r\n\r\n            if (\r\n              !pref1Approval &&\r\n              !pref2Approval &&\r\n              !pref3Approval &&\r\n              Group.proposals.length !== 0\r\n            ) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n\r\n            if (Group.proposals.length === 0) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid\r\n                      container\r\n                      spacing={3}\r\n                      style={{ width: \"100%\", padding: \"auto\" }}\r\n                    >\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Typography>\r\n                          <b>Due Date for Submitting Proposals:</b>\r\n                          &nbsp;&nbsp;\r\n                          {DueDate}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </React.Fragment>\r\n    // <Typography>HELLO</Typography>\r\n  );\r\n};\r\n\r\nexport default HodProjectList;\r\n","import React, { Component } from \"react\";\r\nimport { withStyles, LinearProgress } from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport HodProjectList from \"./HodProjectList\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\n\r\nlet userInfo = [];\r\nlet Groups = null;\r\nlet academicYear=\"\"\r\nlet Ad = null;\r\nlet filled = false;\r\n\r\nclass HodContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      adData: null,\r\n      filled\r\n    };\r\n  }\r\n\r\n  getGroup = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        academicYear=Groups[0].acadYear\r\n        //console.log(academicYear);\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.adData === null) {\r\n      this.getGroup();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n    //console.log(userInfo);\r\n    if (this.state.filled) {\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n              <HodProjectList Groups={Groups} Designation={userInfo.type}/>\r\n            </div>\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(HodContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport HodContent from \"../components/Hod-component/HodContent\";\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"hod\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    //groups = this.state.Groups;\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"hod\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <LoggedNavbar />\r\n            <HodContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, Typography, Grid, Paper, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo1:{\r\n        textAlign:\"left\",\r\n        fontWeight:\"Medium\"\r\n    },\r\n    typo2:{\r\n        textAllign:\"right\",\r\n        fontWeight:\"Light\"\r\n    }\r\n}))\r\n\r\nconst THEME = createMuiTheme(\r\n    {\r\n        typography: {\r\n          fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n          ].join(','),\r\n        },\r\n    }\r\n)\r\n\r\nconst HodCommentPage = (props) => {\r\n    const classes = useStyles();\r\n    const comments=props.Comments;\r\n    //console.log(comments);\r\n    if(comments.length === 0){\r\n        console.log(comments.length);\r\n        return(\r\n            <React.Fragment>\r\n                <Typography variant=\"h4\">No comments have been added</Typography>\r\n            </React.Fragment>\r\n        )\r\n    }else{\r\n        return(\r\n            <ThemeProvider theme={THEME}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                <Paper style={{boxShadow:\"0 2px 4px rgba(0,0,0,.1), 0 8px 16px rgba(0,0,0,.1)\",backgroundColor:\"#fff\",borderRadius:\"0px\", marginTop : \"50px\",marginBottom:\"50px\"}}>\r\n                    <Paper style={{borderRadius:\"0\"}}>\r\n                        {/* <Typography style={{fontWeight:\"bold\"}} variant=\"h4\">\r\n                            Your Previous Comments\r\n                        </Typography> */}\r\n                        <Typography variant=\"h3\" style={{fontWeight:\"500\"}}>\r\n                            Previous Comments\r\n                        </Typography>\r\n                    </Paper>\r\n                    {comments.slice(0).reverse().map(comment => {\r\n                        let d = new Date(comment.time);\r\n                        //comment.time = new Date(d.getTime() + 330*60000);\r\n                        // console.log(d)\r\n                        // console.log(comment.time)\r\n                        // let author=comment.author;\r\n                        // if(author.includes(\"admin\"))\r\n                        return(\r\n                            <React.Fragment key={comment._id}>\r\n                                <Paper style={{borderRadius:\"0\"}}>\r\n                                    <Grid container style={{margin:\"auto\",marginTop:\"5px\",marginBottom:\"5px\"}} spacing={2}>\r\n                                        <Grid className={classes.typo1} item xs={8}>\r\n                                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                                            <Typography style={{fontWeight:\"400\",fontSize:20,fontStyle:\"Arial\"}}>\r\n                                                Author : {comment.author}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid className={classes.typo2} item xs={2}>\r\n                                            {/* <Typography style={{fontSize:\"12px\",fontWeight:\"300\"}}>\r\n                                                Time : {comment.time}\r\n                                            </Typography> */}\r\n                                            <Typography style={{fontWeight:\"200\",fontSize:14,fontStyle:\"Roboto\"}}>\r\n                                                Date : {d.toString().substr(4,12)}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid className={classes.typo2} item xs={2}>\r\n                                            <Typography style={{fontWeight:\"200\",fontSize:14,fontStyle:\"Helvetica Neue\"}}>\r\n                                                Time : {d.toString().slice(15,24)}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid className={classes.typo1} item xs={12}>\r\n                                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                                            <Typography style={{fontWeight:\"400\",fontSize:20,fontStyle:\"Arial\"}}>\r\n                                                Comment : {comment.text}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        \r\n                                    </Grid>\r\n                                </Paper>\r\n                            </React.Fragment>\r\n                        );\r\n                    // }else{return null}\r\n                    })}\r\n                </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n \r\nexport default HodCommentPage;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField, TableContainer, Table, TableHead, TableRow, TableCell, ThemeProvider, Paper, TableBody, createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport HodCommentPage from \"./HodCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n});\r\n\r\nconst days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false,\r\n    };\r\n  }\r\n  \r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState(\r\n      {\r\n        comment: comment\r\n      },\r\n      // function () {\r\n      //   console.log(this.state.comment);\r\n      // }\r\n    );\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    })\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if(comment===\"\"){\r\n      this.setState({\r\n        openFailure:true\r\n      })\r\n    }else{\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n           Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n          \r\n        }\r\n      })\r\n      .then(response => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        console.log(response);\r\n        this.setState({\r\n          comment:\"\",\r\n          adData: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n    let Presentations = Group.presentation\r\n    Presentations.sort((a,b)=>(new Date(a.scheduled_date).getTime()>new Date(b.scheduled_date).getTime())?1:-1)\r\n\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Comments =group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      let appliedDate = new Date(proposal.applied)\r\n                      return (\r\n                        <Accordion key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Detailed Statement of Problem:&nbsp;&nbsp;</b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Internal Agency/External Agency/CTL/Mastek/or any other:&nbsp;&nbsp;</b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Methods/Technique/Algorithm proposed:&nbsp;&nbsp;</b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Software/Hardware Requirements:&nbsp;&nbsp;</b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/{appliedDate.getMonth()+1}/{appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Attached Print:&nbsp;&nbsp;</b>\r\n                                  {proposal.attachPrints}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `http://localhost:8000/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    {(Presentations.length!==0)?(\r\n                        <React.Fragment>\r\n                          <ThemeProvider theme={theme}>\r\n                              <Typography style={{marginTop:\"20px\"}} variant=\"h4\">Presentation Details</Typography>\r\n                              <TableContainer\r\n                                  style={{ backgroundColor: \"#d3d3d3\" }}\r\n                                  className={classes.tableContainer}\r\n                                  component={Paper}\r\n                              >\r\n                                  <Table\r\n                                  className={classes.table}\r\n                                  size=\"small\"\r\n                                  aria-label=\"a dense table\"\r\n                                  >\r\n                                      <TableHead>\r\n                                          <TableRow>\r\n                                          <TableCell align=\"center\">No.</TableCell>\r\n                                          <TableCell align=\"center\">Date</TableCell>\r\n                                          <TableCell align=\"center\">Day</TableCell>\r\n                                          <TableCell align=\"center\">Time</TableCell>\r\n                                          <TableCell align=\"center\">Marks</TableCell>\r\n                                          </TableRow>\r\n                                      </TableHead>\r\n                                      <TableBody>\r\n                                          {Presentations.map((Presentation,index) => (\r\n                                          <TableRow key={Presentation._id}>\r\n                                              <TableCell align=\"center\">{index+1}</TableCell>\r\n                                              <TableCell align=\"center\">{new Date(Presentation.scheduled_date).getDate()}/{new Date(Presentation.scheduled_date).getMonth()+1}/{new Date(Presentation.scheduled_date).getFullYear()}</TableCell>\r\n                                              <TableCell align=\"center\">{days[new Date(Presentation.scheduled_date).getDay()]}</TableCell>\r\n                                              {(new Date(Presentation.scheduled_date).getHours()>12)?(\r\n                                                  <TableCell align=\"center\">\r\n                                                      {new Date(Presentation.scheduled_date).getHours()-12}:{new Date(Presentation.scheduled_date).getMinutes()} pm \r\n                                                  </TableCell>\r\n                                              ):(\r\n                                                  <TableCell align=\"center\">\r\n                                                      {new Date(Presentation.scheduled_date).getHours()}:{new Date(Presentation.scheduled_date).getMinutes()} am \r\n                                                  </TableCell>\r\n                                              )}\r\n                                              {(Presentation.marks===null)?(\r\n                                                  <React.Fragment>\r\n                                                      {new Date(Presentation.scheduled_date).getTime()>Date.now()?(\r\n                                                          <TableCell align=\"center\">\r\n                                                              Presentation Not conducted\r\n                                                          </TableCell>\r\n                                                      ):(\r\n                                                          <TableCell align=\"center\">\r\n                                                              <Typography style={{fontSize:\"12\"}} color=\"secondary\">\r\n                                                                  Presentation missed\r\n                                                              </Typography>\r\n                                                          </TableCell>\r\n                                                      )}\r\n                                                  </React.Fragment>\r\n                                              ):(\r\n                                                  <TableCell align=\"center\">\r\n                                                      {Presentation.marks}\r\n                                                  </TableCell>\r\n                                              )}\r\n                                          </TableRow>\r\n                                          ))}\r\n                                      </TableBody>\r\n                                  </Table>\r\n                              </TableContainer>\r\n                          </ThemeProvider>\r\n                        </React.Fragment>\r\n                    ):(\r\n                        <React.Fragment>\r\n                          <Typography style={{marginTop:\"20px\"}} variant=\"h4\">\r\n                            Presentations\r\n                          </Typography>\r\n                          <Typography>\r\n                              No Presentations have been scheduled.\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                    )}\r\n                    <Grid container className={classes.comment}>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comTitle}\r\n                      >\r\n                        <Typography>\r\n                          <b>Add Comments:</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                          className={classes.comField}\r\n                          variant=\"outlined\"\r\n                          component={\"span\"}\r\n                          multiline\r\n                          inputProps={{ style: { fontSize: 14 } }}\r\n                          rows={3}\r\n                          id=\"comment\"\r\n                          name=\"comment\"\r\n                          type=\"text\"\r\n                          value={this.state.comment}\r\n                          onChange={this.commentHandler}\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comButton}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            this.sendComment(Gid);\r\n                          }}\r\n                        >\r\n                          Send Comment\r\n                        </Button>\r\n                        <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Successful comment\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Unsuccessful. Comment cannot be empty\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={12}>\r\n                        <HodCommentPage Comments={Comments}/>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from 'react'\r\nimport SideMenu from './SideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {Card,Button,CircularProgress, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\"\r\n\r\nlet department=null\r\nlet Gname=null\r\nlet Groupid=null\r\nlet deleteMemberEmail=null\r\nlet groupData=null\r\n\r\nconst useStyles = (theme => ({\r\n  root: {\r\n    width: '100%',\r\n    \r\n  },\r\n   mainAccor:{\r\n    color:\"#303030\",\r\n    margin:'auto' ,\r\n  },\r\n  mainAccorContainer:{\r\n    width:\"80%\",\r\n    margin:\"2px auto\",\r\n    marginTop:\"30px\"\r\n\r\n  },\r\n  memberHolder:{\r\n    width:\"10%\",\r\n    backgroundColor:\"#909090\"\r\n  },\r\n  groupCard:{\r\n    width:\"100%\",\r\n    padding:\"8px 0px\",\r\n    marginTop:\"2px\",\r\n    textAlign:\"left\",\r\n  },\r\n  accorStyle:{\r\n    backgroundColor:\"#d3d3d3\"\r\n  },\r\n  heading:{\r\n    fontWeight:\"bold\"\r\n  },\r\n  deleteIconStyle:{\r\n    cursor:\"pointer\",\r\n    \"&:hover\": {\r\n      color: 'red'\r\n    }\r\n  },\r\n  presCard:{\r\n    width:\"100%\",\r\n    padding:\"8px 0px\",\r\n    marginTop:\"2px\",\r\n    borderRadius:\"0px\",\r\n    textAlign:\"left\",\r\n  }\r\n  }));\r\n\r\nclass AdminGroupsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      groupDetails:null,\r\n      deleteMemberOpen:false,\r\n      addMemberOpen:false,\r\n      memberName:\"\",\r\n      memberEmail:\"\",\r\n      memberRollno:\"\",\r\n      deleteProposalsOpen:false,\r\n      };\r\n  }\r\n\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        groupData=res.data\r\n        this.setState({\r\n          groupDetails:res.data\r\n          });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n      \r\n  }\r\n\r\n  //DELETE MEMBERS---------------------------------------------\r\n  handleDeleteMemberDialogOpen=(id,email)=>{  \r\n    deleteMemberEmail=email\r\n    Groupid=id\r\n    console.log(deleteMemberEmail,Groupid)\r\n     this.setState({\r\n      deleteMemberOpen:true\r\n    })\r\n  }\r\n  handleDeleteMemberDialogClose=()=>{\r\n    this.setState({\r\n      deleteMemberOpen:false\r\n    })\r\n  }\r\n  handleDeleteMember=(gid,email)=>{\r\n    this.handleDeleteMemberDialogClose()\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid:gid,\r\n        email:email\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n    .then(res => {\r\n      console.log(\"Member deleted!!!!\") \r\n      deleteMemberEmail=null\r\n      Groupid=null\r\n      window.location.reload(false);\r\n    })\r\n  \r\n    .catch(err => {\r\n      console.log(err);\r\n      });\r\n  }\r\n\r\n//DELETE PROPOSALS SECTION--------------------------------\r\nhandleDeleteProposalsDialogOpen(e,gid){  \r\n    e.stopPropagation();\r\n    e.preventDefault()\r\n    Groupid=gid\r\n    console.log(Groupid)\r\n  this.setState({\r\n    deleteProposalsOpen:true\r\n  })\r\n}\r\nhandleDeleteProposalsDialogClose=()=>{\r\n  this.setState({\r\n    deleteProposalsOpen:false\r\n  })\r\n}\r\nhandleDeleteProposals=(gid)=>{\r\n  this.handleDeleteProposalsDialogClose()\r\n  axios({\r\n    method: \"post\",\r\n    url: SERVER_URL + \"/deleteProposal\",\r\n    credentials: \"include\",\r\n    withCredentials: true,\r\n    data: qs.stringify({\r\n      gid:gid,\r\n      }),\r\n    headers: {\r\n      \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n      Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n    }\r\n  })\r\n  .then(res => {\r\n    console.log(\"Proposals deleted!!!!\")\r\n    Groupid=null\r\n    window.location.reload(false);\r\n  })\r\n\r\n  .catch(err => {\r\n    console.log(err);\r\n    });\r\n}  \r\n\r\n//ADD MEMBER SECTION ------------------------------------\r\nhandleAddMemberDialogOpen=(gid,dept,gname)=>{  \r\n  Groupid=gid\r\n  department=dept\r\n  Gname=gname\r\n  console.log(Groupid,department,Gname)\r\n  this.setState({\r\n    addMemberOpen:true\r\n  })\r\n}\r\nhandleAddMemberDialogClose=()=>{\r\n  this.setState({\r\n    addMemberOpen:false\r\n  })\r\n}\r\n\r\nhandleMemberNameChange = (e) => {\r\n  this.setState({\r\n    memberName:e.target.value\r\n  })\r\n  }\r\n  \r\n  handleMemberEmailChange = (e) => {\r\n  this.setState({\r\n    memberEmail:e.target.value\r\n  })\r\n  }\r\n  handleMemberRollnoChange = (e) => {\r\n    this.setState({\r\n      memberRollno:e.target.value\r\n    })\r\n    }\r\n\r\n  handleAddMember=(id,department,groupName)=>{\r\n    console.log(id,this.state.memberName,this.state.memberRollno,this.state.memberEmail,department,groupName)\r\n    if(this.state.memberName===\"\" || this.state.memberEmail===\"\" || this.state.memberRollno===\"\"){\r\n      alert(\"Member name,email or rollno cannot be empty\")\r\n    }else{\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addmember\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id:id,\r\n          name:this.state.memberName,\r\n          email:this.state.memberEmail,\r\n          rollno:this.state.memberRollno,\r\n          department:department,\r\n          groupName:groupName\r\n          \r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"Member Added Successfully!!!!!\")\r\n        Groupid=null\r\n        department=null\r\n        Gname=null\r\n        this.setState({\r\n          memberEmail:'',\r\n          memberRollno:\"\",\r\n          memberName:\"\",\r\n          addMemberOpen:false\r\n        })\r\n       \r\n        window.location.reload(false);\r\n      })\r\n  \r\n      .catch(err => {\r\n        alert(\"Member not added\")\r\n        this.setState({\r\n          addHodOpen:false\r\n        })\r\n        console.log(err);\r\n        });\r\n    }\r\n  }  \r\n\r\n  handleChildClick=(e)=> {\r\n    e.stopPropagation();\r\n\r\n    console.log('handleChildClick');\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    if (this.state.groupDetails === null){\r\n      this.checkData();\r\n    } \r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <React.Fragment>\r\n         <SideMenu/>\r\n\r\n        {/* Dialog box for delete MEMBER confirmation*/}\r\n       <div>\r\n       <Dialog\r\n         open={this.state.deleteMemberOpen}\r\n         onClose={this.handleDeleteMemberDialogClose}\r\n         aria-labelledby=\"alert-dialog-title\"\r\n         aria-describedby=\"alert-dialog-description\"\r\n       >\r\n         <DialogTitle id=\"alert-dialog-title\">{\"Delete Member\"}</DialogTitle>\r\n         <DialogContent>\r\n           <DialogContentText id=\"alert-dialog-description\">\r\n             Are you sure you want to delete this Member? You need to assign another student after deleting this one\r\n           </DialogContentText>\r\n         </DialogContent>\r\n         <DialogActions>\r\n           <Button onClick={this.handleDeleteMemberDialogClose} color=\"primary\">\r\n             Cancel\r\n           </Button>\r\n           <Button onClick={()=>this.handleDeleteMember(Groupid,deleteMemberEmail)} color=\"primary\" >\r\n             Delete\r\n           </Button>\r\n         </DialogActions>\r\n       </Dialog>\r\n     </div> \r\n\r\n     {/*------------------------ ADD MEMBER DIALOG ---------------------*/}\r\n     <div>\r\n     <Dialog open={this.state.addMemberOpen} onClose={()=>this.handleAddMemberDialogClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add Member</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please add name,email and Rollno of Student\r\n          </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"MemberName\"\r\n              label=\"Member Name\"\r\n              type=\"text\"\r\n              value={this.state.memberName}\r\n              onChange={this.handleMemberNameChange}\r\n              fullWidth\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"MemberEmail\"\r\n              label=\"Member Email\"\r\n              type=\"text\"\r\n              value={this.state.memberEmail}\r\n              onChange={this.handleMemberEmailChange}\r\n              fullWidth\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"MemberRoll\"\r\n              label=\"Member Roll\"\r\n              type=\"text\"\r\n              value={this.state.memberRollno}\r\n              onChange={this.handleMemberRollnoChange}\r\n              fullWidth\r\n              required\r\n            />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleAddMemberDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={()=>this.handleAddMember(Groupid,department,Gname)} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </div>\r\n    \r\n    {/* -----------------DELETE PROPOSALS DIALOG---------------------- */}\r\n    <div>\r\n       <Dialog\r\n         open={this.state.deleteProposalsOpen}\r\n         onClose={this.handleDeleteProposalsDialogClose}\r\n         aria-labelledby=\"alert-dialog-title\"\r\n         aria-describedby=\"alert-dialog-description\"\r\n       >\r\n         <DialogTitle id=\"alert-dialog-title\">{\"Delete Proposals\"}</DialogTitle>\r\n         <DialogContent>\r\n           <DialogContentText id=\"alert-dialog-description\">\r\n             Are you sure you want to delete Submitted Proposals? If you delete the Proposals then student will have to fill the proposals again\r\n           </DialogContentText>\r\n         </DialogContent>\r\n         <DialogActions>\r\n           <Button onClick={this.handleDeleteProposalsDialogClose} color=\"primary\">\r\n             Cancel\r\n           </Button>\r\n           <Button onClick={()=>this.handleDeleteProposals(Groupid)} color=\"primary\" >\r\n             Delete\r\n           </Button>\r\n         </DialogActions>\r\n       </Dialog>\r\n     </div> \r\n\r\n\r\n         \r\n    {/* -----------------------MEMBER ACCORDION------------------------*/}\r\n    {groupData?<div className={classes.mainAccorContainer}>\r\n    <div><Typography variant=\"h2\" style={{marginBottom:\"30px\"}}>Manage Groups</Typography></div>\r\n    {groupData.map(group=>{\r\n      let proposal1Stat=null\r\n      let proposal2Stat=null\r\n      let proposal3Stat=null\r\n        if(group.proposals.length===3){\r\n          proposal1Stat = group.proposals[0].approval.admin\r\n          proposal2Stat = group.proposals[1].approval.admin\r\n          proposal3Stat = group.proposals[2].approval.admin\r\n          }\r\n          \r\n          let gid = group.id\r\n          let dept = group.department\r\n          let gname = group.name\r\n        return <Accordion className={classes.mainAccor}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}><b>{toFirstCharUppercase(group.name)}</b></Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <React.Fragment>\r\n       \r\n      {/* MEMBERS ACCORDON */}\r\n      <div className={classes.root}>\r\n      <Accordion className={classes.accorStyle}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Members</Typography>\r\n          </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div style={{width:\"100%\"}}>\r\n         <Card className={classes.groupCard}>\r\n           <Grid container>\r\n             <Grid item xs={1}></Grid>\r\n             <Grid item xs={3}><Typography><b>Name</b></Typography></Grid>\r\n             <Grid item xs={3}><Typography><b>Email</b></Typography></Grid>\r\n             <Grid item xs={2}><Typography><b>Rollno</b></Typography></Grid>\r\n             <Grid item xs={2}>{group.members.length < 3 ?<Button onClick={()=>this.handleAddMemberDialogOpen(gid,dept,gname)} variant=\"contained\" color=\"primary\">Add Member</Button>:null}</Grid>\r\n           </Grid>\r\n           </Card>\r\n          {group.members.map(member=>{\r\n            let dmemberEmail=member.email\r\n            return<Card className={classes.groupCard}>\r\n           <Grid container>\r\n             <Grid item xs={1}></Grid>\r\n             <Grid item xs={3}><Typography>{member.name}</Typography></Grid>\r\n             <Grid item xs={3}><Typography>{member.email}</Typography></Grid>\r\n             <Grid item xs={2}><Typography>{member.rollno}</Typography></Grid>\r\n             <Grid item xs={2}><DeleteIcon className={classes.deleteIconStyle} onClick={()=>this.handleDeleteMemberDialogOpen(gid,dmemberEmail)}/></Grid>\r\n           </Grid>\r\n           </Card>\r\n            })}\r\n          </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n\r\n      {/* PROPOSAL ACCORDION */}\r\n      <Accordion className={classes.accorStyle}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Proposals</Typography>\r\n          {group.proposals.length!==0 && !proposal1Stat && !proposal2Stat && !proposal3Stat ?<Button onClick={(e) => {this.handleDeleteProposalsDialogOpen(e, gid)}} variant=\"outlined\" color=\"primary\">Delete All Proposals</Button>:null}\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div className={classes.root}>\r\n        {group.proposals.length===3?group.proposals.map((proposal,index)=>{\r\n          let approval = proposal.approval;\r\n          let pid = proposal._id;\r\n             \r\n        return(<Accordion style={{textAlign:\"left\"}} >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Proposal {index+1}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <Grid container\r\n          className={classes.content}\r\n          spacing={1}\r\n          >\r\n          <Grid item xs={12}>\r\n           <Typography>\r\n           <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n            {proposal.title}\r\n            </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Typography>\r\n            <b>Detailed Statement of Problem:&nbsp;&nbsp;</b>\r\n               {proposal.details}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n            <Typography>\r\n            <b>Internal Agency/External Agency/CTL/Mastek/or any other:&nbsp;&nbsp;</b>\r\n               {proposal.agency}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>\r\n                  <b>Methods/Technique/Algorithm proposed:&nbsp;&nbsp;</b>\r\n                  {proposal.method}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>\r\n                  <b>Software/Hardware Requirements:&nbsp;&nbsp;</b>\r\n                  {proposal.requirements}\r\n                </Typography>\r\n              </Grid>\r\n               <Grid item xs={12}>\r\n                <Typography>\r\n                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                  {proposal.specialization}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>\r\n                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                  {proposal.result}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>\r\n                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                  {/* {proposal.applied.split(\"T\")[0]} */}\r\n                  {proposal.applied.substr(0, 10)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>\r\n                  <b>Attached Print:&nbsp;&nbsp;</b>\r\n                  {proposal.attachPrints}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {approval.admin ? (\r\n                  <Typography>\r\n                    <b>Admin approval status:</b>Approved\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography>\r\n                    <b>Admin approval status:</b>not approved\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {approval.hod ? (\r\n                  <Typography>\r\n                    <b>HOD approval status:</b>Approved\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography>\r\n                    <b>HOD approval status:</b>not approved\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    window.open(\r\n                      `http://localhost:8000/${proposal.attachPrints}`\r\n                    );\r\n                  }}\r\n                >\r\n                  Show Uploaded Document\r\n                </Button>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                style={{ textAlign: \"right\" }}\r\n              >\r\n                \r\n              </Grid>\r\n            </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>)\r\n        }):<Typography>Proposals Not filled yet</Typography>}\r\n\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n\r\n      {/* PRESENTATION ACCORDION */}\r\n      <Accordion className={classes.accorStyle}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3a-content\"\r\n          id=\"panel3a-header\"\r\n        >\r\n          <Typography className={classes.heading}>Presentation</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div style={{width:\"100%\"}}>\r\n        <Card className={classes.presCard}>\r\n              <Grid container>\r\n                <Grid item xs={1}></Grid>\r\n                <Grid item xs={3}>Presentation</Grid>\r\n                <Grid item xs={3}>Date</Grid>\r\n                <Grid item xs={2}>Time</Grid>\r\n                <Grid item xs={3}>Marks</Grid>\r\n                </Grid>\r\n            </Card>\r\n          {group.presentation.map((pres,index)=>{\r\n            return<Card className={classes.presCard}>\r\n              <Grid container>\r\n              <Grid item xs={1}></Grid>\r\n                <Grid item xs={3}>Presentation {index+1}</Grid>\r\n                <Grid item xs={3}>{pres.scheduled_date.split(\"T\")[0]}</Grid>\r\n                <Grid item xs={2}>{pres.scheduled_date.slice(11,16)}</Grid>\r\n                {pres.marks===null?<Grid item xs={3}>Not assigned</Grid>:<Grid item xs={3}>{pres.marks}</Grid>}\r\n              </Grid>\r\n            </Card>\r\n          })}\r\n          </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n      </React.Fragment> \r\n        </AccordionDetails>\r\n        </Accordion>\r\n        })}</div>:<LinearProgress/>}\r\n        \r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminGroupsPage);\r\n","import React, { Component } from 'react'\r\nimport SideMenu from './SideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {withStyles} from \"@material-ui/core\"\r\nimport {Card,Button,CircularProgress, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField } from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nlet dguideId=null\r\nlet dguideEmail=null\r\nlet dguideName=null\r\nlet checkHod=false\r\nlet dHodId=false\r\n\r\nconst useStyles = (theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  accorStyle:{\r\n    width:\"80%\",\r\n    margin:\"auto\",\r\n    marginTop:\"30px\"\r\n\r\n  },\r\n  guideList:{\r\n    padding:\"10px\",\r\n    margin:\"0px auto\",\r\n    marginTop:\"2px\",\r\n    borderRadius:\"0px\",\r\n    textAlign:\"left\",\r\n  },\r\n  guideListHolder:{\r\n    width:\"60%\",\r\n    margin:\"auto\",\r\n    marginTop:\"30px\",\r\n    padding:\"20px\",\r\n    //backgroundColor:\"#fff\"\r\n  },\r\n  deleteIconStyle:{\r\n    cursor:\"pointer\",\r\n    \"&:hover\": {\r\n      color: 'red'\r\n    }\r\n  }\r\n}));\r\n\r\nlet guideData = null;\r\n\r\n class AdminGuidePage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      guideDetails:null,\r\n      Open:false,\r\n      Loading:false,\r\n      guideName:'',\r\n      guideEmail:'',\r\n      hodName:'',\r\n      hodEmail:'',\r\n      deleteOpen:false,\r\n      deleteHodOpen:false,\r\n      addHodOpen:false\r\n      };\r\n  }\r\n\r\n//Delete Hod SEction\r\nhandleDeleteHodDialogOpen=(id)=>{  \r\n  dHodId=id\r\n  this.setState({\r\n    deleteHodOpen:true\r\n  })\r\n}\r\nhandleDeleteHodDialogClose=()=>{\r\n  this.setState({\r\n    deleteHodOpen:false\r\n  })\r\n}\r\n\r\nhandleDeleteHod=(id)=>{\r\n  this.handleDeleteHodDialogClose()\r\n  axios({\r\n    method: \"post\",\r\n    url: SERVER_URL + \"/deleteUser?type=hod\",\r\n    credentials: \"include\",\r\n    withCredentials: true,\r\n    data: qs.stringify({\r\n      id:id\r\n    }),\r\n    headers: {\r\n      \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n      Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n    }\r\n  })\r\n  .then(res => {\r\n    console.log(\"Hod deleted!!!!\")\r\n    dHodId=null\r\n    window.location.reload(false);\r\n  })\r\n\r\n  .catch(err => {\r\n    console.log(err);\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//Add Hod Section\r\nhandleAddHodDialogOpen=()=>{  \r\n  this.setState({\r\n    addHodOpen:true\r\n  })\r\n}\r\nhandleAddHodDialogClose=()=>{\r\n  this.setState({\r\n    addHodOpen:false\r\n  })\r\n}\r\n\r\nhandleHodNameChange = (e) => {\r\n  this.setState({\r\n    hodName:e.target.value\r\n  })\r\n  }\r\n  \r\n  handleHodEmailChange = (e) => {\r\n  this.setState({\r\n    hodEmail:e.target.value\r\n  })\r\n  }\r\n\r\n  //axios for addHod\r\n  handleAddHod=()=>{\r\n    if(this.state.hodName===\"\" || this.state.hodEmail===\"\"){\r\n      alert(\"HOD name or email cannot be empty\")\r\n    }else{\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addhod\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name:this.state.hodName,\r\n          email:this.state.hodEmail\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"HOD Assigned Successfully!!!!!\")\r\n        this.setState({\r\n          hodName:\"\",\r\n          hodEmail:\"\",\r\n          addHodOpen:false\r\n        })\r\n       \r\n        window.location.reload(false);\r\n      })\r\n  \r\n      .catch(err => {\r\n        alert(\"HOD not assigned\")\r\n        this.setState({\r\n          addHodOpen:false\r\n        })\r\n        console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n //Add Guide Button & different options in Dialog Box\r\n handleClickOpen = () => {\r\n  this.setState({\r\n    Open:true\r\n  })\r\n};\r\n handleCloseCancel = () => {\r\n  console.log(\"CANCEL\")\r\n  this.setState({\r\n    Open:false\r\n  })\r\n};\r\nhandleCloseSubmit = () => {\r\n  this.setState({\r\n    Loading:true\r\n  })\r\n  if(this.state.guideName===\"\" || this.state.guideEmail===\"\"){\r\n    alert(\"Guide name or email cannot be empty\")\r\n  }else{\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/addGuide?type=new\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        name:this.state.guideName,\r\n        email:this.state.guideEmail\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n    .then(res => {\r\n      console.log(\"submitted\")\r\n      this.setState({\r\n        Loading:false,\r\n        guideName:\"\",\r\n        guideEmail:\"\",\r\n        Open:false\r\n      })\r\n     \r\n      window.location.reload(false);\r\n    })\r\n\r\n    .catch(err => {\r\n      alert(\"Guide not added\")\r\n      this.setState({\r\n        Loading:false,\r\n        Open:false\r\n      })\r\n      console.log(err);\r\n      });\r\n  }\r\n};\r\n\r\n//Delete guide DialogBOX\r\n\r\nhandleDeleteDialogOpen=(id,name,email)=>{\r\n  dguideEmail=email\r\n  dguideId=id\r\n  dguideName=name\r\n  this.setState({\r\n    deleteOpen:true\r\n  })\r\n}\r\nhandleDeleteDialogClose=()=>{\r\n  this.setState({\r\n    deleteOpen:false\r\n  })\r\n}\r\n\r\nhandleDeleteGuide=(id,name,email)=>{ \r\n  this.handleDeleteDialogClose()\r\n  axios({\r\n    method: \"post\",\r\n    url: SERVER_URL + \"/deleteUser?type=guide\",\r\n    credentials: \"include\",\r\n    withCredentials: true,\r\n    data: qs.stringify({\r\n      id:id,\r\n      name:name,\r\n      email:email\r\n    }),\r\n    headers: {\r\n      \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n      Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n    }\r\n  })\r\n  .then(res => {\r\n    console.log(\"guide deleted!!!!\")\r\n    dguideEmail=null\r\n    dguideId=null\r\n    dguideName=null\r\n    window.location.reload(false);\r\n  })\r\n\r\n  .catch(err => {\r\n    console.log(err);\r\n    });\r\n}\r\n\r\n\r\n// Dialog box Guide name and email\r\n\r\nhandleGNameChange = (e) => {\r\nthis.setState({\r\n  guideName:e.target.value\r\n})\r\n}\r\n\r\nhandleGEmailChange = (e) => {\r\nthis.setState({\r\n  guideEmail:e.target.value\r\n})\r\n}\r\n\r\ngetStat = () => {\r\n  axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  getGuide = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        guideData= res.data;\r\n        this.setState({\r\n          guideDetails:res.data\r\n          },console.log(res));\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    const { classes } = this.props;\r\n    if(guideData === null){\r\n      this.getGuide()\r\n    }\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      if(guideData!==null){\r\n        return (<React.Fragment>\r\n          <SideMenu/>\r\n         {/* MANAGE GUIDE UI START */}\r\n         <Typography variant=\"h2\" style={{margin:\"20px auto\"}}>Manage Guide </Typography> \r\n         { !this.state.Loading ? (\r\n         <div>\r\n           <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>Add Guide</Button>\r\n           <Dialog open={this.state.Open} onClose={this.handleCloseCancel} aria-labelledby=\"form-dialog-title\">\r\n             <DialogTitle id=\"form-dialog-title\">Add Guide</DialogTitle>\r\n             <DialogContent>\r\n               <DialogContentText>\r\n                 Please add name and email of Guide.\r\n               </DialogContentText>\r\n                 <TextField\r\n                   autoFocus\r\n                   margin=\"dense\"\r\n                   id=\"guideName\"\r\n                   label=\"Guide Name\"\r\n                   type=\"text\"\r\n                   value={this.state.guideName}\r\n                   onChange={this.handleGNameChange}\r\n                   fullWidth\r\n                   required\r\n                 />\r\n                 <TextField\r\n                   margin=\"dense\"\r\n                   id=\"guideEmail\"\r\n                   label=\"Guide Email\"\r\n                   type=\"text\"\r\n                   value={this.state.guideEmail}\r\n                   onChange={this.handleGEmailChange}\r\n                   fullWidth\r\n                   required\r\n                 />\r\n             </DialogContent>\r\n             <DialogActions>\r\n               <Button onClick={this.handleCloseCancel} color=\"primary\">\r\n                 Cancel\r\n               </Button>\r\n               <Button onClick={this.handleCloseSubmit} color=\"primary\">\r\n                 Submit\r\n               </Button>\r\n             </DialogActions>\r\n           </Dialog>\r\n         </div>\r\n       ) : (\r\n         <div><CircularProgress /></div>\r\n       )}\r\n       <div className={classes.guideListHolder}>\r\n         {guideData !== null? guideData.map(guide=>{\r\n           if(guide.type===\"hod\"){checkHod=true}\r\n           if(guide.type ===\"guide\") return <Card className={classes.guideList}>\r\n           <Grid container>\r\n             <Grid item xs={1}></Grid>\r\n             <Grid item xs={4}><Typography>{guide.name}</Typography></Grid>\r\n             <Grid item xs={5}><Typography>{guide.email}</Typography></Grid>\r\n             <Grid item xs={2}><DeleteIcon className={classes.deleteIconStyle} onClick={()=>this.handleDeleteDialogOpen(guide.id,guide.name,guide.email)}/></Grid>\r\n           </Grid>\r\n           </Card>\r\n           else return null\r\n           \r\n         }) :<CircularProgress/>}</div>\r\n       {/* Dialog box for delete confirmation of Guide   */}\r\n       <div>\r\n       <Dialog\r\n         open={this.state.deleteOpen}\r\n         onClose={this.handleDeleteDialogClose}\r\n         aria-labelledby=\"alert-dialog-title\"\r\n         aria-describedby=\"alert-dialog-description\"\r\n       >\r\n         <DialogTitle id=\"alert-dialog-title\">{\"Delete Guide\"}</DialogTitle>\r\n         <DialogContent>\r\n           <DialogContentText id=\"alert-dialog-description\">\r\n             Are you sure you want to delete this guide? If this guide is assigned to any groups,then you need to assign guides for that group again\r\n           </DialogContentText>\r\n         </DialogContent>\r\n         <DialogActions>\r\n           <Button onClick={this.handleDeleteDialogClose} color=\"primary\">\r\n             Cancel\r\n           </Button>\r\n           <Button onClick={()=>this.handleDeleteGuide(dguideId,dguideName,dguideEmail)} color=\"primary\" >\r\n             Delete\r\n           </Button>\r\n         </DialogActions>\r\n       </Dialog>\r\n     </div>\r\n     {/* MANAGE GUIDE UI END */}\r\n     {/* MANAGE HOD UI START */}\r\n     <div>\r\n       <Typography variant='h2' style={{margin:\"30px auto\"}}>Manage Hod</Typography>\r\n       <div>{checkHod?null:<Button variant=\"contained\" color=\"primary\" onClick={this.handleAddHodDialogOpen}>Assign HOD </Button>}</div>  \r\n       <div className={classes.guideListHolder}>  \r\n      \r\n       {guideData!==null? guideData.map(hod=>{\r\n         if(hod.type===\"hod\"){\r\n         checkHod= true;\r\n         return <Card className={classes.guideList}>\r\n           <Grid container>\r\n             <Grid item xs={1}></Grid>\r\n             <Grid item xs={4}><Typography>{hod.name}</Typography></Grid>\r\n             <Grid item xs={5}><Typography>{hod.email}</Typography></Grid>\r\n             <Grid item xs={2}><DeleteIcon className={classes.deleteIconStyle} onClick={()=>this.handleDeleteHodDialogOpen(hod.id)}/></Grid>\r\n           </Grid>\r\n           </Card>\r\n         }  \r\n           else\r\n           return null \r\n       }):<CircularProgress/>}\r\n       </div>\r\n       {/* Dialog for Delete hod */}\r\n       <div>\r\n       <Dialog\r\n         open={this.state.deleteHodOpen}\r\n         onClose={this.handleDeleteHodDialogClose}\r\n         aria-labelledby=\"alert-dialog-title\"\r\n         aria-describedby=\"alert-dialog-description\"\r\n       >\r\n         <DialogTitle id=\"alert-dialog-title\">{\"Delete HOD\"}</DialogTitle>\r\n         <DialogContent>\r\n           <DialogContentText id=\"alert-dialog-description\">\r\n             Are you sure you want to delete this HOD? \r\n           </DialogContentText>\r\n         </DialogContent>\r\n         <DialogActions>\r\n           <Button onClick={this.handleDeleteHodDialogClose} color=\"primary\">\r\n             Cancel\r\n           </Button>\r\n           <Button onClick={()=>this.handleDeleteHod(dHodId)} color=\"primary\" >\r\n             Delete\r\n           </Button>\r\n         </DialogActions>\r\n       </Dialog>\r\n     </div>\r\n     {/* Add HOD DIALOG */}\r\n     <div>\r\n     <Dialog open={this.state.addHodOpen} onClose={this.handleAddHodDialogClose} aria-labelledby=\"form-dialog-title\">\r\n             <DialogTitle id=\"form-dialog-title\">Add HOD</DialogTitle>\r\n             <DialogContent>\r\n               <DialogContentText>\r\n                 Please add name and email of HOD\r\n               </DialogContentText>\r\n                 <TextField\r\n                   autoFocus\r\n                   margin=\"dense\"\r\n                   id=\"HodName\"\r\n                   label=\"HOD Name\"\r\n                   type=\"text\"\r\n                   value={this.state.hodName}\r\n                   onChange={this.handleHodNameChange}\r\n                   fullWidth\r\n                   required\r\n                 />\r\n                 <TextField\r\n                   margin=\"dense\"\r\n                   id=\"HodEmail\"\r\n                   label=\"HOD Email\"\r\n                   type=\"text\"\r\n                   value={this.state.hodEmail}\r\n                   onChange={this.handleHodEmailChange}\r\n                   fullWidth\r\n                   required\r\n                 />\r\n             </DialogContent>\r\n             <DialogActions>\r\n               <Button onClick={this.handleAddHodDialogClose} color=\"primary\">\r\n                 Cancel\r\n               </Button>\r\n               <Button onClick={this.handleAddHod} color=\"primary\">\r\n                 Submit\r\n               </Button>\r\n             </DialogActions>\r\n           </Dialog>\r\n         </div>\r\n     </div>\r\n     {/* MANAGE HOD UI END */}\r\n       </React.Fragment>)\r\n      }\r\n      else return <LinearProgress/>  \r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminGuidePage);","import React, { Component } from 'react'\r\nimport SideMenu from './SideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nexport default class AdminGuidePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n         <SideMenu/>\r\n        <h1>ARCHIVES</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '1.5rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '2rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    width: \"90%\",\r\n    textAlign: \"left\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"30px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"1px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function GuideDetails(props) {\r\n  const classes = useStyles();\r\n  const userInfo = props;\r\n  //const academicYear=props.academicYear;\r\n  console.log(props)\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <ThemeProvider theme={theme}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={1}>\r\n              <AccountBoxRoundedIcon style={{ fontSize: 50 }} />\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n              <Typography variant=\"h3\" style={{ fontWeight: \"600\", paddingBottom:\"20px\", }}>\r\n                User Details -\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </ThemeProvider>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Name:</b> {userInfo.userInfo.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Designation:</b> {userInfo.userInfo.type}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Department:</b> {userInfo.userInfo.department}\r\n              </Typography>\r\n            </Grid>            \r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b>Email:</b> {userInfo.userInfo.email}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, CircularProgress, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nlet Groups=null;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: \"100%\"\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(16),\r\n      fontWeight: \"600\",\r\n      flexBasis: \"33.33%\",\r\n      flexShrink: 0\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(16),\r\n      color: theme.palette.text.secondary\r\n    },\r\n    accor: {\r\n      width: \"100%\",\r\n      margin: \"auto\"\r\n    },\r\n    accordet: {\r\n      width: \"100%\",\r\n      margin: \"auto\"\r\n    }\r\n  }));\r\n\r\n\r\n                \r\n\r\nconst GuideGroupList = (props) => {\r\n    const [adData,setAdData] = React.useState(null);\r\n    const [filled,setFilled] = React.useState(false)\r\n    const histor = useHistory();\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [loading,setLoading] = React.useState(false);\r\n\r\n\r\n    function checkData() {\r\n        setLoading(true);\r\n        axios({\r\n        method: \"get\",\r\n        url: SERVER_URL + \"/guideGroup\",\r\n        withCredentials: true,\r\n        headers : {\r\n            Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n        }\r\n        })\r\n        .then(res => {\r\n            Groups = res.data;\r\n            setAdData(\"new\");\r\n            setFilled(true);\r\n            setLoading(false);\r\n        })\r\n    \r\n        .catch(function (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n    //accordion handleChange\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    if(loading){\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    if(adData===null){\r\n        checkData();\r\n        return null\r\n    }\r\n    if(filled)\r\n    {\r\n        if(Groups.length!==0){\r\n            return(\r\n                <React.Fragment >\r\n                    {Groups.map(Group => {\r\n                        const routeChange = () => {\r\n                            histor.push({\r\n                            pathname: `/guide/prefs/${id}`,\r\n                            });\r\n                        };\r\n                        //console.log(Group);\r\n                        let DueDate = Group.dueDate.split(\"T\")[0];\r\n                        let members = Group.members;\r\n                        let Gname = Group.name;\r\n                        let id = Group.id;\r\n                        let pref1 = [];\r\n                        // let pref2 = [];\r\n                        // let pref3 = [];\r\n                        let AppliedOn = null;\r\n    \r\n                        if (Group.proposals.length !== 0) {\r\n                            pref1 = Group.proposals[0];\r\n                            // pref2 = Group.proposals[1];\r\n                            // pref3 = Group.proposals[2];\r\n    \r\n                            AppliedOn = pref1.applied.split(\"T\")[0];\r\n                            //console.log(AppliedOn, DueDate);\r\n                        }\r\n                        // if (Group.guide.name===userInfo.name) {\r\n                            return (\r\n                            <Accordion\r\n                                style={{\r\n                                    width: \"90%\",\r\n                                    margin: \"auto\",\r\n                                    textAlign: \"left\",\r\n                                    marginTop: \"2px\",\r\n                                    boxShadow:\r\n                                    \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                                }}\r\n                                expanded={expanded === Gname}\r\n                                onChange={handleChange(Gname)}\r\n                                className={classes.accor}\r\n                                key={Group.name}\r\n                            >\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1bh-content\"\r\n                                id=\"panel1bh-header\"\r\n                                >\r\n                                <Typography className={classes.heading}>\r\n                                    {toFirstCharUppercase(Group.name)}\r\n                                </Typography>\r\n                                {members.map(member => {\r\n                                    return (\r\n                                    <Typography\r\n                                        key={member.name}\r\n                                        className={classes.secondaryHeading}\r\n                                    >\r\n                                        {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                    );\r\n                                })}\r\n                                </AccordionSummary>\r\n                                <AccordionDetails className={classes.accordet}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Name\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.name}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Email\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.email}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Roll no\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                    {DueDate >= AppliedOn ? (\r\n                                        <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                        Proposals Submitted On Time\r\n                                        </Typography>\r\n                                    ) : (\r\n                                        <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                        Proposals Submitted LATE\r\n                                        </Typography>\r\n                                    )}\r\n                                    </Grid>\r\n                                    <Grid item container xs={12}>\r\n                                    {Group.proposals.length === 3 ? (\r\n                                        <React.Fragment>\r\n                                            <Grid item xs={3}>\r\n                                                <Button\r\n                                                onClick={routeChange}\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                >\r\n                                                More Details\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                            <Typography>Preferences not filled</Typography>\r\n                                        </Button>\r\n                                    )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                            );\r\n                        // }\r\n                        // return null;\r\n                        })}\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <Typography>\r\n                    No group has been assigned to you yet.\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n    else{\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n}\r\n \r\n \r\nexport default GuideGroupList;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport GuideDetails from \"../components/Guide Component/GuideDetail\"\r\nimport GuideGroupList from \"../components/Guide Component/GroupList\";\r\n\r\n\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"guide\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"guide\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <LoggedNavbar />\r\n            <GuideDetails userInfo={this.state.user} />\r\n            <h1>GUIDE PAGE!</h1>\r\n            <GuideGroupList userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField, CircularProgress, Card } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport HodCommentPage from \"../Hod-component/HodCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet Group=null;\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\nconst days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n// const months=[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n// let pd= new Date()\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  }\r\n});\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      scheduleLoading: false,\r\n      dateTime:\"\",\r\n      marks:\"\",\r\n      totalMarks:\"\"\r\n    };\r\n  }\r\n    \r\n    sche_pres = (e,id) => {\r\n      let dt= new Date(this.state.dateTime);\r\n      console.log(dt.toISOString());\r\n      console.log(this.state.dateTime);\r\n      this.setState({scheduleLoading:true})\r\n      axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/presentation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n          datetime:dt.toISOString(),\r\n          gid:id\r\n      }),\r\n      headers : {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n      })\r\n      .then(res => {\r\n          console.log(\"SCHEDULED\")\r\n          this.setState({scheduleLoading:false})\r\n          // window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n          console.log(err);\r\n          this.setState({scheduleLoading:false})\r\n  });\r\n}\r\n\r\nhandleDateTimeChange = (e) =>{\r\n    this.setState({dateTime:e.target.value})\r\n    //console.log(dateTime)\r\n}\r\n  \r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState(\r\n      {\r\n        comment: comment\r\n      },\r\n      // function () {\r\n      //   console.log(this.state.comment);\r\n      // }\r\n    );\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    })\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if(comment===\"\"){\r\n      this.setState({\r\n        openFailure:true\r\n      })\r\n    }else{\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n           Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n          \r\n        }\r\n      })\r\n      .then(response => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        console.log(response);\r\n        this.setState({\r\n          comment:\"\",\r\n          adData: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  handleMarkSubmit = (e,groupID,presentationID) => {\r\n    console.log(this.state.marks);\r\n    console.log(this.state.totalMarks)\r\n      if(parseInt(this.state.marks,10)>parseInt(this.state.totalMarks,10)){\r\n          alert(\"Marks obtained cannot be greater than max marks\");\r\n          this.setState({marks:\"\",totalMarks:\"\"})\r\n      }else{\r\n            axios({\r\n                method: \"post\",\r\n                url: SERVER_URL + \"/presentationMarks\",\r\n                credentials: \"include\",\r\n                withCredentials: true,\r\n                data: qs.stringify({\r\n                gid:groupID,\r\n                pid:presentationID,\r\n                marks:this.state.marks+\"/\"+this.state.totalMarks\r\n                }),\r\n                headers: {\r\n                \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n                Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n                }\r\n            })\r\n            .then(response => {\r\n            console.log(\"Marks submitted\");\r\n            this.setState({marks:\"\",totalMarks:\"\"})\r\n            window.location.reload();\r\n            })\r\n            .catch(err => {\r\n            this.setState({marks:\"\",totalMarks:\"\"})\r\n            console.log(err);\r\n            });\r\n      }\r\n  }\r\n\r\n  handleMarks = (e) =>{\r\n      this.setState({marks:e.target.value})\r\n  }\r\n  handleTotalMarks = (e) =>{\r\n    this.setState({totalMarks:e.target.value})\r\n}\r\n\r\n  handleDeletePresentation=(e,PID,GID)=>{\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deletePresentation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n          pid:PID,\r\n          gid:GID\r\n      }),\r\n      headers : {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n      })\r\n      .then(res => {\r\n          console.log(\"Deleted\");\r\n          window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n          console.log(err);\r\n  });\r\n  }\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              let Gid = group.id;\r\n              if (group.id===this.props.match.params.id) {\r\n                let Presentations = group.presentation;\r\n                let Proposals = group.proposals;\r\n                let Comments =group.comments;\r\n                Presentations.sort((a,b)=>(new Date(a.scheduled_date).getTime()>new Date(b.scheduled_date).getTime())?1:-1)\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let appliedDate = new Date(proposal.applied)\r\n                      return (\r\n                        <Accordion key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            \r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Detailed Statement of Problem:&nbsp;&nbsp;</b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Internal Agency/External Agency/CTL/Mastek/or any other:&nbsp;&nbsp;</b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Methods/Technique/Algorithm proposed:&nbsp;&nbsp;</b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Software/Hardware Requirements:&nbsp;&nbsp;</b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/{appliedDate.getMonth()+1}/{appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Attached Print:&nbsp;&nbsp;</b>\r\n                                  {proposal.attachPrints}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `http://localhost:8000/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <Card style={{marginTop:\"20px\"}}>\r\n                    <Grid style={{marginTop:\"20px\"}} container item xs={12}>\r\n                        <Grid style={{backgroundColor:\"#fff\"}} item xs={3}>\r\n                            <Typography style={{marginBottom:\"20px\"}} variant=\"h3\">Presentation</Typography>\r\n                        </Grid>\r\n                        <form onSubmit={(e)=>{this.sche_pres(e,Gid)}}>\r\n                        <Grid item container xs={9}>\r\n                          <Grid item xs={2}>\r\n                              <Typography>Schedule Presentation: </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6}>\r\n                          <TextField\r\n                              id=\"datetime-local\"\r\n                              label=\"Next Presentation\"\r\n                              type=\"datetime-local\"\r\n                              defaultValue={new Date().toISOString()}\r\n                              className={classes.textField}\r\n                              required\r\n                              InputLabelProps={{\r\n                              shrink: true,\r\n                              }}\r\n                              onChange={this.handleDateTimeChange}\r\n                          />\r\n                          </Grid>\r\n                          <Grid item xs={3}>\r\n                              {\r\n                                  (!this.state.scheduleLoading)?(\r\n                                      <Button type=\"submit\"  variant=\"contained\" color=\"secondary\">Schedule</Button>\r\n                                  ):(\r\n                                      <CircularProgress />\r\n                                  )\r\n                              }\r\n                          </Grid>\r\n                        </Grid>\r\n                        </form>\r\n                        <Grid item xs={12}>\r\n                        {(Presentations.length!==0)?(\r\n                          <React.Fragment>\r\n                            {Presentations.map((presentation, index) => {\r\n                            const panel = presentation._id;\r\n                            let d=new Date(presentation.scheduled_date)\r\n                            return (\r\n                                <Accordion key={presentation._id} expanded={expanded === panel} onChange={this.handleChange(panel)}>\r\n                                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\r\n                                    <Grid container>\r\n                                            <Grid item xs={3}>\r\n                                                <Typography>\r\n                                                    <b>Presentation {index+1}</b>\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            {(presentation.marks===null)?(\r\n                                                <React.Fragment>\r\n                                                  {d.getTime()>Date.now()?(\r\n                                                    <React.Fragment>\r\n                                                      <Grid item xs={4} />\r\n                                                      <Grid item xs={5}>\r\n                                                        <Typography>\r\n                                                            Marks: Presentation Not conducted\r\n                                                        </Typography>\r\n                                                      </Grid>\r\n                                                    </React.Fragment>\r\n                                                  ):(\r\n                                                    <React.Fragment>\r\n                                                      <Grid item xs={4} />\r\n                                                      <Grid item xs={5}>\r\n                                                        <Typography color=\"secondary\">\r\n                                                            Presentation missed\r\n                                                        </Typography>\r\n                                                      </Grid>\r\n                                                    </React.Fragment>\r\n                                                  )}\r\n                                                </React.Fragment>\r\n                                            ):(\r\n                                                <React.Fragment>\r\n                                                    <Grid item xs={6} />\r\n                                                    <Grid item xs={3}>\r\n                                                        <Typography>\r\n                                                            Marks: {presentation.marks}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                </React.Fragment>\r\n                                            )}\r\n                                    </Grid>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                                        <Grid container className={classes.content} spacing={1} >\r\n                                            <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                                                <Typography>\r\n                                                    Date: {d.getDate()}/{d.getMonth()+1}/{d.getFullYear()}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                                                <Typography>\r\n                                                    Day: {days[d.getDay()]}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                                                {(d.getHours()>12)?(\r\n                                                    <Typography>\r\n                                                        Time: {d.getHours()-12}:{d.getMinutes()} pm\r\n                                                    </Typography>\r\n                                                ):(\r\n                                                    <Typography>\r\n                                                        Time: {d.getHours()}:{d.getMinutes()} am\r\n                                                    </Typography>\r\n                                                )}\r\n                                            </Grid>\r\n                                            {(presentation.marks===null && d.getTime()<=Date.now())?(\r\n                                              <Grid item container xs={12} style={{ textAlign: \"left\" }}>\r\n                                                <Grid item xs={3}>\r\n                                                    <TextField size=\"small\" type=\"number\" value={this.state.marks} variant=\"outlined\" label=\"Marks obtained\" onChange={this.handleMarks}/>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                    <TextField size=\"small\" type=\"number\" value={this.state.totalMarks} variant=\"outlined\" label=\"Total Marks\" onChange={this.handleTotalMarks} />\r\n                                                </Grid>\r\n                                                <Grid item xs={4}>\r\n                                                    <Button size=\"large\" variant=\"outlined\" color=\"primary\" onClick={(e)=>{this.handleMarkSubmit(e,Gid,presentation._id)}} >Submit Marks</Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            ):(null)}\r\n                                            <Grid item xs={12} style={{alignContent: \"flex-end\"}}>\r\n                                              <Button variant=\"outlined\" color=\"default\" onClick={(e)=>{this.handleDeletePresentation(e,presentation._id,Gid)}}>Delete presentation</Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                            );\r\n                            })}\r\n                          </React.Fragment>\r\n                        ):(\r\n                          <React.Fragment>\r\n\r\n                            <Typography>\r\n                              No presentation scheduled\r\n                            </Typography>\r\n                          </React.Fragment>\r\n                        )}\r\n                        \r\n                        </Grid>\r\n                    </Grid>\r\n                    </Card>\r\n                    <Grid container className={classes.comment}>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comTitle}\r\n                      >\r\n                        <Typography>\r\n                          <b>Add Comments:</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                          className={classes.comField}\r\n                          variant=\"outlined\"\r\n                          component={\"span\"}\r\n                          multiline\r\n                          inputProps={{ style: { fontSize: 14 } }}\r\n                          rows={3}\r\n                          id=\"comment\"\r\n                          name=\"comment\"\r\n                          type=\"text\"\r\n                          value={this.state.comment}\r\n                          onChange={this.commentHandler}\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comButton}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            this.sendComment(Gid);\r\n                          }}\r\n                        >\r\n                          Send Comment\r\n                        </Button>\r\n                        <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Successful comment\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Unsuccessful. Comment cannot be empty\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={12}>\r\n                        <HodCommentPage Comments={Comments}/>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./Login/background2.jpg\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SERVER_URL from \"./URL\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport qs from \"qs\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n\r\n\tleftpaper: {\r\n\t\tbackgroundImage: `url(${Image})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"transparent\",\r\n\t\tborderRadius: \"6px\",\r\n\t\tfloat: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"#fff\",\r\n\t\tpaddingTop: \"60px\",\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  paddingTop: \"20px\"\r\n\t\t}\r\n\t},\r\n\tform: {\r\n\t    width: \"90%\", \r\n\t    marginTop: theme.spacing(1)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tfontWeight: \"bolder\",\r\n\t\tbackgroundColor: \"#1877f2\",\r\n\t\tmarginBottom: \"25px\"\r\n\t},\r\n\tfields: {\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborderRadius: \"3px\"\r\n\t},\r\n\ttitle: {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tcolor: \"#fff\",\r\n\t\t[theme.breakpoints.down(\"775\")]: {\r\n\t\t  fontSize: \"45px\"\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  fontSize: \"40px\"\r\n\t\t}\r\n\t},\r\n\tavatar: {\r\n\t    margin: theme.spacing(1),\r\n\t    backgroundColor: \"#1877f2\",\r\n\t    height: \"50px\",\r\n\t    width: \"50px\",\r\n\t    marginTop: \"30px\"\r\n  },\r\n\r\n});\r\n\r\nclass forgetPassword extends Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttoken :localStorage.getItem(\"token\"),\r\n\t\t\tmsg : \"\",\r\n\t\t\temail : \"\",\r\n\t\t\tloading : false,\r\n\t\t\topenSuccess:false,\r\n\t\t\topenInfo:false,\r\n\t\t\topenFailure:false\r\n\t\t}\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t}\r\n\thandleChange = name => ({ target: { value } }) => {\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tsubmitForm(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({loading:true})\r\n\t\tlet email = this.state.email\r\n\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: SERVER_URL+\"/forgetPassword\",\r\n\t\t\tdata: qs.stringify({email: email}),\r\n\t\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n\t\t\t}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tif(res.data[0]===\"A\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmsg:res.data,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenInfo:true\r\n\t\t\t\t\t})\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmsg:res.data,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenSuccess:true\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmsg:\"there was some problem please refresh the page and try again\",\r\n\t\t\t\t\tloading:false,\r\n\t\t\t\t\topenFailure:true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\trender() {\r\n\t\tif(this.state.token != null)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\r\n\t\tif(this.state.loading)\r\n\t\t\treturn <LinearProgress/>\r\n\r\n\t\tconst { classes } = this.props;\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\t\tif(this.state.openSuccess){\r\n\t\t\t\tthis.setState({openSuccess: false});\r\n\t\t\t}\r\n\t\t\telse if(this.state.openInfo){\r\n\t\t\t\tthis.setState({openInfo: false});\r\n\t\t\t}\r\n\t\t\telse if(this.state.openFailure){\r\n\t\t\t\tthis.setState({openFailure: false});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className={classes.leftpaper}>\r\n\t          <Typography variant=\"h2\" className={classes.title}>\r\n\t            <b>Project Management System</b>\r\n\t          </Typography>\r\n\t          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n\t            <CssBaseline />\r\n\t            <Avatar variant=\"circle\" className={classes.avatar}>\r\n\t\t          <PersonIcon fontSize=\"large\" />\r\n\t\t        </Avatar>\r\n\t\t        <Typography component=\"h2\" variant=\"h6\">\r\n\t\t          <b>Forget Password</b>\r\n\t\t        </Typography>\r\n\t            <form className={classes.form} onSubmit={this.submitForm}>\r\n\t              <TextField\r\n\t                type=\"email\"\r\n\t                variant=\"filled\"\r\n\t                margin=\"normal\"\r\n\t                required\r\n\t                fullWidth\r\n\t                id=\"email\"\r\n\t                label=\"email\"\r\n\t                value={this.state.email}\r\n\t                onChange={this.handleChange(\"email\")}\r\n\t                className={classes.fields}\r\n\t                \r\n\t              />\r\n\t              <Button\r\n\t                type=\"submit\"\r\n\t                fullWidth\r\n\t                variant=\"contained\"\r\n\t                color=\"primary\"\r\n\t                className={classes.submit}\r\n\t              >\r\n\t                Reset Password\r\n\t              </Button>\r\n\t              \r\n\t            </form>\r\n\t\t\t\t<Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\">\r\n\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openInfo} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"info\">\r\n\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t  \r\n\t          </Container>\r\n\t        </div>\r\n\t      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(forgetPassword);","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./Login/background2.jpg\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SERVER_URL from \"./URL\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport qs from \"qs\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = theme => ({\r\n\r\n\tleftpaper: {\r\n\t\tbackgroundImage: `url(${Image})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"transparent\",\r\n\t\tborderRadius: \"6px\",\r\n\t\tfloat: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"#fff\",\r\n\t\tpaddingTop: \"60px\",\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  paddingTop: \"20px\"\r\n\t\t}\r\n\t},\r\n\tform: {\r\n\t    width: \"90%\", \r\n\t    marginTop: theme.spacing(1)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tfontWeight: \"bolder\",\r\n\t\tbackgroundColor: \"#1877f2\",\r\n\t\tmarginBottom: \"25px\"\r\n\t},\r\n\tfields: {\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborderRadius: \"3px\"\r\n\t},\r\n\ttitle: {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tcolor: \"#fff\",\r\n\t\t[theme.breakpoints.down(\"775\")]: {\r\n\t\t  fontSize: \"45px\"\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  fontSize: \"40px\"\r\n\t\t}\r\n\t},\r\n\tavatar: {\r\n\t    margin: theme.spacing(1),\r\n\t    backgroundColor: \"#1877f2\",\r\n\t    height: \"50px\",\r\n\t    width: \"50px\",\r\n\t    marginTop: \"30px\"\r\n  },\r\n\r\n});\r\n\r\nclass resetPassword extends Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttoken :localStorage.getItem(\"token\"),\r\n\t\t\tmsg : \"\",\r\n\t\t\tnewPassword : \"\",\r\n\t\t\tconfirmPassword:\"\",\r\n\t\t\tloading : false,\r\n\t\t\topenSuccees:false,\r\n\t\t\topenFailure:false,\r\n\t\t\topenInfo:false,\r\n\t\t\tdone:false\r\n\t\t}\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t}\r\n\thandleChange = name => ({ target: { value } }) => {\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tsubmitForm(e){\r\n\t\te.preventDefault();\r\n\t\tif(this.state.newPassword !== this.state.confirmPassword){\r\n\t\t  this.setState({msg : \"Two fields Doesn't match\"}) ;\r\n\t\t}else if(this.state.newPassword.length < 8){\r\n\t\t  this.setState({msg : \"Please Enter a Password with length greater than 8\"});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState({loading:true})\r\n\t\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: SERVER_URL+\"/resetPassword/\"+this.props.match.params.id,\r\n\t\t\tdata: qs.stringify({\r\n\t\t\t\tnewPassword:this.state.newPassword\r\n\t\t\t}),\r\n\t\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n\t\t\t}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tif(res.data === \"yes\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenSuccees:true\r\n\t\t\t\t\t})\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenInfo:true\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading:false,\r\n\t\t\t\t\topenFailure:true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.state.token != null)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\t\tif(this.state.loading)\r\n\t\t\treturn <LinearProgress/>\r\n\t\tif (this.state.done)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\t\tconst { classes } = this.props\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\tif(this.state.openSuccees)\r\n\t\t\tthis.setState({openSuccees: false,done:true});\r\n\t\telse if(this.state.openFailure)\r\n\t\t\tthis.setState({openFailure : false});\r\n\t\telse if(this.state.openInfo)\r\n\t\t\tthis.setState({openInfo : false});\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className={classes.leftpaper}>\r\n\t          <Typography variant=\"h2\" className={classes.title}>\r\n\t            <b>Project Management System</b>\r\n\t          </Typography>\r\n\t          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n\t            <CssBaseline />\r\n\t            <Avatar variant=\"circle\" className={classes.avatar}>\r\n\t\t          <PersonIcon fontSize=\"large\" />\r\n\t\t        </Avatar>\r\n\t\t        <Typography component=\"h2\" variant=\"h6\">\r\n\t\t          <b>Reset Password</b>\r\n\t\t        </Typography>\r\n\t            <form className={classes.form} onSubmit={this.submitForm}>\r\n\t              <TextField\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  className={classes.fields}\r\n                  value={this.state.newPassword}\r\n                  onChange={this.handleChange(\"newPassword\")}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  className={classes.fields}\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.handleChange(\"confirmPassword\")}\r\n                />\r\n\t              <Typography variant=\"subtitle2\" color=\"info\">\r\n\t                  {this.state.msg}\r\n\t              </Typography>\r\n\t              <Button\r\n\t                type=\"submit\"\r\n\t                fullWidth\r\n\t                variant=\"contained\"\r\n\t                color=\"primary\"\r\n\t                className={classes.submit}\r\n\t              >\r\n\t                Reset Password\r\n\t              </Button>\r\n\t             \r\n\t            </form>\r\n\t\t\t\t<Snackbar open={this.state.openSuccees} onClose={handleClose} autoHideDuration={6000}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\" >\r\n\t\t\t\t\tYour Password was changed successfully You will be redirect to login page\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openInfo} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tThis Link has expired please reapply for reset password\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tThere was some problem while changing your password please refresh the page and try again\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>  \r\n\t          </Container>\r\n\t        </div>\r\n\t      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(resetPassword);","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Admin from \"./Pages/Admin\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport Logout from \"./Pages/Logout\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Student from \"./Pages/Student\";\r\nimport Yami from \"./Pages/Yami\";\r\nimport Faculty from \"./Pages/Faculty\";\r\nimport ChangePassword from \"./components/ChangePassword/ChangePassword\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport PrefPage from \"./Pages/PrefPage\";\r\nimport Hod from \"./Pages/Hod\";\r\nimport HodPrefPage from \"./components/Hod-component/HodPrefPage\";\r\nimport AdminGroupsPage from \"./components/Admin-component/AdminGroupsPage\";\r\nimport AdminGuidePage from \"./components/Admin-component/AdminGuidePage\";\r\nimport AdminArchives from \"./components/Admin-component/AdminArchives\"\r\nimport Guide from \"./Pages/Guide\"\r\nimport GuidePrefPage from \"./components/Guide Component/GuidePrefPage\";\r\nimport forgetPassword from \"./Pages/forgetPassword\";\r\nimport resetPassword from \"./Pages/resetPassword\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/admin\" exact component={Admin} />\r\n        <Route path=\"/hod\" exact component={Hod} />\r\n        <Route path=\"/logout\" exact component={Logout} />\r\n        <Route path=\"/faculty\" exact component={Faculty} />\r\n        <Route path=\"/student\" exact component={Student} />\r\n        <Route path=\"/yami\" exact component={Yami} />\r\n        <Route path=\"/guide\" exact component={Guide}/>\r\n        <Route path=\"/cp@2707user\" exact component={ChangePassword} />\r\n        <Route path=\"/admin/prefs/:id\" exact component={PrefPage} />\r\n        <Route path=\"/hod/prefs/:id\" exact component={HodPrefPage} />\r\n        <Route path=\"/guide/prefs/:id\" exact component={GuidePrefPage} />\r\n        <Route path=\"/admin/groups\" exact component={AdminGroupsPage}/>\r\n        <Route path=\"/admin/guides\" exact component={AdminGuidePage}/>\r\n        <Route path=\"/admin/archives\" exact component={AdminArchives}/>\r\n        <Route path=\"/forgetPassword\" exact component={forgetPassword}/>\r\n        <Route path=\"/resetPassword/:id\" exact component={resetPassword}/>\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.register();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/background2.43a914dc.jpg\";"],"sourceRoot":""}