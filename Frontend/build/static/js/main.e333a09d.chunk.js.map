{"version":3,"sources":["components/Admin-component/sample.PNG","components/Navbar/MenuAppBar.js","components/Navbar/LoggedNavbar.js","Pages/URL.js","components/Admin-component/AdminInstructions.js","components/Footer/Footer.js","components/Profile.js","components/ToUpper.js","components/Admin-component/ProjectList.js","components/Admin-component/SideMenu.js","components/Admin-component/AdminContent.js","Pages/Admin.js","Pages/Login/Login.js","Pages/Logout.js","components/Student-component/StudentContent.js","components/Student-component/studentHomePage.js","components/Student-component/StudentCommentPage.js","components/Student-component/StudentPresentation.js","components/Student-component/StudentWeeklyLog.js","components/Student-component/studentWholePage.js","Pages/Student.js","components/Yami-component/YamiContent.js","Pages/Yami.js","context/projectcontext.js","components/verification/projectdetails.js","components/verification/projectlist.js","components/Faculty-component/FacultyContent.js","Pages/Faculty.js","components/ChangePassword/ChangePassword.js","components/NotFound.js","components/Navbar/Navbar.js","components/Admin-component/AdminCommentPage.js","Pages/PrefPage.js","components/Hod-component/HodProjectList.js","components/Hod-component/HodSideMenu.js","components/Hod-component/HodContent.js","Pages/Hod.js","components/Hod-component/HodCommentPage.js","components/Hod-component/HodPrefPage.js","components/Admin-component/AdminGroupsPage.js","components/Admin-component/AdminGuidePage.js","components/Admin-component/AdminArchives.js","components/Guide Component/GroupList.js","Pages/Guide.js","components/Guide Component/GuidePrefPage.js","Pages/forgetPassword.js","Pages/resetPassword.js","components/Hod-component/HodGroupsPage.js","App.js","serviceWorker.js","index.js","Pages/Login/background2.jpg"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","profIcon","breakpoints","up","display","navMenu","down","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleMenu","event","currentTarget","handleClose","pres_url","window","location","href","className","AppBar","position","style","backgroundColor","Toolbar","to","textDecoration","color","Button","variant","Typography","IconButton","aria-label","aria-controls","aria-haspopup","onClick","fontSize","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","startIcon","marginLeft","starticon","LoggedNavbar","props","state","Fragment","Component","SERVER_URL","width","padding","letterSpacing","marginBottom","image","pos","Profile","Card","boxShadow","borderRadius","CardContent","fontWeight","fontFamily","src","Image","alt","paddingTop","rootItems","foot","margin","footEnd","Footer","Grid","container","item","xs","sm","target","Date","getFullYear","createMuiTheme","typography","h3","minWidth","marginTop","icon","userInfo","academicYear","ThemeProvider","md","name","type","department","email","toFirstCharUppercase","charAt","toUpperCase","slice","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","component","a11yProps","heading","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","accor","accordet","dueDateContainer","downloadButton","float","ControlledAccordions","Groups","dueDate","Guides","histor","useHistory","expanded","setExpanded","useTheme","setValue","assignLoading","setAssignLoading","guide","setGuide","guideE","setGuideE","changeDuedate","setDueDate","DueDateOpen","setDOpen","downLoading","setDownLoading","SdownLoading","setSDownLoading","showButton","handleGuideChange","e","map","Guide","appendLeadingZeroes","n","handleChangeDueDateDialogClose","handleChange","panel","isExpanded","length","Dialog","DialogTitle","DialogContent","DialogContentText","utils","DateFnsUtils","autoOk","required","inputVariant","format","onChange","date","current_datetime","formatted_date","getMonth","getDate","InputAdornmentProps","DialogActions","axios","method","url","credentials","withCredentials","data","qs","stringify","headers","Authorization","localStorage","getItem","then","res","console","log","reload","catch","err","alert","split","Tabs","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","Group","DueDate","members","Gname","pref1","pref2","pref3","AppliedOn","pref1AdminApproval","pref2AdminApproval","pref3AdminApproval","pref1HodApproval","pref2HodApproval","pref3HodApproval","proposals","applied","approval","admin","hod","Accordion","key","AccordionSummary","expandIcon","member","AccordionDetails","rollno","push","pathname","TextField","size","select","helperText","CircularProgress","groupId","assignGuide","handleChangeGuide","disabled","maxWidth","maxHeight","responseType","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","pref1Approval","pref2Approval","pref3Approval","LinearProgress","ButtonStyle","cursor","SideMenu","top","left","bottom","right","setState","itemsList","toggleDrawer","anchor","Drawer","clsx","list","fullList","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","tempDate","Alert","elevation","Ad","a","academicYearList","AdminContent","handleDateChange","prefDueDate","handleAcademicYear","Academicyear","hodHandler","hodNameHandler","hodName","reason","openSuccess","openFailure","adData","submitHandler","preventDefault","formData","FormData","append","student_file","loading","fileValidation","fileInput","getElementById","filePath","exec","files","filled","this","checkData","checkGuides","onSubmit","gridField","InputTitle","Inputfield","autoFocus","FormControl","Select","Input","alignItems","submit","Snackbar","autoHideDuration","severity","footer","withStyles","flexDirection","minHeight","main","paper","pape","form","fields","border","paddingLeft","Admin","getStat","loggedIn","user","removeItem","Data","data_access","today","Login","username","password","msg","invalidCredentials","getResponse","bind","submitForm","response","access_token","setItem","token","exact","leftpaper","Container","CssBaseline","Avatar","avatar","fullWidth","autoComplete","background","backgroundImage","backgroundSize","height","Logout","responsiveFontSizes","stuData","Stu","Proposals","StudentContent","handleClickOpen","handleAgreeClickClose","handleCancelClickClose","tabValue","handleTopChange","pn","prefs","preferences","i","Top","handleDosChange","Dos","handleDsopChange","cs","Dsop","handleAgencyChange","Agency","handleMtapChange","Mtap","handleRedChange","Red","handleShrChange","Shr","handleFileChange","selectedFile","handleClick","currentStep","handleSubmit","specialization","details","agency","result","requirements","JSON","_next","_prev","handleNext","prefno","formFilled","Step1","Step2","previousButton","Step3","handleClickClose","aria-describedby","largeWinTabs","centered","tabPanel","typographyFilled","attachPrints","smallWinTabs","scrollButtons","multiline","inputProps","rows","buttonprop","borderTop","tableContainer","table","propF","fill","StudentHomePage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","_id","proposal","approved","propTitle","propApproved","typo","StudentCommentPage","comments","comment","dt","time","author","getHours","getMinutes","Presentations","StudentPresentation","presentation","sort","b","scheduled_date","getTime","Presentation","orgMarks","subKnowMarks","EODMarks","timeMarks","now","StudentWeeklyLog","weeklyMeetLog","wML","remark","vert_tab_grid","borderRight","divider","hor_tab_grid","borderBottom","large_win_tabs","small_win_tabs","StudentWholePage","obtained","setObtained","setAcademicYear","reqSent","setReqSent","acadYear","orientation","tab","YamiContent","mailHandler","mail","nameHandler","deptHandler","dept","noValidate","InputLabel","deptLabel","Yami","ProjectContext","createContext","ProjectContextProvider","projects","isapproved","Approve","project","addComment","Provider","ProjectDetails","aboutProps","ProjectList","useContext","FacultyContent","ChangePassword","pushPassword","newPassword","confirmPassword","newpasswordHandler","confirmpasswordHandler","helptext","NotFound","backButton","buttonContainer","Navbar","history","back","typo1","typo2","textAllign","THEME","join","AdminCommentPage","Comments","reverse","d","fontStyle","toString","substr","ControlledExpansionPanels","commentHandler","handleApprove","pid","Gid","group","Proposal1","Proposal2","Proposal3","grid","appliedDate","content","comTitle","comField","comButton","sendComment","HodProjectList","Designation","HodContent","getGroup","Hod","HodCommentPage","days","HodPrefPage","getDay","marks","Groupid","deleteMemberEmail","groupData","AdminGroupsPage","handleDeleteMemberDialogOpen","deleteMemberOpen","handleDeleteMemberDialogClose","handleDeleteMember","gid","handleDeleteProposalsDialogClose","deleteProposalsOpen","handleDeleteProposals","handleDeleteAllUser","deleteAllUserDialog","handleArchieve","archive","archiveSuccess","handleAddMemberDialogOpen","gname","addMemberOpen","handleAddMemberDialogClose","handleMemberNameChange","memberName","handleMemberEmailChange","memberEmail","handleMemberRollnoChange","memberRollno","handleAddMember","groupName","addHodOpen","handleChildClick","stopPropagation","groupDetails","mainAccorContainer","endIcon","proposal1Stat","proposal2Stat","proposal3Stat","mainAccor","accorStyle","groupCard","dmemberEmail","deleteIconStyle","handleDeleteProposalsDialogOpen","presCard","pres","memberHolder","dguideId","dguideEmail","dguideName","checkHod","dHodId","guideData","AdminGuidePage","handleDeleteHodDialogOpen","deleteHodOpen","handleDeleteHodDialogClose","handleDeleteHod","handleAddHodDialogOpen","handleAddHodDialogClose","handleHodNameChange","handleHodEmailChange","hodEmail","handleAddHod","Open","handleCloseCancel","handleCloseSubmit","Loading","guideName","guideEmail","handleDeleteDialogOpen","deleteOpen","handleDeleteDialogClose","handleDeleteGuide","handleGNameChange","handleGEmailChange","getGuide","guideDetails","mHodContainer","guideListHolder","guideList","fontWeightRegular","dArchiveId","archData","AdminArchives","handleDeleteArchiveDialogOpen","deleteDialogOpen","handleDeleteArchiveDialogClose","handleDeleteArchive","getArchive","archiveData","archId","groups","GuideGroupList","setAdData","setFilled","setLoading","handleBibliography","bibliography","handleProbStatement","probStatement","handleConcept","concept","handleSpellAndGrammar","spellAndGrammar","handleOrgAndWriting","orgAndWriting","handleEngTheoryAnaly","enggTheoryAnaly","handleDiagram","diagram","handleTeamWork","teamWork","handlePMF","pmf","handleInnovation","innovation","handleReportSubmit","biblogrpahy","diagrams","handleDeleteReport","weeklyMsgHandler","message","weeklyLogMsg","handleweelyDateChange","weeklyLogDate","sendLog","deleteLog","wid","handleImplementationSubmit","probStatment","teamwork","handleDeleteImplementation","sche_pres","dateTime","scheduleLoading","datetime","toISOString","handleDateTimeChange","handleMarkSubmit","groupID","presentationID","parseInt","eodMarks","totalMarks","handleOrgMarks","handleSubKnowMarks","handleTimeMarks","handleEodMarks","handleDeletePresentation","PID","GID","match","params","weeklyLog","implementation","report","textField","InputLabelProps","shrink","forgetPassword","openInfo","resetPassword","openSuccees","done","HodgroupsPage","setUser","setGroupDetails","App","path","Faculty","Student","PrefPage","GuidePrefPage","HodGroupsPage","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","register","error"],"mappings":"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","file":"static/js/main.e333a09d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.fcf68321.PNG\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const pres_url = window.location.href;\r\n  if(pres_url===\"http://localhost:3000/cp@2707user\"||pres_url===\"https://project-management-system-ark.herokuapp.com/cp@2707user\"){\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n          <Toolbar>\r\n            <Link\r\n              to=\"/\"\r\n              style={{ textDecoration: \"none\", color: \"#000\", marginRight:\"5px\" }}\r\n            >\r\n              <Button color=\"inherit\" variant=\"contained\">\r\n                <ArrowBackRoundedIcon />\r\n              </Button>\r\n            </Link>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              Project Management System\r\n            </Typography>\r\n            {auth && (\r\n              <div className={classes.profIcon}>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\t\r\n                  onClick={handleMenu}\t\r\n                  color=\"inherit\"\t\r\n                >\t\r\n                  <AccountCircle style={{ fontSize: 40 }} />\t\r\n                </IconButton>\t\r\n                <Menu\t\r\n                  id=\"menu-appbar\"\t\r\n                  anchorEl={anchorEl}\t\r\n                  anchorOrigin={{\t\r\n                    vertical: \"top\",\t\r\n                    horizontal: \"right\"\t\r\n                  }}\t\r\n                  keepMounted\t\r\n                  transformOrigin={{\t\r\n                    vertical: \"top\",\t\r\n                    horizontal: \"right\"\t\r\n                  }}\t\r\n                  open={open}\t\r\n                  onClose={handleClose}\t\r\n                >\t\r\n                  <MenuItem onClick={handleClose}>\t\r\n                    <Link\t\r\n                      to=\"/cp@2707user\"\t\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n                    >\t\r\n                      Change Password\t\r\n                    </Link>\t\r\n                  </MenuItem>\t\r\n                  <MenuItem onClick={handleClose}>\t\r\n                    <Link\t\r\n                      to=\"/logout\"\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n                    >\t\r\n                      Logout\t\r\n                    </Link>\t\r\n                  </MenuItem>\t\r\n                </Menu>\t\r\n              </div>\t\r\n            )}\t\r\n            <Link\t\r\n              to=\"/cp@2707user\"\t\r\n              className={classes.navMenu}\t\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n            >\t\r\n              <Button\t\r\n                color=\"inherit\"\r\n                variant=\"contained\"\t\r\n                startIcon={<AssignmentIndIcon />}\t\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Link>\r\n            <Link\r\n              to=\"/logout\"\r\n              className={classes.navMenu}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                startIcon={<ExitToAppIcon />}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }else{\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n          <Toolbar>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              Project Management System\r\n            </Typography>\r\n            {auth && (\r\n              <div className={classes.profIcon}>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle style={{ fontSize: 40 }} />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\t\r\n                  anchorOrigin={{\t\r\n                    vertical: \"top\",\t\r\n                    horizontal: \"right\"\t\r\n                  }}\t\r\n                  keepMounted\t\r\n                  transformOrigin={{\t\r\n                    vertical: \"top\",\t\r\n                    horizontal: \"right\"\t\r\n                  }}\t\r\n                  open={open}\t\r\n                  onClose={handleClose}\t\r\n                >\t\r\n                  <MenuItem onClick={handleClose}>\t\r\n                    <Link\t\r\n                      to=\"/cp@2707user\"\t\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n                    >\t\r\n                      Change Password\t\r\n                    </Link>\t\r\n                  </MenuItem>\t\r\n                  <MenuItem onClick={handleClose}>\t\r\n                    <Link\t\r\n                      to=\"/logout\"\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n                    >\t\r\n                      Logout\t\r\n                    </Link>\t\r\n                  </MenuItem>\t\r\n                </Menu>\t\r\n              </div>\t\r\n            )}\t\r\n            <Link\t\r\n              to=\"/cp@2707user\"\t\r\n              className={classes.navMenu}\t\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                startIcon={<AssignmentIndIcon />}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Link>\r\n            <Link\r\n              to=\"/logout\"\r\n              className={classes.navMenu}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n              starticon={<ExitToAppIcon />}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\t\r\n                style={{ marginLeft: \"20px\" }}\t\r\n                startIcon={<ExitToAppIcon />}\r\n              >\r\n                Logout\r\n              </Button>\t\r\n            </Link>\t\r\n          </Toolbar>\t\r\n        </AppBar>\t\r\n      </div>\t\r\n    );\t\r\n  }  \r\n}\r\n","import React, { Component } from \"react\";\r\nimport MenuAppBar from \"./MenuAppBar\";\r\n\r\nclass LoggedNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuAppBar />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedNavbar;\r\n","var SERVER_URL  = \"\"\r\nif (process.env.NODE_ENV === \"production\")\r\n\tSERVER_URL = \"\";\r\nelse\t\r\n\tSERVER_URL = \"http://127.0.0.1:8000\";\r\nexport default SERVER_URL;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Image from \"./sample.PNG\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textAlign: \"left\",\r\n    width: \"87%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: \"20px\",\r\n    \"borderLeftColor\": \"blue\",\r\n    \"border-left-style\": \"solid\",\r\n    \"border-left-width\": \"10px\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"20px\",\r\n    letterSpacing: \"1px\",\r\n    marginBottom:\"3px\"\r\n  },\r\n  image:{\r\n    [theme.breakpoints.up(\"md\")]:{\r\n      marginLeft:\"20%\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n      width:\"95%\"\r\n    }\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h4\" style={{ fontWeight: \"600\",fontFamily:\"sans-serif\",marginBottom:\"10px\" }}>\r\n          Instructions -\r\n        </Typography>\r\n\r\n        \r\n        <Typography className={classes.title}>\r\n          1. Please fill the below form to create project list of your department          \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          2. Project list file should be of <b>.csv</b>  or <b>.xlsx</b> format          \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          3. The first row of the file should be <b>name,rollno,email,group_name </b>\r\n             actual values should start from second row \r\n        </Typography><br/>\r\n        <img src={Image} className ={classes.image} alt=\"sample\"/><br/>\r\n        <Typography className={classes.title}>\r\n          4. On submitting the form you will create a list mentioned in the file\r\n          and will give authorities to emails mentioned by you\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport \"./Footer.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: \"#333\",\r\n    color: \"#fff\",\r\n    paddingTop: \"20px\"\r\n  },\r\n  rootItems: {\r\n    padding: \"8px\"\r\n  },\r\n  foot: {\r\n    margin: \"auto\"\r\n  },\r\n  footEnd: {\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#222\",\r\n    margin: \"0\"\r\n  }\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <footer>\r\n        <Grid container className={classes.root}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography><a style={{color:\"#fff\"}} target=\"blank\" href=\"/about.html\"> About</a></Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms And Conditions</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms of Use</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <BusinessIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>\r\n                  K.J.Somaiya Institute Of Engineering And Information\r\n                  Technology\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography> Sion,Mumbai</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <ContactMailIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>abcd@gmail.com</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>36326623966996</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.footEnd}>\r\n            <Typography>\r\n              &copy;{new Date().getFullYear()} KJSIEIT,Inc. All Rights Reserved.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '1.5rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '2rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    width: \"90%\",\r\n    textAlign: \"left\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"30px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"1px\",\r\n    fontFamily:\"sans-serif\",\r\n    marginTop:\"5px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  icon : {\r\n    fontSize: \"7rem\",\r\n    color:\"powderblue\"\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  const userInfo = props;\r\n  const academicYear=props.academicYear;\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <ThemeProvider theme={theme}>\r\n          <Grid container >\r\n            <Grid item xs={12} sm={2}>\r\n              <AccountBoxRoundedIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs={12} sm ={10}>\r\n                <br/>\r\n                <Grid container >\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Name:</b> {userInfo.userInfo.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Designation:</b> {userInfo.userInfo.type}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Department:</b> {userInfo.userInfo.department}\r\n                      </Typography>\r\n                    </Grid>            \r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b>Email:</b> {userInfo.userInfo.email}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      {academicYear!==null?(\r\n                        <Typography className={classes.title}>\r\n                          <b>Academic Year:</b> {academicYear}\r\n                        </Typography>\r\n                      ):(null)}\r\n                    </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </ThemeProvider>\r\n          \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","export const toFirstCharUppercase = name =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {\r\n  CircularProgress,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  LinearProgress,\r\n  MenuItem,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport CloudDownload from \"@material-ui/icons/CloudDownload\";\r\n// import FileDownload from \"@material-ui/icons/FileDownload\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  dueDateContainer: {\r\n    borderRadius: \"0px\"\r\n  },\r\n  downloadButton: {\r\n    float: \"right\",\r\n    marginTop: \"5%\",\r\n    marginBottom: \"10px\"\r\n  }\r\n}));\r\n\r\n// let Guides = null;\r\n\r\nexport default function ControlledAccordions(props) {\r\n  let Groups = props.Groups;\r\n  let dueDate = Groups[0].dueDate;\r\n  let Guides = props.Guides;\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n  const [assignLoading, setAssignLoading] = React.useState(false);\r\n  const [guide, setGuide] = React.useState(null);\r\n  const [guideE, setGuideE] = React.useState(null);\r\n  const [changeDuedate, setDueDate] = React.useState(new Date());\r\n  const [DueDateOpen, setDOpen] = React.useState(false);\r\n  const [downLoading, setDownLoading] = React.useState(false);\r\n  const [SdownLoading, setSDownLoading] = React.useState(false);\r\n  let showButton = false;\r\n\r\n  const handleGuideChange = e => {\r\n    setGuide(e.target.value);\r\n    Guides.map(Guide => {\r\n      if (Guide.name === e.target.value) {\r\n        setGuideE(Guide.email);\r\n      }\r\n      return null;\r\n    });\r\n    return null;\r\n  };\r\n\r\n  //Change DueDate-------------------------------\r\n  //to change format of the month\r\n  const appendLeadingZeroes = n => {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  };\r\n\r\n  //Submission List\r\n  const downloadSubmissionList = () => {\r\n    setSDownLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/submissionList\",\r\n      responseType: \"blob\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        const url = window.URL.createObjectURL(new Blob([res.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", \"Submission List.xlsx\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        setSDownLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setSDownLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const downloadProjectList = () => {\r\n    setDownLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/excel\",\r\n      responseType: \"blob\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        const url = window.URL.createObjectURL(new Blob([res.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", \"Project List.xlsx\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        setDownLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setDownLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChangeDueDateDialogOpen = () => {\r\n    setDOpen(true);\r\n  };\r\n  const handleChangeDueDateDialogClose = () => {\r\n    setDOpen(false);\r\n  };\r\n  const handleChangeDueDate = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/updateDueDate\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        dueDate: changeDuedate\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Due Changed\");\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        alert(\"DueDate didnt Change\");\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleSetDueDate = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      appendLeadingZeroes(current_datetime.getDate());\r\n    setDueDate(formatted_date);\r\n  };\r\n\r\n  // Assign Guide button\r\n\r\n  const assignGuide = (e, id) => {\r\n    if (guide === null) {\r\n      alert(\"Please select a guide first\");\r\n    } else {\r\n      setAssignLoading(true);\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name: guide,\r\n          email: guideE,\r\n          groupId: id\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          setAssignLoading(false);\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"Guide not assigned\");\r\n          setAssignLoading(false);\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChangeGuide = id => {\r\n    Groups.map(Group => {\r\n      if (Group.id === id) {\r\n        Group.guide.name = null;\r\n        Group.guide.email = null;\r\n      }\r\n      return(null);\r\n    });\r\n    setGuide(null);\r\n    return null;\r\n  };\r\n\r\n  // Tabs handleChange\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // SwipeableView index changing\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n  // Accordion handleChange\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // let e={}\r\n\r\n  if (Guides !== null && Guides.length !== 0) {\r\n    if (guide === null) {\r\n      setGuide(Guides[0].name);\r\n      setGuideE(Guides[0].email);\r\n    }\r\n    return (\r\n      <div>\r\n        {/* DIALOG FOR CHANGE DUEDATE */}\r\n        <Dialog\r\n          open={DueDateOpen}\r\n          onClose={handleChangeDueDateDialogClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\" style={{ margin: \"auto 100px\" }}>\r\n            Change DueDate\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>Select a new DueDate</DialogContentText>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                autoOk\r\n                required\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                format=\"yyyy/MM/dd\"\r\n                value={changeDuedate}\r\n                onChange={handleSetDueDate}\r\n                InputAdornmentProps={{ position: \"start\" }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleChangeDueDateDialogClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleChangeDueDate} color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <div></div>\r\n        {/* DIALOG END */}\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <div>\r\n              <Card className={classes.dueDateContainer}>\r\n                <Grid container style={{ padding: \"5px\" }}>\r\n                  <Grid item xs={8} style={{ margin: \"auto\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      &nbsp;&nbsp;\r\n                      <b>\r\n                        DueDate for Submitting Proposals:&nbsp;\r\n                        {dueDate.split(\"T\")[0]}\r\n                      </b>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4} style={{ textAlign: \"right\" }}>\r\n                    <Button\r\n                      onClick={handleChangeDueDateDialogOpen}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Change DueDate\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Card>\r\n            </div>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChangeT}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n            >\r\n              <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n              <Tab label=\"Approval by HOD left\" {...a11yProps(1)} />\r\n              <Tab label=\"Applied\" {...a11yProps(2)} />\r\n              <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n                let pref1AdminApproval = false;\r\n                let pref2AdminApproval = false;\r\n                let pref3AdminApproval = false;\r\n                let pref1HodApproval = false;\r\n                let pref2HodApproval = false;\r\n                let pref3HodApproval = false;\r\n\r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n\r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  pref1AdminApproval = pref1.approval.admin;\r\n                  pref2AdminApproval = pref2.approval.admin;\r\n                  pref3AdminApproval = pref3.approval.admin;\r\n                  pref1HodApproval = pref1.approval.hod;\r\n                  pref2HodApproval = pref2.approval.hod;\r\n                  pref3HodApproval = pref3.approval.hod;\r\n                }\r\n\r\n                if (\r\n                  (pref1AdminApproval && pref1HodApproval) ||\r\n                  (pref2AdminApproval && pref2HodApproval) ||\r\n                  (pref3AdminApproval &&\r\n                    pref3HodApproval &&\r\n                    Group.proposals.length !== 0)\r\n                ) {\r\n                  showButton = true;\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography\r\n                                style={{ color: \"green\" }}\r\n                                variant=\"h5\"\r\n                              >\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item container xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <React.Fragment>\r\n                                <Grid item xs={3}>\r\n                                  <Button\r\n                                    onClick={routeChange}\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    Show Preferences\r\n                                  </Button>\r\n                                </Grid>\r\n                                <Grid container item xs={9}>\r\n                                  {Group.guide.name === null ? (\r\n                                    <React.Fragment>\r\n                                      <Grid item xs={5} />\r\n                                      <Grid item xs={3}>\r\n                                        <TextField\r\n                                          size=\"medium\"\r\n                                          id=\"selectGuide\"\r\n                                          select\r\n                                          value={guide}\r\n                                          onChange={handleGuideChange}\r\n                                          helperText=\"Please select Guide\"\r\n                                        >\r\n                                          {Guides.map(Guide => {\r\n                                            return (\r\n                                              <MenuItem\r\n                                                key={Guide.email}\r\n                                                value={Guide.name}\r\n                                              >\r\n                                                {Guide.name}\r\n                                              </MenuItem>\r\n                                            );\r\n                                          })}\r\n                                        </TextField>\r\n                                      </Grid>\r\n                                      <Grid item xs={1} />\r\n                                      <Grid item xs={3}>\r\n                                        {!assignLoading ? (\r\n                                          <Button\r\n                                            style={{ marginRight: \"20px\" }}\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            onClick={e => assignGuide(e, id)}\r\n                                          >\r\n                                            Assign Guide\r\n                                          </Button>\r\n                                        ) : (\r\n                                          <CircularProgress />\r\n                                        )}\r\n                                      </Grid>\r\n                                    </React.Fragment>\r\n                                  ) : (\r\n                                    <React.Fragment>\r\n                                      <Grid item xs={2} />\r\n                                      <Grid item xs={3}>\r\n                                        <Typography\r\n                                          variant=\"h6\"\r\n                                          color=\"secondary\"\r\n                                        >\r\n                                          Guide Assigned:\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                      <Grid item xs={3}>\r\n                                        <Typography\r\n                                          variant=\"h6\"\r\n                                          color=\"secondary\"\r\n                                        >\r\n                                          {Group.guide.name}\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                      <Grid item xs={4}>\r\n                                        <Button\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                          onClick={() => {\r\n                                            handleChangeGuide(id);\r\n                                          }}\r\n                                        >\r\n                                          Change Guide\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    </React.Fragment>\r\n                                  )}\r\n                                </Grid>\r\n                              </React.Fragment>\r\n                            ) : (\r\n                              <Button\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n\r\n              <React.Fragment>\r\n                {/* SUBMISSION LIST BUTTON */}\r\n                {SdownLoading ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.downloadButton}\r\n                    style={{ maxWidth: \"153.24px\", maxHeight: \"40px\" }}\r\n                  >\r\n                    <CircularProgress\r\n                      size=\"2rem\"\r\n                      color=\"white\"\r\n                      style={{ padding: \"0 40px\" }}\r\n                    />\r\n                  </Button>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    {showButton ? (\r\n                      <React.Fragment>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          className={classes.downloadButton}\r\n                          startIcon={<CloudDownload />}\r\n                          onClick={downloadSubmissionList}\r\n                        >\r\n                          Submission List\r\n                        </Button>\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                  </React.Fragment>\r\n                )}\r\n\r\n                {downLoading ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.downloadButton}\r\n                    style={{ maxWidth: \"153.24px\", maxHeight: \"40px\" }}\r\n                  >\r\n                    <CircularProgress\r\n                      size=\"2rem\"\r\n                      color=\"white\"\r\n                      style={{ padding: \"0 40px\" }}\r\n                    />\r\n                  </Button>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    {showButton ? (\r\n                      <React.Fragment>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.downloadButton}\r\n                          startIcon={<CloudDownload />}\r\n                          onClick={downloadProjectList}\r\n                          style={{ marginRight: \"20px\" }}\r\n                        >\r\n                          Project List\r\n                        </Button>\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                  </React.Fragment>\r\n                )}\r\n              </React.Fragment>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n\r\n                let pref1AdminApproval = false;\r\n                let pref2AdminApproval = false;\r\n                let pref3AdminApproval = false;\r\n                let pref1HodApproval = false;\r\n                let pref2HodApproval = false;\r\n                let pref3HodApproval = false;\r\n\r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n\r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  pref1AdminApproval = pref1.approval.admin;\r\n                  pref2AdminApproval = pref2.approval.admin;\r\n                  pref3AdminApproval = pref3.approval.admin;\r\n                  pref1HodApproval = pref1.approval.hod;\r\n                  pref2HodApproval = pref2.approval.hod;\r\n                  pref3HodApproval = pref3.approval.hod;\r\n                }\r\n\r\n                if (\r\n                  (pref1AdminApproval && !pref1HodApproval) ||\r\n                  (pref2AdminApproval && !pref2HodApproval) ||\r\n                  (pref3AdminApproval &&\r\n                    !pref3HodApproval &&\r\n                    Group.proposals.length !== 0)\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll-no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography\r\n                                style={{ color: \"green\" }}\r\n                                variant=\"h5\"\r\n                              >\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n                let pref1Approval = false;\r\n                let pref2Approval = false;\r\n                let pref3Approval = false;\r\n\r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n\r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  pref1Approval = pref1.approval.admin;\r\n                  pref2Approval = pref2.approval.admin;\r\n                  pref3Approval = pref3.approval.admin;\r\n                }\r\n\r\n                if (\r\n                  !pref1Approval &&\r\n                  !pref2Approval &&\r\n                  !pref3Approval &&\r\n                  Group.proposals.length !== 0\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.name}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.rollno}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography\r\n                                style={{ color: \"green\" }}\r\n                                variant=\"h5\"\r\n                              >\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={3} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n\r\n                if (Group.proposals.length === 0) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                          style={{ width: \"100%\", padding: \"auto\" }}\r\n                        >\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.name}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll-no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.rollno}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <Typography>\r\n                              <b>Due Date for Submitting Proposals:</b>\r\n                              &nbsp;&nbsp;\r\n                              {DueDate}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n          </SwipeableViews>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <LinearProgress />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    list: {\r\n      width: 250\r\n    },\r\n    fullList: {\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  ButtonStyle: {\r\n    color: \"#000\",\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: \"0px 5px\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"2px\",\r\n    marginRight: \"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const histor = useHistory();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => histor.push(\"/admin\")\r\n    },\r\n    {\r\n      text: \"Groups\",\r\n      icon: <PeopleAltIcon />,\r\n      onClick: () => histor.push(\"/admin/groups\")\r\n    },\r\n    {\r\n      text: \"Faculty\",\r\n      icon: <SupervisedUserCircleIcon />,\r\n      onClick: () => histor.push(\"/admin/guides\")\r\n    },\r\n    {\r\n      text: \"Archives\",\r\n      icon: <ArchiveIcon />,\r\n      onClick: () => histor.push(\"/admin/archives\")\r\n    }\r\n  ];\r\n\r\n  const toggleDrawer = (anchor, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = anchor => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <ListItem\r\n                button\r\n                key={text}\r\n                onClick={onClick}\r\n                style={{ marginRight: \"40px\" }}\r\n              >\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n              <Divider />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"left\"].map(anchor => (\r\n        <React.Fragment key={anchor}>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n          <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n              <Toolbar>\r\n                <MenuIcon\r\n                  fontSize=\"large\"\r\n                  onClick={toggleDrawer(anchor, true)}\r\n                  className={classes.ButtonStyle}\r\n                  style={{}}\r\n                />\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                  Project Management System\r\n                </Typography>\r\n                {auth && (\r\n                  <div className={classes.profIcon}>\r\n                    <IconButton\r\n                      aria-label=\"account of current user\"\r\n                      aria-controls=\"menu-appbar\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMenu}\r\n                      color=\"inherit\"\r\n                    >\r\n                      <AccountCircle style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"menu-appbar\"\r\n                      anchorEl={anchorEl}\r\n                      anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\"\r\n                      }}\r\n                      keepMounted\r\n                      transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\"\r\n                      }}\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                    >\r\n                      <MenuItem onClick={handleClose}>\r\n                        <Link\r\n                          to=\"/cp@2707user\"\r\n                          style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                        >\r\n                          Change Password\r\n                        </Link>\r\n                      </MenuItem>\r\n                      <MenuItem onClick={handleClose}>\r\n                        <Link\r\n                          to=\"/logout\"\r\n                          style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </div>\r\n                )}\r\n                <Link\r\n                  to=\"/cp@2707user\"\r\n                  className={classes.navMenu}\r\n                  style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                >\r\n                  <Button\r\n                    color=\"inherit\"\r\n                    variant=\"contained\"\r\n                    startIcon={<AssignmentIndIcon />}\r\n                  >\r\n                    Change Password\r\n                  </Button>\r\n                </Link>\r\n                <Link\r\n                  to=\"/logout\"\r\n                  className={classes.navMenu}\r\n                  style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                >\r\n                  <Button\r\n                    color=\"inherit\"\r\n                    variant=\"contained\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    startIcon={<ExitToAppIcon />}\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </Link>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport AdminInstructions from \"./AdminInstructions\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LinearProgress,\r\n  TextField,\r\n  withStyles,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Input,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SideMenu from \"./SideMenu\"\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\n//getting todays date\r\nvar tempDate = new Date();\r\nvar date =\r\n  tempDate.getFullYear() +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getMonth() + 1) +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getDate());\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet userInfo = [];\r\nlet Ad = null;\r\nlet filled = false;\r\nlet Groups = null;\r\nlet Guides=null;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\nlet a = new Date()\r\nvar academicYearList = [`${a.getFullYear()-1}-${a.getFullYear()}`,`${a.getFullYear()}-${a.getFullYear()+1}`,`${a.getFullYear()+1}-${a.getFullYear()+2}`]\r\n\r\nclass AdminContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    \r\n    this.state = {\r\n      hod: \"\",\r\n      hodName: \"\",\r\n      student_file: null,\r\n      adData: null,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      loading: false,\r\n      prefDueDate: date,\r\n      Academicyear: academicYearList[0]\r\n    };\r\n\r\n  }\r\n\r\n  //to change format of the month\r\n  appendLeadingZeroes(n) {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  handleDateChange = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getDate());\r\n    this.setState({ prefDueDate: formatted_date });\r\n    let a = new Date(\"2020-12-01\");\r\n    if (current_datetime < a) {\r\n      // console.log(\"success\");\r\n    } else if (current_datetime > a) {\r\n      // console.log(\"failed\");\r\n    }\r\n    // console.log(a);\r\n  };\r\n\r\n  //function to handle Academic Year\r\n  handleAcademicYear = e => {\r\n    this.setState({ Academicyear: e.target.value });\r\n  };\r\n\r\n  hodHandler = e => {\r\n    this.setState({ hod: e.target.value });\r\n  };\r\n  hodNameHandler = e => {\r\n    this.setState({ hodName: e.target.value });\r\n  };\r\n\r\n  // picHandler = e => {\r\n  //   this.setState({ pic: e.target.value });\r\n  // };\r\n  // picNameHandler = e => {\r\n  //   this.setState({ picName: e.target.value });\r\n  // };\r\n  // igHandler = e => {\r\n  //   this.setState({ ig: e.target.value });\r\n  // };\r\n  // igNameHandler = e => {\r\n  //   this.setState({ igName: e.target.value });\r\n  // };\r\n  // studentfileHandler = e => {\r\n  //   this.fileValidation(e);\r\n  // };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    var formData = new FormData();\r\n    formData.append(\"hodName\", this.state.hodName);\r\n    formData.append(\"hodEmail\", this.state.hod);\r\n    formData.append(\"student_file\", this.state.student_file);\r\n    formData.append(\"dueDate\", this.state.prefDueDate);\r\n    formData.append(\"acadYear\", this.state.Academicyear);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/admin\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n    this.setState({ hod: \"\", student_file: null, hodName: \"\" });\r\n  };\r\n\r\n  fileValidation = e => {\r\n    var fileInput = document.getElementById(\"file\");\r\n    var filePath = fileInput.value;\r\n    // Allowing file type\r\n    var allowedExtensions = /(\\.csv|\\.xlsx)$/i;\r\n\r\n    if (!allowedExtensions.exec(filePath)) {\r\n      alert(\"Invalid file type\");\r\n      fileInput.value = \"\";\r\n      return false;\r\n    } else {\r\n      this.setState(\r\n        { student_file: e.target.files[0] },\r\n      );\r\n    }\r\n  };\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n  checkGuides(){\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n    .then(res => {\r\n      Guides = res.data;\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let academicYear=this.state.Academicyear\r\n    const { classes } = this.props;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <LoggedNavbar />\r\n          <LinearProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.adData === null || Guides===null) {\r\n      this.checkData();\r\n      this.checkGuides();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n\r\n    if (this.state.filled === true) {\r\n      if (Ad === 0) {\r\n        return (\r\n          <div className={classes.root}>\r\n            <SideMenu/>\r\n            <Profile userInfo={userInfo} academicYear={null} />\r\n            <AdminInstructions />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"50px auto\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\"\r\n              }}\r\n            >\r\n              <form\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  marginTop: \"30px\",\r\n                  padding: \"20px 30px\"\r\n                }}\r\n                onSubmit={this.submitHandler}\r\n              >\r\n                <Typography variant=\"h4\" style={{ fontWeight: \"600\",fontFamily:\"sans-serif\",marginBottom:\"10px\"}}>\r\n                  Create Project List\r\n                </Typography>\r\n                <hr size = \"5\" color = \"blue\"/>\r\n                <br/><br/>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Enter Head Of Department Details:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hodName\"\r\n                      label=\"Enter Head of Department Name\"\r\n                      value={this.state.hodName}\r\n                      onChange={this.hodNameHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hod\"\r\n                      label=\"Enter Head of Department Email\"\r\n                      value={this.state.hod}\r\n                      onChange={this.hodHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  {/* <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student List File:\r\n                    </Typography>\r\n                  </Grid> */}\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Academic Year:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {\" \"}\r\n                        <FormControl\r\n                          variant=\"outlined\"\r\n                          label=\"Academic Year\"\r\n                          style={{ width: \"60%\", padding: \"8px\" }}\r\n                        >\r\n                          <Select\r\n                            required\r\n                            value={this.state.Academicyear}\r\n                            onChange={this.handleAcademicYear}\r\n                            name=\"Academic Year\"\r\n                          >\r\n                          <MenuItem value={academicYearList[0]}>{academicYearList[0]}</MenuItem>\r\n                          <MenuItem value={academicYearList[1]}>{academicYearList[1]}</MenuItem>\r\n                          <MenuItem value={academicYearList[2]}>{academicYearList[2]}</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Due Date for Proposal Submission:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            autoOk\r\n                            required\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"yyyy/MM/dd\"\r\n                            value={this.state.prefDueDate}\r\n                            InputAdornmentProps={{ position: \"start\" }}\r\n                            onChange={this.handleDateChange}\r\n                            style={{ width: \"60%\", padding: \"8px\" }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student Group List:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <Input\r\n                      className={classes.Input}\r\n                      type=\"file\"\r\n                      id=\"file\"\r\n                      name=\"student_file\"\r\n                      onChange={this.fileValidation}\r\n                      style={{\r\n                        width: \"60%\",\r\n                        padding: \"12px\"\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <div style={{ alignItems: \"center\", margin: \"0 30%\" }}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                        startIcon={<CloudUploadIcon />}\r\n                        style={{\r\n                          padding: \"8px 50px\",\r\n                          fontSize: \"18px\",\r\n                          backgroundColor: \"#1877f2\",\r\n                          margin: \"25px\"\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Data submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Data not submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </div>\r\n        );\r\n      }\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <SideMenu/>\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n            {}\r\n              <ProjectList Groups={Groups} Guides={Guides} />\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AdminContent from \"../components/Admin-component/AdminContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n// var today = new Date(),\r\n//   date = today.getDate();\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <AdminContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../URL\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./background2.jpg\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet Data = \"\";\r\nlet data_access = \"\";\r\nlet Ad = [];\r\nvar today = new Date(),\r\n  date =\r\n    today.getDate() +\r\n    \"a\" +\r\n    today.getMonth() +\r\n    \"V\" +\r\n    today.getFullYear() +\r\n    \"hello\" +\r\n    50 +\r\n    \"Z\" +\r\n    today.getDate();\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    background: \"transparent\",\r\n    // boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n    borderRadius: \"6px\",\r\n    float: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    paddingTop: \"40px\",\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      paddingTop: \"20px\"\r\n    }\r\n  },\r\n  leftpaper: {\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundSize: \"cover\",\r\n    height: \"100%\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#1877f2\",\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    marginTop: \"30px\"\r\n  },\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  title: {\r\n    paddingTop: \"50px\",\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"775\")]: {\r\n      fontSize: \"45px\"\r\n    },\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      fontSize: \"40px\"\r\n    }\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n\r\n    if (token == null) {\r\n      loggedIn = false;\r\n      // console.log(\"token is null\");\r\n    }\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedIn,\r\n      user: \"\",\r\n      msg: \"\",\r\n      invalidCredentials: false,\r\n      getResponse: false\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChange = name => ({ target: { value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    //Login Logic\r\n    this.setState({ getResponse: true });\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL+\"/login\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        email: username,\r\n        password: password\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n      }\r\n    })\r\n      .then(\r\n        function (response) {\r\n          Data = response.data.type;\r\n          data_access = response.data.access_token;\r\n          localStorage.setItem(\"access_token\", response.data.access_token);\r\n          this.setState({\r\n            user: response.data.type,\r\n            loggedIn: true,\r\n            msg: \"set\",\r\n            getResponse: false\r\n          });\r\n        }.bind(this)\r\n      )\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ invalidCredentials: true, getResponse: false });\r\n      });\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(function (res) {\r\n        Ad = res.data;\r\n        // console.log(Ad);\r\n      })\r\n      // .then(() => {\r\n      //   localStorage.setItem(\"data\", \"set\");\r\n      // })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getToken() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === null) {\r\n      this.setState({\r\n        loggedIn: false\r\n      });\r\n      // console.log(this.state.loggedIn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (Data === \"admin\") {\r\n      this.checkData();\r\n    }\r\n    if (Data === \"yami\") {\r\n      localStorage.setItem(\"token\", \"N1g70xwfa0V6oCXVweqt\" + date);\r\n    }\r\n    if (Data === \"admin\") {\r\n      localStorage.setItem(\"token\", \"admin\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"guide\") {\r\n      localStorage.setItem(\"token\", \"guide\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"ig\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"pic\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"hod\") {\r\n      localStorage.setItem(\"token\", \"hod\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"student\") {\r\n      localStorage.setItem(\"token\", \"student\");\r\n      localStorage.setItem(\"access_token\",data_access);\r\n    }\r\n    Data = \"\";\r\n    if (this.state.loggedIn) {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (token === \"N1g70xwfa0V6oCXVweqt\" + date)\r\n        return <Redirect to=\"/yami\" exact />;\r\n      if (token === \"admin\") return <Redirect to=\"/admin\" exact />;\r\n      if (token === \"student\") return <Redirect to=\"/student\" exact />;\r\n      if (token === \"faculty\") return <Redirect to=\"/faculty\" exact />;\r\n      if (token === \"hod\") return <Redirect to=\"/hod\" exact />;\r\n      if (token === \"guide\") return <Redirect to=\"/guide\" exact />;\r\n    }\r\n    const handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n      this.setState({ invalidCredentials: false });\r\n    };\r\n    // if (this.state.loggedIn) {\r\n    //   return <Redirect to=\"/admin\" />;\r\n    // }\r\n    if (this.state.getResponse) {\r\n      return <LinearProgress />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.leftpaper}>\r\n          <Typography variant=\"h2\" className={classes.title}>\r\n            <b>Project Management System</b>\r\n          </Typography>\r\n          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n            <CssBaseline />\r\n            <Avatar variant=\"circle\" className={classes.avatar}>\r\n              <PersonIcon fontSize=\"large\" />\r\n            </Avatar>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              <b>User Login</b>\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={this.submitForm}>\r\n              <TextField\r\n                type=\"email\"\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange(\"username\")}\r\n                className={classes.fields}\r\n              />\r\n              <TextField\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange(\"password\")}\r\n                autoComplete=\"current-password\"\r\n                className={classes.fields}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n            <Link\r\n              to=\"/forgetPassword\"\r\n              style={{ textDecoration: \"underline\", color: \"#fff\", marginRight:\"5px\" }}\r\n            >\r\n            forgot password ? reset now\r\n            </Link>\r\n            <Snackbar\r\n              open={this.state.invalidCredentials}\r\n              autoHideDuration={6000}\r\n              onClose={handleClose}\r\n            >\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                Invalid Username/Password Please try again\r\n              </Alert>\r\n            </Snackbar>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Login);\r\n// <Grid container>\r\n//   <Hidden xsDown>\r\n//     <Grid item   md={7}   className={classes.leftpaper}>\r\n//     </Grid>\r\n//   </Hidden>\r\n//   <Grid item  component=\"main\" maxWidth=\"xs\" md={5}>\r\n//     <CssBaseline />\r\n//     <div\r\n//       className={classes.paper}\r\n//       style={{\r\n//         boxShadow:\r\n//           \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n//         backgroundColor: \"#fff\",\r\n//         borderRadius: \"6px\"\r\n//       }}\r\n//     >\r\n//       <Avatar\r\n//         variant=\"circle\"\r\n//         className={classes.avatar}\r\n//         style={{ marginTop: \"30px\" }}\r\n//       >\r\n//         <PersonIcon fontSize=\"large\" />\r\n//       </Avatar>\r\n//       <Typography component=\"h2\" variant=\"h6\">\r\n//         User Login\r\n//       </Typography>\r\n//       <form\r\n//         className={classes.form}\r\n//         onSubmit={this.submitForm}\r\n//         noValidate\r\n//       >\r\n//         <TextField\r\n//           type=\"email\"\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           id=\"username\"\r\n//           label=\"username\"\r\n//           value={this.state.username}\r\n//           onChange={this.handleChange(\"username\")}\r\n//           className={classes.fields}\r\n//           autoFocus\r\n//         />\r\n//         <TextField\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           label=\"Password\"\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           value={this.state.password}\r\n//           onChange={this.handleChange(\"password\")}\r\n//           autoComplete=\"current-password\"\r\n//           className={classes.fields}\r\n//         />\r\n\r\n//         <Button\r\n//           type=\"submit\"\r\n//           fullWidth\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           className={classes.submit}\r\n//           style={{\r\n//             padding: \"10px\",\r\n//             fontSize: \"18px\",\r\n//             fontWeight: \"bolder\",\r\n//             backgroundColor: \"#1877f2\",\r\n//             marginBottom: \"25px\"\r\n//           }}\r\n//         >\r\n//           Log In\r\n//         </Button>\r\n//       </form>\r\n//       <Snackbar\r\n//         open={this.state.invalidCredentials}\r\n//         autoHideDuration={6000}\r\n//         onClose={handleClose}\r\n//       >\r\n//         <Alert onClose={handleClose} severity=\"error\">\r\n//           Invalid Username/Password Please try again\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </div>\r\n//   </Grid>\r\n// </Grid>\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Logout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"access_token\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>You Have been Logged out</h1>\r\n        <button onClick={() => {window.location.reload(false)}}><Link to=\"/\">Login Again</Link></button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport {Typography, TextField, Grid, Button, withStyles, CircularProgress, Tabs, Tab, Box, AppBar, createMuiTheme, ThemeProvider, responsiveFontSizes } from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet stuData = null;\r\nlet Stu = null;\r\nlet filled = false;\r\nlet Proposals = null;\r\nlet pref1=[];\r\nlet pref2=[];\r\nlet pref3=[];\r\n\r\nconst useStyles = theme => ({\r\n  buttonprop: {\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  TextField: {\r\n    width: \"100%\"\r\n  },\r\n  typography:{\r\n    fontSize:\"16px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  typographyFilled:{\r\n    fontWeight:\"700\",\r\n    fontSize:\"20px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  tabPanel:{\r\n    borderTop:\"1px solid #000\",\r\n    width:\"100%\"\r\n  },\r\n  largeWinTabs:{\r\n    [theme.breakpoints.down('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n  smallWinTabs:{\r\n    [theme.breakpoints.up('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nclass StudentContent extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      preferences: [\r\n        {\r\n          filled: false,\r\n          prefno: 1,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 2,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 3,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        }\r\n      ],\r\n      currentStep: 1,\r\n      stuData: null,\r\n      tabValue: 0,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      formFilled: false,\r\n      loading: false,\r\n      open:false\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({open:true})\r\n  };\r\n\r\n  handleAgreeClickClose = () => {\r\n    Stu=0;\r\n    this.setState({open:false})\r\n  }\r\n  handleCancelClickClose = () => {\r\n    this.setState({open:false})\r\n  }\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      stuData: null\r\n    });\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      tabValue: newValue\r\n    });\r\n  };\r\n\r\n  handleTopChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      //let prefno = prefs[i].prefno;\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Top = e.target.value;\r\n        //prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDosChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dos = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDsopChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dsop = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAgencyChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Agency = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMtapChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Mtap = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRedChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Red = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleShrChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Shr = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleFileChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        prefs[i].selectedFile = e.target.files[0];\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClick = (e, pn) => {\r\n    e.preventDefault();\r\n    if (this.state.currentStep === 3) {\r\n      let prefs = [...this.state.preferences];\r\n      for (var i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n          this.handleSubmit(e);\r\n        }\r\n      }\r\n    } else {\r\n      let prefs = [...this.state.preferences];\r\n      for (i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let pref1 = this.state.preferences[0];\r\n    let pref2 = this.state.preferences[1];\r\n    let pref3 = this.state.preferences[2];\r\n    let proposals = [\r\n      {\r\n        title: pref1.Top,\r\n        specialization: pref1.Dos,\r\n        details: pref1.Dsop,\r\n        agency: pref1.Agency,\r\n        method: pref1.Mtap,\r\n        result: pref1.Red,\r\n        requirements: pref1.Shr\r\n      },\r\n      {\r\n        title: pref2.Top,\r\n        specialization: pref2.Dos,\r\n        details: pref2.Dsop,\r\n        agency: pref2.Agency,\r\n        method: pref2.Mtap,\r\n        result: pref2.Red,\r\n        requirements: pref2.Shr\r\n      },\r\n      {\r\n        title: pref3.Top,\r\n        specialization: pref3.Dos,\r\n        details: pref3.Dsop,\r\n        agency: pref3.Agency,\r\n        method: pref3.Mtap,\r\n        result: pref3.Red,\r\n        requirements: pref3.Shr\r\n      }\r\n    ];\r\n    var formData = new FormData();\r\n    formData.append(\"proposals\", JSON.stringify(proposals));\r\n    formData.append(\"file1\", this.state.preferences[0].selectedFile);\r\n    formData.append(\"file2\", this.state.preferences[1].selectedFile);\r\n    formData.append(\"file3\", this.state.preferences[2].selectedFile);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n  };\r\n\r\n  checkData = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers : {\r\n                Authorization : 'Bearer '+localStorage.getItem(\"access_token\"),\r\n            }\r\n    })\r\n      .then(res => {\r\n        Stu = res.data.proposals.length;\r\n        Proposals = res.data.proposals;\r\n        pref1 = Proposals[0]\r\n        pref2 = Proposals[1]\r\n        pref3 = Proposals[2]\r\n        this.setState({\r\n          stuData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  _next = e => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n    this.handleClick(e, currentStep - 1);\r\n  };\r\n\r\n  _prev = () => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n  };\r\n\r\n  handleNext = e => {\r\n    e.preventDefault();\r\n    let currentStep = this.state.currentStep;\r\n    let {\r\n      Top,\r\n      Dos,\r\n      Dsop,\r\n      Agency,\r\n      Mtap,\r\n      Red,\r\n      Shr,\r\n      selectedFile\r\n    } = this.state.preferences[currentStep - 1];\r\n    if (\r\n      Top === \"\" ||\r\n      Dos === \"\" ||\r\n      Dsop === \"\" ||\r\n      Agency === \"\" ||\r\n      Mtap === \"\" ||\r\n      Red === \"\" ||\r\n      Shr === \"\" ||\r\n      selectedFile === null\r\n    ) {\r\n      alert(\"Please enter all the details of the preference\");\r\n    } else {\r\n      this.setState({ open: true });\r\n      this._next(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    stuData = this.state.stuData;\r\n    filled = this.state.filled;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (stuData === null) {\r\n      this.checkData();\r\n    }\r\n    if (filled === true) {\r\n      if (Stu === 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <form>\r\n              <Step1\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleClose={this.handleClose}\r\n                handleFileChange={this.handleFileChange}\r\n              />\r\n              <Step2\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                handleClose={this.handleClose}\r\n                _prev={this._prev}\r\n              />\r\n              <Step3\r\n                classes={classes}\r\n                openSuccess={this.state.openSuccess}\r\n                openFailure={this.state.openFailure}\r\n                handleClose={this.handleClose}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleSubmit={this.handleSubmit}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                _prev={this._prev}\r\n              />\r\n              {/* {this.previousButton()} */}\r\n            </form>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n      if (Stu !== 0) {\r\n        let value=this.state.tabValue;\r\n          return (\r\n            <React.Fragment>\r\n              {!(pref1.approval.admin||pref2.approval.admin||pref3.approval.admin)?(\r\n                <React.Fragment>\r\n                  <Button onClick={this.handleClickOpen} style={{float:\"right\",margin:\"5px 0\"}} variant=\"contained\" color=\"secondary\">\r\n                    Re-enter Proposals\r\n                  </Button>\r\n                  <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClickClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                  >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Re-enter the proposals?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                      <DialogContentText id=\"alert-dialog-description\">\r\n                        If you click ok then you have to re-enter the proposals completely. If you refresh the page or close the tabs then all your changes will be lost. \r\n                      </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={this.handleCancelClickClose} color=\"primary\" autoFocus>\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={this.handleAgreeClickClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </React.Fragment>\r\n              ):(null)}\r\n              <div className={classes.largeWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\" centered>\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </div>\r\n              <div className={classes.smallWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs variant=\"scrollable\" scrollButtons=\"on\" value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\">\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <CircularProgress />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step1(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 1) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 1\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step2(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 2) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 2\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n            {/* <Snackbar open={props.open} autoHideDuration={6000} onClose={props.handleClose}>\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preference 2 submitted successfully\r\n              </Alert>\r\n            </Snackbar> */}\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step3(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 3) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 3\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              type=\"submit\"\r\n              onClick={e => {\r\n                props.handleClick(e, props.currentStep);\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Snackbar\r\n              open={props.openSuccess}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preferences submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n              open={props.openFailure}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"error\">\r\n                Preferences not submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(StudentContent);\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from \"@material-ui/core\";\r\n\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nlet propF = false;\r\nlet fill = false;\r\nlet Group = null;\r\n\r\nconst StudentHomePage = (props) => {\r\n\r\n    Group=props.Group;\r\n    AppliedOn=props.AppliedOn;\r\n    DueDate=props.DueDate;\r\n    const filled = true;\r\n    const loading = false;\r\n    const classes = useStyles();\r\n    if(Group.proposals.length!==0){\r\n      propF=true\r\n    }\r\n    fill = filled;\r\n\r\n  function propApproved(proposals) {\r\n    let approved = false;\r\n    let propTitle = \"\";\r\n    proposals.map(proposal => {\r\n      if (proposal.approval.admin && proposal.approval.hod) {\r\n        approved = true;\r\n        propTitle = proposal.title;\r\n      }\r\n      return(null)\r\n    });\r\n\r\n    if (approved) {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}}  color=\"primary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ margin: \"20px 0\",float:\"left\",fontSize:\"20px\" }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposal <b>{propTitle}</b> has been approved. Please start working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}} color=\"secondary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{float:\"left\", margin: \"15px 0\",fontSize:\"20px\" }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposal <b>{propTitle}</b> has been approved. Please start working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}} color=\"primary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ margin: \"15px 0\",float:\"left\",fontSize:\"20px\"  }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"secondary\" variant=\"h4\">\r\n              Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{ margin: \"15px 0\" }} variant=\"h5\">\r\n              Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <div style={{ margin: \"auto\" }}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  if (fill && propF) {\r\n    let i = 1;\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Typography style={{ marginTop: \"20px\" }} variant=\"h4\">\r\n            Approval Status\r\n          </Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Proposal</TableCell>\r\n                  <TableCell align=\"center\">Proposal Title</TableCell>\r\n                  <TableCell align=\"center\">Admin</TableCell>\r\n                  <TableCell align=\"center\">Head of Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {proposals.map(proposal => (\r\n                  <TableRow key={proposal.title}>\r\n                    <TableCell align=\"center\">{i++}</TableCell>\r\n                    <TableCell align=\"center\">{proposal.title}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.admin ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.hod ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {propApproved(proposals)}\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  if (fill && !propF) {\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {proposals.length === 0 ? (\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              <b>Due Date for Submitting Proposals:</b>&nbsp;&nbsp;{DueDate}\r\n            </Typography>\r\n          ) : null}\r\n          {/* {(new Date(DueDate).getTime()<Date.now()?(\r\n            <Typography color=\"error\" style={{marginBottom: \"30px\",fontSize:\"30px\" }} variant=\"h3\">You have crossed Due Date.<br/></Typography>\r\n          ):(null))} */}\r\n          <Typography color=\"error\" style={{float:\"left\",fontSize:\"20px\" }} variant=\"h4\">\r\n            Preferences have not been filled.&nbsp;\r\n          </Typography><br/>\r\n          <Typography color=\"error\" style={{ marginBottom: \"30px\",float:\"left\",fontSize:\"20px\" }} variant=\"h4\">\r\n            Please fill your preferences from the Preferences tab.<br/>\r\n          </Typography>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return <CircularProgress />;\r\n};\r\n\r\nexport default StudentHomePage;\r\n","import React from 'react';\r\nimport { makeStyles, Typography, CircularProgress, Grid, Paper } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo:{\r\n        textAlign:\"Left\"\r\n    }\r\n}))\r\n\r\nlet Group = null;\r\n\r\nconst StudentCommentPage = (props) => {\r\n    Group = props.Group\r\n    const classes = useStyles();\r\n\r\n\r\n    if(Group === null){\r\n        return (\r\n            <div style={{ margin: \"auto\" }}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }else{\r\n        const {comments} = Group;\r\n        if(comments.length === 0){\r\n            return(\r\n                <React.Fragment>\r\n                    <Typography variant=\"h4\">No comments have been added</Typography>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n            comments.map(comment => {\r\n                let dt = new Date(comment.time)\r\n                return(\r\n                    <React.Fragment key={comment._id}>\r\n                        <Paper style={{backgroundColor:\"#e0e0e0\"}}>\r\n                            <Grid style={{margin:\"10px 35px\"}} container spacing={2}>\r\n                                <Grid className={classes.typo} item xs={12} sm={4}>\r\n                                    <Typography><b>Author</b> : {comment.author}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={6} sm={4}>\r\n                                    <Typography><b>Date</b> : {dt.getDate()}/{dt.getMonth()+1}/{dt.getFullYear()}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={6} sm={4}>\r\n                                    <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}</Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid className={classes.typo} item xs={12}>\r\n                                    <Typography><b>Comment</b> : {comment.text}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </React.Fragment>\r\n                );\r\n            }))\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentCommentPage;","import { CircularProgress, createMuiTheme, makeStyles, Paper, responsiveFontSizes, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, ThemeProvider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\nconst useStyles = makeStyles(theme => ({\r\n    tableContainer: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"50px\"\r\n      },\r\n      table: {\r\n        minWidth: 650\r\n      }\r\n  }));\r\n\r\nconst days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\nlet Group=null;\r\nlet Presentations = null;\r\n\r\nconst StudentPresentation = (props) => {\r\n    const classes = useStyles();\r\n    Group=props.Group;\r\n    Presentations=Group.presentation\r\n    Presentations.sort((a,b)=>(new Date(a.scheduled_date).getTime()>new Date(b.scheduled_date).getTime())?1:-1)\r\n    if(Group===null){\r\n        return(\r\n            <React.Fragment>\r\n                <CircularProgress />\r\n            </React.Fragment>\r\n        )\r\n    }else{\r\n        if(Presentations.length!==0){\r\n            return(\r\n                <React.Fragment>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h4\">Presentation Details</Typography>\r\n                        <TableContainer\r\n                            style={{ backgroundColor: \"#d3d3d3\" }}\r\n                            className={classes.tableContainer}\r\n                            component={Paper}\r\n                        >\r\n                            <Table\r\n                            className={classes.table}\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                            >\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                    <TableCell align=\"center\">No.</TableCell>\r\n                                    <TableCell align=\"center\">Date</TableCell>\r\n                                    <TableCell align=\"center\">Organisation</TableCell>\r\n                                    <TableCell align=\"center\">Subject Knowledge</TableCell>\r\n                                    <TableCell align=\"center\">Effectiveness of delivery</TableCell>\r\n                                    <TableCell align=\"center\">Time Management</TableCell>\r\n                                    <TableCell align=\"center\">Marks</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Presentations.map((Presentation,index) => (\r\n                                    <TableRow key={Presentation._id}>\r\n                                        <TableCell align=\"center\">{index+1}</TableCell>\r\n                                        <TableCell align=\"center\">{new Date(Presentation.scheduled_date).getDate()}/{new Date(Presentation.scheduled_date).getMonth()+1}/{new Date(Presentation.scheduled_date).getFullYear()}</TableCell>\r\n                                        {(!Presentation.filled)?(\r\n                                            <React.Fragment>\r\n                                                {new Date(Presentation.scheduled_date).getTime()>Date.now()?(\r\n                                                    <React.Fragment>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">Presentation Not conducted</TableCell>\r\n                                                    </React.Fragment>\r\n                                                ):(\r\n                                                    <React.Fragment>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography style={{fontSize:\"12\"}} color=\"secondary\">\r\n                                                                Presentation missing\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                    </React.Fragment>\r\n                                                )}\r\n                                            </React.Fragment>\r\n                                        ):(\r\n                                            <React.Fragment>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.orgMarks}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.subKnowMarks}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.EODMarks}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.timeMarks}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.orgMarks+Presentation.timeMarks+Presentation.EODMarks+Presentation.subKnowMarks}/10\r\n                                                </TableCell>\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ThemeProvider>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <Typography>\r\n                    No Presentations have been scheduled. Please check later or contact your Faculty\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentPresentation;","import React from 'react';\r\nimport { makeStyles, Typography, CircularProgress, Grid, Paper } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo:{\r\n        textAlign:\"Left\"\r\n    }\r\n}))\r\n\r\nlet Group = null;\r\n\r\nconst StudentWeeklyLog = (props) => {\r\n    Group = props.Group\r\n    const classes = useStyles();\r\n\r\n\r\n    if(Group === null){\r\n        return (\r\n            <div style={{ margin: \"auto\" }}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }else{\r\n        const {weeklyMeetLog} = Group;\r\n        if(weeklyMeetLog.length === 0){\r\n            return(\r\n                <React.Fragment>\r\n                    <Typography variant=\"h4\">You have not reported to your guide even once</Typography>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n            weeklyMeetLog.map(wML => {\r\n                let dt = new Date(wML.scheduled_date)\r\n                return(\r\n                    <React.Fragment key={wML._id}>\r\n                        <Paper style={{backgroundColor:\"#e0e0e0\"}}>\r\n                            <Grid style={{margin:\"10px 35px\"}} container spacing={2}>\r\n                                <Grid className={classes.typo} item xs={6} sm={6}>\r\n                                    <Typography><b>Date</b> : {dt.getDate()}/{dt.getMonth()+1}/{dt.getFullYear()}</Typography>\r\n                                </Grid>\r\n                                {(dt.getHours()>=12)?(\r\n                                    <React.Fragment>\r\n                                        {(dt.getHours()===12)?(\r\n                                            <Grid className={classes.typo} item xs={12} sm={6}>\r\n                                                <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}&nbsp;pm</Typography>\r\n                                            </Grid>\r\n                                        ):(\r\n                                            <Grid className={classes.typo} item xs={12} sm={6}>\r\n                                                <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}&nbsp;pm</Typography>\r\n                                            </Grid>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ):(\r\n                                    <Grid className={classes.typo} item xs={12} sm={6}>\r\n                                        <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}&nbsp;am</Typography>\r\n                                    </Grid>\r\n                                )}\r\n                                <Grid className={classes.typo} item xs={12}>\r\n                                    <Typography><b>Remark</b> : {wML.remark}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </React.Fragment>\r\n                );\r\n            }))\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentWeeklyLog;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Container, CircularProgress } from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport StudentContent from \"./StudentContent\";\r\nimport Profile from \"../Profile\";\r\nimport StudentHomePage from \"./studentHomePage\";\r\nimport StudentCommentPage from \"./StudentCommentPage\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport StudentPresentation from \"./StudentPresentation\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport StudentWeeklyLog from \"./StudentWeeklyLog\";\r\n\r\nlet userInfo = [];\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Container>\r\n          <Box>\r\n            <Typography component={\"span\"}>{children}</Typography>\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    maxWidth: \"100%\",\r\n    marginTop: \"3px\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  // tabs: {\r\n  //   borderRight: `1px solid ${theme.palette.divider}`,\r\n  // },\r\n  TabPanel: {\r\n    //borderLeft:`1px solid ${theme.palette.divider}`,\r\n    display: \"block\"\r\n    //margin:\"1px\",\r\n  },\r\n  vert_tab_grid: {\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  hor_tab_grid: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  large_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.down(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  small_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.up(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nlet Group=null;\r\n\r\nconst StudentWholePage = props => {\r\n  userInfo = props.userInfo;\r\n  const [obtained,setObtained] = React.useState(false)\r\n  const [academicYear,setAcademicYear] = React.useState(\"\")\r\n  const [reqSent,setReqSent] = React.useState(false)\r\n  //console.log(userInfo.name);\r\n\r\n\r\n  function checkData() {\r\n    setReqSent(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers:{\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Group = res.data;\r\n        setObtained(true);\r\n        DueDate = Group.dueDate.split(\"T\")[0];\r\n        if(Group.proposals.length!==0){\r\n          AppliedOn = Group.proposals[0].applied.split(\"T\")[0];\r\n        }\r\n        setAcademicYear(Group.acadYear)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  if(obtained===false && reqSent===false){\r\n    checkData()\r\n  }\r\n  if(obtained===true){\r\n    // console.log(academicYear)\r\n    return (\r\n      <React.Fragment>\r\n        <Profile academicYear={academicYear} userInfo={userInfo} />\r\n        <div\r\n          style={{\r\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n          }}\r\n          className={classes.small_win_tabs}\r\n        >\r\n          <Grid container className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid item xs={12} className={classes.hor_tab_grid}>\r\n                <Tabs\r\n                  orientation=\"horizontal\"\r\n                  variant=\"scrollable\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"horizontal tabs\"\r\n                  // variant=\"fullWidth\"\r\n                  scrollButtons=\"on\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                >\r\n                  <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Preferences\"\r\n                    {...a11yProps(1)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Comments\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Presentations\"\r\n                    {...a11yProps(3)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Weekly Logs\"\r\n                    {...a11yProps(4)}\r\n                  />\r\n                </Tabs>\r\n              </Grid>\r\n              {/* <Grid item xs={2} /> */}\r\n            </ThemeProvider>\r\n            <Grid className={classes.TabPanel} item xs={12}>\r\n              <TabPanel value={value} index={0}>\r\n                <StudentHomePage Group={Group} DueDate={DueDate} AppliedOn={AppliedOn}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <StudentContent />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <StudentCommentPage Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <StudentPresentation Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={4}>\r\n                <StudentWeeklyLog Group={Group} />\r\n              </TabPanel>\r\n            </Grid>\r\n            {/* <Grid item xs={1}></Grid> */}\r\n          </Grid>\r\n        </div>\r\n        <div\r\n          style={{\r\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n          }}\r\n          className={classes.large_win_tabs}\r\n        >\r\n          <Grid style={{ marginTop: \"3px\" }} container className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid item xs={3} className={classes.vert_tab_grid}>\r\n                <Tabs\r\n                  orientation=\"vertical\"\r\n                  value={value}\r\n                  variant=\"fullWidth\"\r\n                  onChange={handleChange}\r\n                  aria-label=\"Vertical tabs\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                >\r\n                  <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Preferences\"\r\n                    {...a11yProps(1)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Comments\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Presentations\"\r\n                    {...a11yProps(3)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Weekly Logs\"\r\n                    {...a11yProps(4)}\r\n                  />\r\n                </Tabs>\r\n              </Grid>\r\n            </ThemeProvider>\r\n            <Grid className={classes.TabPanel} item xs={9}>\r\n              <TabPanel value={value} index={0}>\r\n                <StudentHomePage Group={Group} DueDate={DueDate} AppliedOn={AppliedOn}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <StudentContent />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <StudentCommentPage Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <StudentPresentation Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={4}>\r\n                <StudentWeeklyLog Group={Group} />\r\n              </TabPanel>\r\n            </Grid>\r\n            {/* <Grid item xs={1}></Grid> */}\r\n          </Grid>\r\n        </div>\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }else{\r\n    return(\r\n      <CircularProgress />\r\n    )\r\n  }\r\n};\r\n\r\nexport default StudentWholePage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport StudentWholePage from \"../components/Student-component/studentWholePage\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n//import StudentContent from \"../components/Student-component/StudentContent\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"student\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    \r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"NO user\" });\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"access_token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"student\") {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <StudentWholePage userInfo={this.state.user} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel : {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float : \"left\",\r\n  }\r\n});\r\n\r\nclass YamiContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      openSuccess : false,\r\n      openFailure : false,\r\n      name:\"\",\r\n      mail: \"\",\r\n      dept: \"Computer Science\"\r\n    };\r\n  }\r\n\r\n  mailHandler = event => {\r\n    this.setState({ mail: event.target.value });\r\n  };\r\n  nameHandler = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  deptHandler = event => {\r\n    this.setState({ dept: event.target.value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const {name, mail, dept } = this.state;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/yami\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        name : name,\r\n        email: mail,\r\n        department: dept\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(response => {\r\n        this.setState({openSuccess:true});\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({openFailure:true});\r\n      });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      this.setState({openFailure:false,openSuccess:false})\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <LoggedNavbar />\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div\r\n            className={classes.paper}\r\n            style={{\r\n              boxShadow:\r\n                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: \"6px\"\r\n            }}\r\n          >\r\n           \r\n            <form\r\n              className={classes.form}\r\n              onSubmit={this.submitHandler}\r\n              noValidate\r\n            >\r\n              <Typography variant=\"h4\" style={{ marginTop:'15px',marginBottom:'15px'}}>\r\n                Create Admin\r\n              </Typography>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin name\"\r\n                value={this.state.name}\r\n                onChange={this.nameHandler}\r\n                autoFocus/>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin email\"\r\n                value={this.state.mail}\r\n                onChange={this.mailHandler}\r\n                />\r\n              <InputLabel\r\n              className = {classes.deptLabel}> Select Department</InputLabel>\r\n              <Select\r\n                value={this.state.dept}\r\n                onChange={this.deptHandler}\r\n                label=\"Department\"\r\n                fullWidth\r\n              >\r\n                <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\r\n                <MenuItem value=\"Information Technology\">Information Technology</MenuItem>\r\n                <MenuItem value=\"Electronics and Telecommunication\">Electronics and Telecommunication</MenuItem>\r\n                <MenuItem value=\"Electronics\">Electronics</MenuItem>\r\n              </Select>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  fontSize: \"18px\",\r\n                  fontWeight: \"bolder\",\r\n                  backgroundColor: \"#1877f2\",\r\n                  marginBottom: \"25px\"\r\n                }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </form>\r\n            <Snackbar open={this.state.openSuccess} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                A new Admin was created successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={this.state.openFailure} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                There was some problem while creating the admin please refresh the page and try again.\r\n              </Alert>\r\n            </Snackbar>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n        \r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(YamiContent);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport YamiContent from \"../components/Yami-component/YamiContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Yami extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"None\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === null) {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"yami\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <YamiContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" exact />;\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, Component} from 'react';\r\nexport const ProjectContext = createContext();\r\n\r\nclass ProjectContextProvider extends Component{\r\n    state = {\r\n            projects:[\r\n                {title:\"project1\",isapproved:true,comment:\"\",id:1},\r\n                {title:\"project2\",isapproved:false,comment:\"\",id:2},\r\n                {title:\"project3\",isapproved:false,comment:\"\",id:3},\r\n                {title:\"project4\",isapproved:false,comment:\"\",id:4},\r\n                {title:\"project5\",isapproved:true,comment:\"\",id:5}\r\n            ]\r\n    }\r\n    Approve = (id) => {\r\n        let projects = [...this.state.projects];\r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.isapproved = !project.isapproved;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    addComment = (id,comment) => {\r\n        let projects = [...this.state.projects];\r\n        \r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.comment = comment;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <ProjectContext.Provider value={{...this.state,Approve: this.Approve,addComment: this.addComment}}>\r\n                {this.props.children}\r\n            </ProjectContext.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ProjectContextProvider;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst ProjectDetails = (project) => {\r\n    // const handleClick = () => {\r\n    //     const pro_to_show = project;\r\n    //     ProjectForm(pro_to_show);\r\n    // } \r\n    return (\r\n            <NavLink to={{pathname:\"/projectform\",aboutProps:{project}}}>\r\n                <div>\r\n                    <label className=\"title\"> Title : {project.project.title}</label>\r\n                    <label className=\"id\"> ID : {project.project.id}</label>\r\n                </div>\r\n            </NavLink>\r\n     );\r\n}\r\n \r\nexport default ProjectDetails;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { ProjectContext } from \"../../context/projectcontext\";\r\nimport ProjectDetails from \"./projectdetails\";\r\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nconst ProjectList = () => {\r\n  const { projects } = useContext(ProjectContext);\r\n  return projects.length ? (\r\n    <div className=\"project-list\">\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Approved</Tab>\r\n          <Tab>Not Approved</Tab>\r\n        </TabList>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? null : (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            );\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            ) : null;\r\n          })}\r\n        </TabPanel>\r\n      </Tabs>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">No projects submitted</div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport ProjectContextProvider from \"../../context/projectcontext\";\r\nimport ProjectList from \"../verification/projectlist\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\n\r\nconst FacultyContent = props => {\r\n  return (\r\n    <div>\r\n      <LoggedNavbar />\r\n      <ProjectContextProvider>\r\n        <ProjectList />\r\n      </ProjectContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacultyContent;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FacultyContent from \"../components/Faculty-component/FacultyContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"faculty\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"no user\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (\r\n      this.state.user.type === \"ig\" ||\r\n      this.state.user.type === \"pic\"\r\n    ) {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <FacultyContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChangePassword.css\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel: {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float: \"left\"\r\n  }\r\n});\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      user: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      openSuccess: false,\r\n      openFailure :false,\r\n      helptext : \"\",\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"no user\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  pushPassword = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/changePassword\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        newPassword: this.state.newPassword,\r\n        confirmPassword: this.state.confirmPassword\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({openFailure : true});\r\n      });\r\n  };\r\n\r\n  newpasswordHandler = e => {\r\n    this.setState({ newPassword: e.target.value });\r\n  };\r\n  confirmpasswordHandler = e => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(this.state.newPassword !== this.state.confirmPassword){\r\n      this.setState({helptext : \"Two fields Doesn't match\"}) ;\r\n    }else if(this.state.newPassword.length < 8){\r\n      this.setState({helptext : \"Please Enter a Password with length greater than 8\"});\r\n    }\r\n    else{\r\n       this.pushPassword(); \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if(this.state.openSuccess){\r\n        this.setState({openSuccess: false, user: \"no user\"});\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n      else if(this.state.openFailure){\r\n        this.setState({openFailure : false});\r\n      }\r\n    };\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user === \"no user\") {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div\r\n              className={classes.paper}\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"6px\"\r\n              }}\r\n            >\r\n              <Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  Your Password was changed successfully Please click anywhere\r\n                  to login again\r\n                </Alert>\r\n              </Snackbar>\r\n              <Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                  There was some problem while changing your password please refresh the page and try again\r\n                </Alert>\r\n              </Snackbar>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={this.handleSubmit}\r\n                noValidate\r\n              >\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  style={{ marginTop: \"15px\", marginBottom: \"15px\" }}\r\n                >\r\n                  Change Password\r\n                </Typography>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  value={this.state.newPassword}\r\n                  onChange={this.newpasswordHandler}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.confirmpasswordHandler}\r\n                />\r\n                <Typography variant=\"subtitle2\" color=\"error\">\r\n                  {this.state.helptext}\r\n                </Typography>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bolder\",\r\n                    backgroundColor: \"#1877f2\",\r\n                    marginBottom: \"25px\"\r\n                  }}\r\n                >\r\n                  Change Password\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ChangePassword);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <React.Fragment>\r\n            <h1>404 Page Not Found</h1>\r\n            <p>The page you were looking for was not found </p>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\",\r\n    margin: theme.spacing(2)\r\n  },\r\n  backButton: {},\r\n  buttonContainer: {\r\n    padding: \"auto\",\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n          {/* <Link\r\n            to=\"/\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          > */}\r\n            <Button style={{color:\"#000\"}} onClick={()=>{window.history.back()}}  variant=\"contained\">\r\n              <ArrowBackRoundedIcon />\r\n            </Button>\r\n          {/* </Link> */}\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typo1: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"Medium\"\r\n  },\r\n  typo2: {\r\n    textAllign: \"right\",\r\n    fontWeight: \"Light\"\r\n  }\r\n}));\r\n\r\nconst THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst AdminCommentPage = props => {\r\n  const classes = useStyles();\r\n  const comments = props.Comments;\r\n  if (comments.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h4\">No comments have been added</Typography>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <ThemeProvider theme={THEME}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <Paper\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"0px\",\r\n                marginTop: \"50px\",\r\n                marginBottom: \"50px\"\r\n              }}\r\n            >\r\n              <Paper style={{ borderRadius: \"0\" }}>\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{ fontWeight: \"400\", textAlign: \"left\" }}\r\n                >\r\n                  &nbsp;Previous Comments:\r\n                </Typography>\r\n              </Paper>\r\n              {comments\r\n                .slice(0)\r\n                .reverse()\r\n                .map(comment => {\r\n                  let d = new Date(comment.time);\r\n                  return (\r\n                    <React.Fragment key={comment._id}>\r\n                      <Paper style={{ borderRadius: \"0\" }}>\r\n                        <Grid\r\n                          container\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"5px\"\r\n                          }}\r\n                          spacing={2}\r\n                        >\r\n                          <Grid\r\n                            className={classes.typo1}\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            md={8}\r\n                          >\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 16,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Author : {comment.author}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Roboto\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Date : {d.toString().substr(4, 12)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Helvetica Neue\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Time : {d.toString().slice(15, 24)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo1} item xs={12}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 18,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Comment : {comment.text}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </React.Fragment>\r\n                  );\r\n                  // }else{return null}\r\n                })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AdminCommentPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../components/ToUpper\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport AdminCommentPage from \"../components/Admin-component/AdminCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  }\r\n});\r\n\r\n//axios get Request\r\n\r\nclass ControlledExpansionPanels extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      approved: false,\r\n      openSuccess: false,\r\n      openFailure: false\r\n    };\r\n  }\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState({\r\n      comment: comment\r\n    });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  //axios request to send comments\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          this.setState({\r\n            adData: null,\r\n            comment: \"\"\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //axios post request to \"/approve\"\r\n  handleApprove = (pid, id) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(response => {\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n\r\n    //call axios\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Proposal1 = Proposals[0];\r\n                let Proposal2 = Proposals[1];\r\n                let Proposal3 = Proposals[2];\r\n                let Comments = group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      let appliedDate = new Date(proposal.applied);\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Detailed Statement of Problem:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Internal Agency/External\r\n                                    Agency/CTL/Mastek/or any other:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Methods/Technique/Algorithm\r\n                                    proposed:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Software/Hardware Requirements:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/\r\n                                  {appliedDate.getMonth() + 1}/\r\n                                  {appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `${SERVER_URL}/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {!proposal.approval.admin &&\r\n                                !Proposal1.approval.hod &&\r\n                                !Proposal2.approval.hod &&\r\n                                !Proposal3.approval.hod ? (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    onClick={() => {\r\n                                      this.handleApprove(pid, Gid);\r\n                                    }}\r\n                                  >\r\n                                    Approve Proposal\r\n                                  </Button>\r\n                                ) : (\r\n                                  <div>\r\n                                    {proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        This Proposal is Selected\r\n                                      </Button>\r\n                                    ) : proposal.approval.admin ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Waiting For Hod Approval\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved Another Proposal\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#e0e0e0\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\",\r\n                        boxShadow:\r\n                          \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                      }}\r\n                    >\r\n                      <Grid container className={classes.comment}>\r\n                        <Grid item xs={12} style={{ marginBottom: \"30px\" }}>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{ textAlign: \"left\", fontWeight: \"400\" }}\r\n                          >\r\n                            Comments\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comTitle}\r\n                        >\r\n                          <Typography>\r\n                            <b>Add Comments:</b>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                          <TextField\r\n                            className={classes.comField}\r\n                            variant=\"outlined\"\r\n                            component={\"span\"}\r\n                            multiline\r\n                            inputProps={{ style: { fontSize: 14 } }}\r\n                            rows={3}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            onChange={this.commentHandler}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comButton}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.sendComment(Gid);\r\n                            }}\r\n                          >\r\n                            Send Comment\r\n                          </Button>\r\n                          <Snackbar\r\n                            open={this.state.openSuccess}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert\r\n                              onClose={this.handleClose}\r\n                              severity=\"success\"\r\n                            >\r\n                              Successful comment\r\n                            </Alert>\r\n                          </Snackbar>\r\n                          <Snackbar\r\n                            open={this.state.openFailure}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert onClose={this.handleClose} severity=\"error\">\r\n                              Unsuccessful. Comment cannot be empty\r\n                            </Alert>\r\n                          </Snackbar>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                          <AdminCommentPage Comments={Comments} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nControlledExpansionPanels.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ControlledExpansionPanels);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  Box,\r\n  useTheme,\r\n  AccordionSummary,\r\n  Grid,\r\n  Button,\r\n  Accordion,\r\n  AccordionDetails\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst HodProjectList = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n  // console.log(props);\r\n  const Groups = props.Groups;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChangeT}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n          <Tab label=\"Approved by Project Coordinator\" {...a11yProps(1)} />\r\n          <Tab label=\"Pending Approval\" {...a11yProps(2)} />\r\n          <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && pref1HodApproval) ||\r\n              (pref2AdminApproval && pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && !pref1HodApproval) ||\r\n              (pref2AdminApproval && !pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                !pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1Approval = false;\r\n            let pref2Approval = false;\r\n            let pref3Approval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1Approval = pref1.approval.admin;\r\n              pref2Approval = pref2.approval.admin;\r\n              pref3Approval = pref3.approval.admin;\r\n            }\r\n\r\n            if (\r\n              !pref1Approval &&\r\n              !pref2Approval &&\r\n              !pref3Approval &&\r\n              Group.proposals.length !== 0\r\n            ) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n\r\n            if (Group.proposals.length === 0) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid\r\n                      container\r\n                      spacing={3}\r\n                      style={{ width: \"100%\", padding: \"auto\" }}\r\n                    >\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Typography>\r\n                          <b>Due Date for Submitting Proposals:</b>\r\n                          &nbsp;&nbsp;\r\n                          {DueDate}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </React.Fragment>\r\n    // <Typography>HELLO</Typography>\r\n  );\r\n};\r\n\r\nexport default HodProjectList;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  ButtonStyle:{\r\n    color:\"#000\",\r\n    backgroundColor:\"#e0e0e0\",\r\n    padding:\"0px 5px\",\r\n    cursor:\"pointer\",\r\n    borderRadius:\"2px\",\r\n    marginRight:\"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: '#fff'\r\n    }\r\n    \r\n  },\r\n  \r\n\r\n}));\r\n\r\n\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const histor = useHistory();\r\n   const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n   const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => histor.push(\"/hod\")\r\n    },\r\n    {\r\n      text: \"Groups\",\r\n      icon: <PeopleAltIcon/>,\r\n      onClick: () => histor.push(\"/hod/groups\")\r\n    }\r\n  ];\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n      {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <React.Fragment>\r\n            <ListItem button key={text} onClick={onClick} style={{marginRight:\"40px\"}}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n            <Divider/>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n     \r\n    </div>\r\n  );\r\n\r\n  return (\r\n        <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} >\r\n            {list(anchor)}\r\n          </Drawer>\r\n          <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n        <MenuIcon fontSize=\"large\" onClick={toggleDrawer(anchor, true)} className={classes.ButtonStyle} style={{}}/>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n          {auth && (\r\n            <div className={classes.profIcon}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/cp@2707user\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Change Password\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/logout\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Link\r\n            to=\"/cp@2707user\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              startIcon={<AssignmentIndIcon />}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            to=\"/logout\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"20px\" }}\r\n              startIcon={<ExitToAppIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n          </React.Fragment>\r\n          ))}\r\n    </div>\r\n          \r\n      \r\n     \r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withStyles, LinearProgress } from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport HodProjectList from \"./HodProjectList\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport HodSideMenu from \"./HodSideMenu\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\n\r\nlet userInfo = [];\r\nlet Groups = null;\r\nlet academicYear=\"\"\r\nlet Ad = null;\r\nlet filled = false;\r\n\r\nclass HodContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      adData: null,\r\n      filled\r\n    };\r\n  }\r\n\r\n  getGroup = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        academicYear=Groups[0].acadYear\r\n        //console.log(academicYear);\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.adData === null) {\r\n      this.getGroup();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n    //console.log(userInfo);\r\n    if (this.state.filled) {\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <HodSideMenu />\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n              <HodProjectList Groups={Groups} Designation={userInfo.type}/>\r\n            </div>\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(HodContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport HodContent from \"../components/Hod-component/HodContent\";\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"hod\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    //groups = this.state.Groups;\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"hod\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <HodContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typo1: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"Medium\"\r\n  },\r\n  typo2: {\r\n    textAllign: \"right\",\r\n    fontWeight: \"Light\"\r\n  }\r\n}));\r\n\r\nconst THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst HodCommentPage = props => {\r\n  const classes = useStyles();\r\n  const comments = props.Comments;\r\n  //console.log(comments);\r\n  if (comments.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h4\">No comments have been added</Typography>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <ThemeProvider theme={THEME}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <Paper\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0,0,0,.1), 0 8px 16px rgba(0,0,0,.1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"0px\",\r\n                marginTop: \"50px\",\r\n                marginBottom: \"50px\"\r\n              }}\r\n            >\r\n              <Paper style={{ borderRadius: \"0\" }}>\r\n                {/* <Typography style={{fontWeight:\"bold\"}} variant=\"h4\">\r\n                            Your Previous Comments\r\n                        </Typography> */}\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{ fontWeight: \"400\", textAlign: \"left\" }}\r\n                >\r\n                  Previous Comments:\r\n                </Typography>\r\n              </Paper>\r\n              {comments\r\n                .slice(0)\r\n                .reverse()\r\n                .map(comment => {\r\n                  let d = new Date(comment.time);\r\n                  //comment.time = new Date(d.getTime() + 330*60000);\r\n                  // console.log(d)\r\n                  // console.log(comment.time)\r\n                  // let author=comment.author;\r\n                  // if(author.includes(\"admin\"))\r\n                  return (\r\n                    <React.Fragment key={comment._id}>\r\n                      <Paper style={{ borderRadius: \"0\" }}>\r\n                        <Grid\r\n                          container\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"5px\"\r\n                          }}\r\n                          spacing={2}\r\n                        >\r\n                          <Grid className={classes.typo1} item xs={8}>\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 20,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Author : {comment.author}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            {/* <Typography style={{fontSize:\"12px\",fontWeight:\"300\"}}>\r\n                                                Time : {comment.time}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Roboto\"\r\n                              }}\r\n                            >\r\n                              Date : {d.toString().substr(4, 12)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Helvetica Neue\"\r\n                              }}\r\n                            >\r\n                              Time : {d.toString().slice(15, 24)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo1} item xs={12}>\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 20,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Comment : {comment.text}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </React.Fragment>\r\n                  );\r\n                  // }else{return null}\r\n                })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HodCommentPage;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  ThemeProvider,\r\n  Paper,\r\n  TableBody,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport HodCommentPage from \"./HodCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n});\r\n\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false\r\n    };\r\n  }\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState(\r\n      {\r\n        comment: comment\r\n      }\r\n      // function () {\r\n      //   console.log(this.state.comment);\r\n      // }\r\n    );\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          this.setState({\r\n            comment: \"\",\r\n            adData: null\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(response => {\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n    let Presentations = Group.presentation;\r\n    Presentations.sort((a, b) =>\r\n      new Date(a.scheduled_date).getTime() >\r\n      new Date(b.scheduled_date).getTime()\r\n        ? 1\r\n        : -1\r\n    );\r\n\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Comments = group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      let appliedDate = new Date(proposal.applied);\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Detailed Statement of Problem:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Internal Agency/External\r\n                                    Agency/CTL/Mastek/or any other:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Methods/Technique/Algorithm\r\n                                    proposed:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Software/Hardware Requirements:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/\r\n                                  {appliedDate.getMonth() + 1}/\r\n                                  {appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `${SERVER_URL}/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    {Presentations.length !== 0 ? (\r\n                      <React.Fragment>\r\n                        <ThemeProvider theme={theme}>\r\n                          <Typography\r\n                            style={{ marginTop: \"20px\" }}\r\n                            variant=\"h4\"\r\n                          >\r\n                            Presentation Details\r\n                          </Typography>\r\n                          <TableContainer\r\n                            style={{ backgroundColor: \"#d3d3d3\" }}\r\n                            className={classes.tableContainer}\r\n                            component={Paper}\r\n                          >\r\n                            <Table\r\n                              className={classes.table}\r\n                              size=\"small\"\r\n                              aria-label=\"a dense table\"\r\n                            >\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell align=\"center\">No.</TableCell>\r\n                                  <TableCell align=\"center\">Date</TableCell>\r\n                                  <TableCell align=\"center\">Day</TableCell>\r\n                                  <TableCell align=\"center\">Time</TableCell>\r\n                                  <TableCell align=\"center\">Marks</TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {Presentations.map((Presentation, index) => (\r\n                                  <TableRow key={Presentation._id}>\r\n                                    <TableCell align=\"center\">\r\n                                      {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {new Date(\r\n                                        Presentation.scheduled_date\r\n                                      ).getDate()}\r\n                                      /\r\n                                      {new Date(\r\n                                        Presentation.scheduled_date\r\n                                      ).getMonth() + 1}\r\n                                      /\r\n                                      {new Date(\r\n                                        Presentation.scheduled_date\r\n                                      ).getFullYear()}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {\r\n                                        days[\r\n                                          new Date(\r\n                                            Presentation.scheduled_date\r\n                                          ).getDay()\r\n                                        ]\r\n                                      }\r\n                                    </TableCell>\r\n                                    {new Date(\r\n                                      Presentation.scheduled_date\r\n                                    ).getHours() > 12 ? (\r\n                                      <TableCell align=\"center\">\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getHours() - 12}\r\n                                        :\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getMinutes()}{\" \"}\r\n                                        pm\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"center\">\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getHours()}\r\n                                        :\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getMinutes()}{\" \"}\r\n                                        am\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {Presentation.marks === null ? (\r\n                                      <React.Fragment>\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getTime() > Date.now() ? (\r\n                                          <TableCell align=\"center\">\r\n                                            Presentation Not conducted\r\n                                          </TableCell>\r\n                                        ) : (\r\n                                          <TableCell align=\"center\">\r\n                                            <Typography\r\n                                              style={{ fontSize: \"12\" }}\r\n                                              color=\"secondary\"\r\n                                            >\r\n                                              Presentation Missing\r\n                                            </Typography>\r\n                                          </TableCell>\r\n                                        )}\r\n                                      </React.Fragment>\r\n                                    ) : (\r\n                                      <TableCell align=\"center\">\r\n                                        {Presentation.marks}\r\n                                      </TableCell>\r\n                                    )}\r\n                                  </TableRow>\r\n                                ))}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                        </ThemeProvider>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <React.Fragment>\r\n                        <Typography style={{ marginTop: \"20px\" }} variant=\"h4\">\r\n                          Presentations\r\n                        </Typography>\r\n                        <Typography>\r\n                          No Presentations have been scheduled.\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    )}\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#e0e0e0\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\",\r\n                        boxShadow:\r\n                          \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                      }}\r\n                    >\r\n                      <Grid container className={classes.comment}>\r\n                        <Grid item xs={12} style={{ marginBottom: \"30px\" }}>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{ textAlign: \"left\", fontWeight: \"400\" }}\r\n                          >\r\n                            Comments\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comTitle}\r\n                        >\r\n                          <Typography>\r\n                            <b>Add Comments:</b>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                          <TextField\r\n                            className={classes.comField}\r\n                            variant=\"outlined\"\r\n                            component={\"span\"}\r\n                            multiline\r\n                            inputProps={{ style: { fontSize: 14 } }}\r\n                            rows={3}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            onChange={this.commentHandler}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comButton}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.sendComment(Gid);\r\n                            }}\r\n                          >\r\n                            Send Comment\r\n                          </Button>\r\n                          <Snackbar\r\n                            open={this.state.openSuccess}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert\r\n                              onClose={this.handleClose}\r\n                              severity=\"success\"\r\n                            >\r\n                              Successful comment\r\n                            </Alert>\r\n                          </Snackbar>\r\n                          <Snackbar\r\n                            open={this.state.openFailure}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert onClose={this.handleClose} severity=\"error\">\r\n                              Unsuccessful. Comment cannot be empty\r\n                            </Alert>\r\n                          </Snackbar>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                          <HodCommentPage Comments={Comments} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Archive from \"@material-ui/icons/Archive\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet department = null;\r\nlet Gname = null;\r\nlet Groupid = null;\r\nlet deleteMemberEmail = null;\r\nlet groupData = [];\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  mainAccor: {\r\n    color: \"#303030\",\r\n    margin: \"auto\"\r\n  },\r\n  mainAccorContainer: {\r\n    width: \"80%\",\r\n    margin: \"2px auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  memberHolder: {\r\n    width: \"10%\",\r\n    backgroundColor: \"#909090\"\r\n  },\r\n  groupCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    textAlign: \"left\"\r\n  },\r\n  accorStyle: {\r\n    backgroundColor: \"#d3d3d3\"\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  presCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  }\r\n});\r\n\r\nclass AdminGroupsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      groupDetails: null,\r\n      deleteMemberOpen: false,\r\n      addMemberOpen: false,\r\n      memberName: \"\",\r\n      memberEmail: \"\",\r\n      memberRollno: \"\",\r\n      deleteProposalsOpen: false,\r\n      deleteAllUserDialog: false,\r\n      archive: false,\r\n      loading: false,\r\n      archiveSuccess: false\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        groupData = res.data;\r\n        this.setState({\r\n          groupDetails: res.data\r\n        });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //DELETE MEMBERS---------------------------------------------\r\n  handleDeleteMemberDialogOpen = (id, email) => {\r\n    deleteMemberEmail = email;\r\n    Groupid = id;\r\n    this.setState({\r\n      deleteMemberOpen: true\r\n    });\r\n  };\r\n  handleDeleteMemberDialogClose = () => {\r\n    this.setState({\r\n      deleteMemberOpen: false\r\n    });\r\n  };\r\n  handleDeleteMember = (gid, email) => {\r\n    this.handleDeleteMemberDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: gid,\r\n        email: email\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Member deleted!!!!\");\r\n        deleteMemberEmail = null;\r\n        Groupid = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //DELETE PROPOSALS SECTION--------------------------------\r\n  handleDeleteProposalsDialogOpen(e, gid) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    Groupid = gid;\r\n    this.setState({\r\n      deleteProposalsOpen: true\r\n    });\r\n  }\r\n  handleDeleteProposalsDialogClose = () => {\r\n    this.setState({\r\n      deleteProposalsOpen: false\r\n    });\r\n  };\r\n  handleDeleteProposals = gid => {\r\n    this.handleDeleteProposalsDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteProposal\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: gid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Groupid = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleDeleteAllUser = () => {\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteAllUsers\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ loading: false, deleteAllUserDialog: false });\r\n        window.location.reload();\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loading: false, deleteAllUserDialog: false });\r\n        console.log(err);\r\n      });\r\n  };\r\n  handleArchieve = () => {\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/archive\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ loading: false, archive: false, archiveSuccess: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loading: false, archive: false });\r\n        console.log(err);\r\n      });\r\n  };\r\n  //ADD MEMBER SECTION ------------------------------------\r\n  handleAddMemberDialogOpen = (gid, dept, gname) => {\r\n    Groupid = gid;\r\n    department = dept;\r\n    Gname = gname;\r\n    this.setState({\r\n      addMemberOpen: true\r\n    });\r\n  };\r\n  handleAddMemberDialogClose = () => {\r\n    this.setState({\r\n      addMemberOpen: false\r\n    });\r\n  };\r\n\r\n  handleMemberNameChange = e => {\r\n    this.setState({\r\n      memberName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleMemberEmailChange = e => {\r\n    this.setState({\r\n      memberEmail: e.target.value\r\n    });\r\n  };\r\n  handleMemberRollnoChange = e => {\r\n    this.setState({\r\n      memberRollno: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddMember = (id, department, groupName) => {\r\n    if (\r\n      this.state.memberName === \"\" ||\r\n      this.state.memberEmail === \"\" ||\r\n      this.state.memberRollno === \"\"\r\n    ) {\r\n      alert(\"Member name,email or rollno cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addmember\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: id,\r\n          name: this.state.memberName,\r\n          email: this.state.memberEmail,\r\n          rollno: this.state.memberRollno,\r\n          department: department,\r\n          groupName: groupName\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"Member Added Successfully!!!!!\");\r\n          Groupid = null;\r\n          department = null;\r\n          Gname = null;\r\n          this.setState({\r\n            memberEmail: \"\",\r\n            memberRollno: \"\",\r\n            memberName: \"\",\r\n            addMemberOpen: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"Member not added\");\r\n          this.setState({\r\n            addHodOpen: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleChildClick = e => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.loading) return <LinearProgress />;\r\n    if (this.state.groupDetails === null) {\r\n      this.checkData();\r\n      return <LinearProgress />;\r\n    }\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n          return;\r\n        }\r\n        this.setState({ archiveSuccess: false });\r\n      };\r\n      return (\r\n        <React.Fragment>\r\n          <SideMenu />\r\n\r\n          {/* Dialog box for delete MEMBER confirmation*/}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteMemberOpen}\r\n              onClose={this.handleDeleteMemberDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Member\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete this Member? You need to\r\n                  assign another student after deleting this one\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteMemberDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    this.handleDeleteMember(Groupid, deleteMemberEmail)\r\n                  }\r\n                  color=\"primary\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/*------------------------ ADD MEMBER DIALOG ---------------------*/}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.addMemberOpen}\r\n              onClose={() => this.handleAddMemberDialogClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Add Member</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Please add name,email and Rollno of Student\r\n                </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"MemberName\"\r\n                  label=\"Member Name\"\r\n                  type=\"text\"\r\n                  value={this.state.memberName}\r\n                  onChange={this.handleMemberNameChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"MemberEmail\"\r\n                  label=\"Member Email\"\r\n                  type=\"text\"\r\n                  value={this.state.memberEmail}\r\n                  onChange={this.handleMemberEmailChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"MemberRoll\"\r\n                  label=\"Member Roll\"\r\n                  type=\"text\"\r\n                  value={this.state.memberRollno}\r\n                  onChange={this.handleMemberRollnoChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleAddMemberDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    this.handleAddMember(Groupid, department, Gname)\r\n                  }\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/* -----------------DELETE PROPOSALS DIALOG---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteProposalsOpen}\r\n              onClose={this.handleDeleteProposalsDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Proposals\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete Submitted Proposals? If you\r\n                  delete the Proposals then student will have to fill the\r\n                  proposals again\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteProposalsDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() => this.handleDeleteProposals(Groupid)}\r\n                  color=\"primary\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/* -----------------DELETE ALL USER DIALOG---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteAllUserDialog}\r\n              onClose={() => {\r\n                this.setState({ deleteAllUserDialog: false });\r\n              }}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete ALL User\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete All users and groups? All the\r\n                  students,HOD,guides will be removed from the database as well\r\n                  as the details of all groups will also be deleted before\r\n                  deleting make sure you have archived the groups\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ deleteAllUserDialog: false });\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleDeleteAllUser} color=\"primary\">\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          {/* -----------------ARCHIEVE---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.archive}\r\n              onClose={() => {\r\n                this.setState({ archive: false });\r\n              }}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Archive Groups\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Archiving will save all the groups data in the archive\r\n                  section.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ archive: false });\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleArchieve} color=\"primary\">\r\n                  Archive\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          <Snackbar\r\n            open={this.state.archiveSuccess}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              Archived Groups Data Successfully\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          {/* -----------------------MEMBER ACCORDION------------------------*/}\r\n          {groupData.length !== 0 ? (\r\n            <div className={classes.mainAccorContainer}>\r\n              <br />\r\n              <Grid container style={{ padding: \"5px\" }}>\r\n                <Grid item xs={12} sm={6} style={{ margin: \"auto\" }}>\r\n                  <Typography variant=\"h3\" style={{ marginBottom: \"18px\" }}>\r\n                    Manage Groups\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  style={{ textAlign: \"right\", margin: \"auto\" }}\r\n                >\r\n                  <Button\r\n                    endIcon={<Archive />}\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      this.setState({ archive: true });\r\n                    }}\r\n                    color=\"primary\"\r\n                    style={{ margin: \"5px 5px\" }}\r\n                  >\r\n                    Archive\r\n                  </Button>\r\n                  <Button\r\n                    endIcon={<DeleteIcon />}\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      this.setState({ deleteAllUserDialog: true });\r\n                    }}\r\n                    color=\"primary\"\r\n                  >\r\n                    Delete All Users\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {groupData.map(group => {\r\n                let proposal1Stat = null;\r\n                let proposal2Stat = null;\r\n                let proposal3Stat = null;\r\n                if (group.proposals.length === 3) {\r\n                  proposal1Stat = group.proposals[0].approval.admin;\r\n                  proposal2Stat = group.proposals[1].approval.admin;\r\n                  proposal3Stat = group.proposals[2].approval.admin;\r\n                }\r\n\r\n                let gid = group.id;\r\n                let dept = group.department;\r\n                let gname = group.name;\r\n                return (\r\n                  <Accordion className={classes.mainAccor} key={group.name}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        <b>{toFirstCharUppercase(group.name)}</b>\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <React.Fragment>\r\n                        {/* MEMBERS ACCORDON */}\r\n                        <div className={classes.root}>\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel1a-content\"\r\n                              id=\"panel1a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Members\r\n                              </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div style={{ width: \"100%\" }}>\r\n                                <Card className={classes.groupCard}>\r\n                                  <Grid container>\r\n                                    <Grid item xs={1}></Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        <b>Name</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        <b>Email</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      <Typography>\r\n                                        <b>Rollno</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      {group.members.length < 3 ? (\r\n                                        <Button\r\n                                          onClick={() =>\r\n                                            this.handleAddMemberDialogOpen(\r\n                                              gid,\r\n                                              dept,\r\n                                              gname\r\n                                            )\r\n                                          }\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                        >\r\n                                          Add Member\r\n                                        </Button>\r\n                                      ) : null}\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Card>\r\n                                {group.members.map(member => {\r\n                                  let dmemberEmail = member.email;\r\n                                  return (\r\n                                    <Card\r\n                                      className={classes.groupCard}\r\n                                      key={member.email}\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={1}></Grid>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography>{member.name}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography>\r\n                                            {member.email}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          <Typography>\r\n                                            {member.rollno}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          <DeleteIcon\r\n                                            className={classes.deleteIconStyle}\r\n                                            onClick={() =>\r\n                                              this.handleDeleteMemberDialogOpen(\r\n                                                gid,\r\n                                                dmemberEmail\r\n                                              )\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    </Card>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n\r\n                          {/* PROPOSAL ACCORDION */}\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel2a-content\"\r\n                              id=\"panel2a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Proposals\r\n                              </Typography>\r\n                              {group.proposals.length !== 0 &&\r\n                              !proposal1Stat &&\r\n                              !proposal2Stat &&\r\n                              !proposal3Stat ? (\r\n                                <Button\r\n                                  onClick={e => {\r\n                                    this.handleDeleteProposalsDialogOpen(\r\n                                      e,\r\n                                      gid\r\n                                    );\r\n                                  }}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Delete All Proposals\r\n                                </Button>\r\n                              ) : null}\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div className={classes.root}>\r\n                                {group.proposals.length === 3 ? (\r\n                                  group.proposals.map((proposal, index) => {\r\n                                    let approval = proposal.approval;\r\n                                    // let pid = proposal._id;\r\n\r\n                                    return (\r\n                                      <Accordion\r\n                                        style={{ textAlign: \"left\" }}\r\n                                        key={index}\r\n                                      >\r\n                                        <AccordionSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls=\"panel1a-content\"\r\n                                          id=\"panel1a-header\"\r\n                                        >\r\n                                          <Typography\r\n                                            className={classes.heading}\r\n                                          >\r\n                                            Proposal {index + 1}\r\n                                          </Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                          <Grid\r\n                                            container\r\n                                            className={classes.content}\r\n                                            spacing={1}\r\n                                          >\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Title of Proposal:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.title}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Detailed Statement of\r\n                                                  Problem:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.details}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Internal Agency/External\r\n                                                  Agency/CTL/Mastek/or any\r\n                                                  other:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.agency}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Methods/Technique/Algorithm\r\n                                                  proposed:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.method}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Software/Hardware\r\n                                                  Requirements:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.requirements}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Domain of\r\n                                                  Specialization:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.specialization}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Result Expected:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.result}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>Appied On:&nbsp;&nbsp;</b>\r\n                                                {/* {proposal.applied.split(\"T\")[0]} */}\r\n                                                {proposal.applied.substr(0, 10)}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Attached Print:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.attachPrints}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              {approval.admin ? (\r\n                                                <Typography>\r\n                                                  <b>Admin approval status:</b>\r\n                                                  Approved\r\n                                                </Typography>\r\n                                              ) : (\r\n                                                <Typography>\r\n                                                  <b>Admin approval status:</b>\r\n                                                  not approved\r\n                                                </Typography>\r\n                                              )}\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              {approval.hod ? (\r\n                                                <Typography>\r\n                                                  <b>HOD approval status:</b>\r\n                                                  Approved\r\n                                                </Typography>\r\n                                              ) : (\r\n                                                <Typography>\r\n                                                  <b>HOD approval status:</b>not\r\n                                                  approved\r\n                                                </Typography>\r\n                                              )}\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                              <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                onClick={() => {\r\n                                                  window.open(\r\n                                                    `${SERVER_URL}/${proposal.attachPrints}`\r\n                                                  );\r\n                                                }}\r\n                                              >\r\n                                                Show Uploaded Document\r\n                                              </Button>\r\n                                            </Grid>\r\n                                            <Grid\r\n                                              item\r\n                                              xs={12}\r\n                                              sm={6}\r\n                                              style={{ textAlign: \"right\" }}\r\n                                            ></Grid>\r\n                                          </Grid>\r\n                                        </AccordionDetails>\r\n                                      </Accordion>\r\n                                    );\r\n                                  })\r\n                                ) : (\r\n                                  <Typography>\r\n                                    Proposals Not filled yet\r\n                                  </Typography>\r\n                                )}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n\r\n                          {/* PRESENTATION ACCORDION */}\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel3a-content\"\r\n                              id=\"panel3a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Presentation\r\n                              </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div style={{ width: \"100%\" }}>\r\n                                <Card className={classes.presCard}>\r\n                                  <Grid container>\r\n                                    <Grid item xs={1}></Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        Presentation\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        Date\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      <Typography>\r\n                                        Time\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        Marks\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Card>\r\n                                {group.presentation.map((pres, index) => {\r\n                                  return (\r\n                                    <Card\r\n                                      className={classes.presCard}\r\n                                      key={index}\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={1}></Grid>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography>\r\n                                            Presentation {index + 1}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography>\r\n                                            {pres.scheduled_date.split(\"T\")[0]}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          <Typography>\r\n                                            {pres.scheduled_date.slice(11, 16)}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        {pres.filled === false ? (\r\n                                          <Grid item xs={3}>\r\n                                            Not assigned\r\n                                          </Grid>\r\n                                        ) : (\r\n                                          <Grid item xs={3}>\r\n                                            <Typography>\r\n                                              {pres.orgMarks +\r\n                                              pres.subKnowMarks +\r\n                                              pres.EODMarks +\r\n                                              pres.timeMarks}/10\r\n                                            </Typography>\r\n                                          </Grid>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </Card>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <Typography variant=\"h3\" style={{ marginBottom: \"18px\" }}>\r\n              No Groups\r\n            </Typography>\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminGroupsPage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nlet dguideId = null;\r\nlet dguideEmail = null;\r\nlet dguideName = null;\r\nlet checkHod = false;\r\nlet dHodId = false;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  },\r\n  accorStyle: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  guideList: {\r\n    padding: \"10px\",\r\n    margin: \"0px auto\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  },\r\n  guideListHolder: {\r\n    width: \"80%\",\r\n    margin: \"auto\",\r\n    marginTop: \"30px\",\r\n    padding: \"20px\"\r\n    //backgroundColor:\"#fff\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  mHodContainer: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    width: \"80%\",\r\n    margin: \"auto\",\r\n    marginTop: \"80px\",\r\n    boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n  }\r\n});\r\n\r\nlet guideData = null;\r\n\r\nclass AdminGuidePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      guideDetails: null,\r\n      Open: false,\r\n      Loading: false,\r\n      guideName: \"\",\r\n      guideEmail: \"\",\r\n      hodName: \"\",\r\n      hodEmail: \"\",\r\n      deleteOpen: false,\r\n      deleteHodOpen: false,\r\n      addHodOpen: false\r\n    };\r\n  }\r\n\r\n  //Delete Hod SEction\r\n  handleDeleteHodDialogOpen = id => {\r\n    dHodId = id;\r\n    this.setState({\r\n      deleteHodOpen: true\r\n    });\r\n  };\r\n  handleDeleteHodDialogClose = () => {\r\n    this.setState({\r\n      deleteHodOpen: false\r\n    });\r\n  };\r\n\r\n  handleDeleteHod = id => {\r\n    this.handleDeleteHodDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=hod\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Hod deleted!!!!\");\r\n        dHodId = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Add Hod Section\r\n  handleAddHodDialogOpen = () => {\r\n    this.setState({\r\n      addHodOpen: true\r\n    });\r\n  };\r\n  handleAddHodDialogClose = () => {\r\n    this.setState({\r\n      addHodOpen: false\r\n    });\r\n  };\r\n\r\n  handleHodNameChange = e => {\r\n    this.setState({\r\n      hodName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleHodEmailChange = e => {\r\n    this.setState({\r\n      hodEmail: e.target.value\r\n    });\r\n  };\r\n\r\n  //axios for addHod\r\n  handleAddHod = () => {\r\n    if (this.state.hodName === \"\" || this.state.hodEmail === \"\") {\r\n      alert(\"HOD name or email cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addhod\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name: this.state.hodName,\r\n          email: this.state.hodEmail\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"HOD Assigned Successfully!!!!!\");\r\n          this.setState({\r\n            hodName: \"\",\r\n            hodEmail: \"\",\r\n            addHodOpen: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"HOD not assigned\");\r\n          this.setState({\r\n            addHodOpen: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Add Guide Button & different options in Dialog Box\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      Open: true\r\n    });\r\n  };\r\n  handleCloseCancel = () => {\r\n    this.setState({\r\n      Open: false\r\n    });\r\n  };\r\n  handleCloseSubmit = () => {\r\n    this.setState({\r\n      Loading: true\r\n    });\r\n    if (this.state.guideName === \"\" || this.state.guideEmail === \"\") {\r\n      alert(\"Guide name or email cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide?type=new\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name: this.state.guideName,\r\n          email: this.state.guideEmail\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"submitted\");\r\n          this.setState({\r\n            Loading: false,\r\n            guideName: \"\",\r\n            guideEmail: \"\",\r\n            Open: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"Guide not added\");\r\n          this.setState({\r\n            Loading: false,\r\n            Open: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Delete guide DialogBOX\r\n\r\n  handleDeleteDialogOpen = (id, name, email) => {\r\n    dguideEmail = email;\r\n    dguideId = id;\r\n    dguideName = name;\r\n    this.setState({\r\n      deleteOpen: true\r\n    });\r\n  };\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({\r\n      deleteOpen: false\r\n    });\r\n  };\r\n\r\n  handleDeleteGuide = (id, name, email) => {\r\n    this.handleDeleteDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=guide\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        name: name,\r\n        email: email\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"guide deleted!!!!\");\r\n        dguideEmail = null;\r\n        dguideId = null;\r\n        dguideName = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Dialog box Guide name and email\r\n\r\n  handleGNameChange = e => {\r\n    this.setState({\r\n      guideName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleGEmailChange = e => {\r\n    this.setState({\r\n      guideEmail: e.target.value\r\n    });\r\n  };\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  getGuide = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        guideData = res.data;\r\n        this.setState({\r\n          guideDetails: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (guideData === null) {\r\n      this.getGuide();\r\n    }\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      if (guideData !== null) {\r\n        return (\r\n          <React.Fragment>\r\n            <SideMenu />\r\n            {/* MANAGE GUIDE UI START */}\r\n            <div className={classes.mHodContainer}>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <Typography variant=\"h2\" style={{ margin: \"20px auto\" }}>\r\n                    Manage Guide\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  {!this.state.Loading ? (\r\n                    <div>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleClickOpen}\r\n                        style={{ margin: \"35px\", padding: \"10px 50px\" }}\r\n                      >\r\n                        Add Guide\r\n                      </Button>\r\n                      <Dialog\r\n                        open={this.state.Open}\r\n                        onClose={this.handleCloseCancel}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                      >\r\n                        <DialogTitle id=\"form-dialog-title\">\r\n                          Add Guide\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <DialogContentText>\r\n                            Please add name and email of Guide.\r\n                          </DialogContentText>\r\n                          <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"guideName\"\r\n                            label=\"Guide Name\"\r\n                            type=\"text\"\r\n                            value={this.state.guideName}\r\n                            onChange={this.handleGNameChange}\r\n                            fullWidth\r\n                            required\r\n                          />\r\n                          <TextField\r\n                            margin=\"dense\"\r\n                            id=\"guideEmail\"\r\n                            label=\"Guide Email\"\r\n                            type=\"text\"\r\n                            value={this.state.guideEmail}\r\n                            onChange={this.handleGEmailChange}\r\n                            fullWidth\r\n                            required\r\n                          />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button\r\n                            onClick={this.handleCloseCancel}\r\n                            color=\"primary\"\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.handleCloseSubmit}\r\n                            color=\"primary\"\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <CircularProgress />\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div className={classes.guideListHolder}>\r\n                {guideData !== null ? (\r\n                  guideData.map(guide => {\r\n                    if (guide.type === \"hod\") {\r\n                      checkHod = true;\r\n                    }\r\n                    if (guide.type === \"guide\")\r\n                      return (\r\n                        <Card className={classes.guideList} key={guide.name}>\r\n                          <Grid container>\r\n                            <Grid item xs={1}></Grid>\r\n                            <Grid item xs={4}>\r\n                              <Typography>{guide.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <Typography>{guide.email}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              <DeleteIcon\r\n                                className={classes.deleteIconStyle}\r\n                                onClick={() =>\r\n                                  this.handleDeleteDialogOpen(\r\n                                    guide.id,\r\n                                    guide.name,\r\n                                    guide.email\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Card>\r\n                      );\r\n                    else return null;\r\n                  })\r\n                ) : (\r\n                  <CircularProgress />\r\n                )}\r\n              </div>\r\n              {/* Dialog box for delete confirmation of Guide   */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.deleteOpen}\r\n                  onClose={this.handleDeleteDialogClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete Guide\"}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      Are you sure you want to delete this guide? If this guide\r\n                      is assigned to any groups,then you need to assign guides\r\n                      for that group again\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleDeleteDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() =>\r\n                        this.handleDeleteGuide(\r\n                          dguideId,\r\n                          dguideName,\r\n                          dguideEmail\r\n                        )\r\n                      }\r\n                      color=\"primary\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </div>\r\n            {/* MANAGE GUIDE UI END */}\r\n            {/* MANAGE HOD UI START */}\r\n            <div\r\n              className={classes.mHodContainer}\r\n              style={{ marginBottom: \"200px\" }}\r\n            >\r\n              <Grid container>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <Typography variant=\"h2\" style={{ margin: \"20px auto\" }}>\r\n                    Manage Hod\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  {\" \"}\r\n                  <div>\r\n                    {checkHod ? null : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleAddHodDialogOpen}\r\n                        style={{ margin: \"35px\", padding: \"10px 50px\" }}\r\n                      >\r\n                        Assign HOD\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div className={classes.guideListHolder}>\r\n                {guideData !== null ? (\r\n                  guideData.map(hod => {\r\n                    if (hod.type === \"hod\") {\r\n                      checkHod = true;\r\n                      return (\r\n                        <Card className={classes.guideList} key={hod.name}>\r\n                          <Grid container>\r\n                            <Grid item xs={1}></Grid>\r\n                            <Grid item xs={4}>\r\n                              <Typography>{hod.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <Typography>{hod.email}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              <DeleteIcon\r\n                                className={classes.deleteIconStyle}\r\n                                onClick={() =>\r\n                                  this.handleDeleteHodDialogOpen(hod.id)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Card>\r\n                      );\r\n                    } else return null;\r\n                  })\r\n                ) : (\r\n                  <CircularProgress />\r\n                )}\r\n              </div>\r\n              {/* Dialog for Delete hod */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.deleteHodOpen}\r\n                  onClose={this.handleDeleteHodDialogClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete HOD\"}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      Are you sure you want to delete this HOD?\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleDeleteHodDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => this.handleDeleteHod(dHodId)}\r\n                      color=\"primary\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n              {/* Add HOD DIALOG */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.addHodOpen}\r\n                  onClose={this.handleAddHodDialogClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                  <DialogTitle id=\"form-dialog-title\">Add HOD</DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>\r\n                      Please add name and email of HOD\r\n                    </DialogContentText>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"HodName\"\r\n                      label=\"HOD Name\"\r\n                      type=\"text\"\r\n                      value={this.state.hodName}\r\n                      onChange={this.handleHodNameChange}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"HodEmail\"\r\n                      label=\"HOD Email\"\r\n                      type=\"text\"\r\n                      value={this.state.hodEmail}\r\n                      onChange={this.handleHodEmailChange}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleAddHodDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button onClick={this.handleAddHod} color=\"primary\">\r\n                      Submit\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </div>\r\n            {/* MANAGE HOD UI END */}\r\n          </React.Fragment>\r\n        );\r\n      } else return <LinearProgress />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminGuidePage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { withStyles, Grid, Card } from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\n\r\nlet dArchiveId = null;\r\nlet archData = null;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  mainAccor: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    margin: \"auto\"\r\n  },\r\n  mainAccorContainer: {\r\n    width: \"80%\",\r\n    margin: \"2px auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  memberHolder: {\r\n    width: \"10%\",\r\n    backgroundColor: \"#909090\"\r\n  },\r\n  groupCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    textAlign: \"left\"\r\n  },\r\n  accorStyle: {\r\n    backgroundColor: \"#d3d3d3\"\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  presCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  }\r\n});\r\n\r\nclass AdminArchives extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      expanded: false,\r\n      archiveData: null,\r\n      deleteDialogOpen: false\r\n    };\r\n  }\r\n\r\n  //DIALOG FOR DELETE ARCHIVE\r\n  handleDeleteArchiveDialogOpen = (e, id) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    dArchiveId = id;\r\n    this.setState({\r\n      deleteDialogOpen: true\r\n    });\r\n  };\r\n  handleDeleteArchiveDialogClose = () => {\r\n    this.setState({\r\n      deleteDialogOpen: false\r\n    });\r\n  };\r\n  handleDeleteArchive = id => {\r\n    this.handleDeleteArchiveDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteArchieve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Archive deleted!!!!\");\r\n        dArchiveId = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Get Archive Data\r\n  getArchive = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/archive\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        archData = res.data.data;\r\n        this.setState(\r\n          {\r\n            archiveData: res.data.data\r\n          },\r\n        );\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.user === \"\" && this.state.archiveData === null) {\r\n      this.getStat();\r\n      this.getArchive();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return this.state.archiveData !== null ? (\r\n        <React.Fragment>\r\n          {/* DIALOG FOR DELETE ARCHIVE */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteDialogOpen}\r\n              onClose={this.handleDeleteArchiveDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Archive Data\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to this Archive Data? After deleting\r\n                  this, the Data will be lost completely\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteArchiveDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => this.handleDeleteArchive(dArchiveId)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          <SideMenu />\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              width: \"80%\",\r\n              margin: \"30px auto\",\r\n              boxShadow:\r\n                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n            }}\r\n          >\r\n            <Typography variant=\"h2\">Archive</Typography>\r\n          </div>\r\n          {/* ACCORDION FOR GROUPDATA */}\r\n          <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n            {archData\r\n              ? archData.map(data => {\r\n                  let archId = data._id;\r\n                  return (\r\n                    <Accordion\r\n                      className={classes.mainAccor}\r\n                      key={data.acadYear}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Grid container>\r\n                          <Grid item xs={4}>\r\n                            <Typography variant=\"h6\">\r\n                              {data.acadYear}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6}></Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{ textAlign: \"right\", padding: \"auto\" }}\r\n                          >\r\n                            <DeleteIcon\r\n                              onClick={e =>\r\n                                this.handleDeleteArchiveDialogOpen(e, archId)\r\n                              }\r\n                              className={classes.deleteIconStyle}\r\n                              style={{ margin: \"3px\" }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <div style={{ width: \"100%\" }}>\r\n                          {data.groups.map(group => {\r\n                            return (\r\n                              <Accordion key={group.name}>\r\n                                <AccordionSummary\r\n                                  expandIcon={<ExpandMoreIcon />}\r\n                                  aria-controls=\"panel1a-content\"\r\n                                  id=\"panel1a-header\"\r\n                                >\r\n                                  <Typography className={classes.heading}>\r\n                                    {toFirstCharUppercase(group.name)}\r\n                                  </Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                  <div style={{ width: \"100%\" }}>\r\n                                    <Card\r\n                                      style={{ backgroundColor: \"#d3d3d3\" }}\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item>\r\n                                          <Typography\r\n                                            style={{\r\n                                              margin: \"10px 15px\",\r\n                                              textAlign: \"left\"\r\n                                            }}\r\n                                          >\r\n                                            Guide Details:\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                          <Typography\r\n                                            style={{\r\n                                              margin: \"10px 15px\",\r\n                                              textAlign: \"left\"\r\n                                            }}\r\n                                          >\r\n                                            {group.guide.name}&nbsp;\r\n                                            {\"  \"}\r\n                                            <b>{group.guide.email}</b>\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    </Card>\r\n\r\n                                    <Accordion className={classes.accorStyle}>\r\n                                      <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel1a-content\"\r\n                                        id=\"panel1a-header\"\r\n                                      >\r\n                                        <Typography className={classes.heading}>\r\n                                          Members\r\n                                        </Typography>\r\n                                      </AccordionSummary>\r\n                                      <AccordionDetails>\r\n                                        <React.Fragment>\r\n                                          <div style={{ width: \"100%\" }}>\r\n                                            <Card className={classes.groupCard}>\r\n                                              <Grid container>\r\n                                                <Grid item xs={1}></Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    <b>Name</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    <b>Email</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    <b>Rollno</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}></Grid>\r\n                                              </Grid>\r\n                                            </Card>\r\n                                            {group.members.map(member => {\r\n                                              return (\r\n                                                <Card\r\n                                                  className={classes.groupCard}\r\n                                                  key={member.name}\r\n                                                >\r\n                                                  <Grid\r\n                                                    container\r\n                                                    key={member.rollno}\r\n                                                  >\r\n                                                    <Grid item xs={1}></Grid>\r\n                                                    <Grid item xs={3}>\r\n                                                      <Typography>\r\n                                                        {member.name}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={3}>\r\n                                                      <Typography>\r\n                                                        {member.email}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}>\r\n                                                      <Typography>\r\n                                                        {member.rollno}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}></Grid>\r\n                                                  </Grid>\r\n                                                </Card>\r\n                                              );\r\n                                            })}\r\n                                          </div>\r\n                                        </React.Fragment>\r\n                                      </AccordionDetails>\r\n                                    </Accordion>\r\n                                    <Accordion className={classes.accorStyle}>\r\n                                      <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel2a-content\"\r\n                                        id=\"panel2a-header\"\r\n                                      >\r\n                                        <Typography className={classes.heading}>\r\n                                          Proposals\r\n                                        </Typography>\r\n                                      </AccordionSummary>\r\n                                      <AccordionDetails>\r\n                                        <div className={classes.root}>\r\n                                          {group.proposals.length === 3 ? (\r\n                                            group.proposals.map(\r\n                                              (proposal, index) => {\r\n                                                let approval =\r\n                                                  proposal.approval;\r\n\r\n                                                return (\r\n                                                  <Accordion\r\n                                                    style={{\r\n                                                      textAlign: \"left\"\r\n                                                    }}\r\n                                                    key={proposal.title}\r\n                                                  >\r\n                                                    <AccordionSummary\r\n                                                      expandIcon={\r\n                                                        <ExpandMoreIcon />\r\n                                                      }\r\n                                                      aria-controls=\"panel1a-content\"\r\n                                                      id=\"panel1a-header\"\r\n                                                    >\r\n                                                      <Typography\r\n                                                        className={\r\n                                                          classes.heading\r\n                                                        }\r\n                                                      >\r\n                                                        Proposal {index + 1}\r\n                                                      </Typography>\r\n                                                    </AccordionSummary>\r\n                                                    <AccordionDetails>\r\n                                                      <Grid\r\n                                                        container\r\n                                                        className={\r\n                                                          classes.content\r\n                                                        }\r\n                                                        spacing={1}\r\n                                                      >\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Title of\r\n                                                              Proposal:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.title}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Detailed Statement\r\n                                                              of\r\n                                                              Problem:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.details}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Internal\r\n                                                              Agency/External\r\n                                                              Agency/CTL/Mastek/or\r\n                                                              any\r\n                                                              other:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.agency}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Methods/Technique/Algorithm\r\n                                                              proposed:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.method}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Software/Hardware\r\n                                                              Requirements:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {\r\n                                                              proposal.requirements\r\n                                                            }\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Domain of\r\n                                                              Specialization:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {\r\n                                                              proposal.specialization\r\n                                                            }\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Result\r\n                                                              Expected:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.result}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Appied\r\n                                                              On:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {/* {proposal.applied.split(\"T\")[0]} */}\r\n                                                            {proposal.applied.substr(\r\n                                                              0,\r\n                                                              10\r\n                                                            )}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12}>\r\n                                                          {approval.admin ? (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                Admin approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              Approved\r\n                                                            </Typography>\r\n                                                          ) : (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                Admin approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              not approved\r\n                                                            </Typography>\r\n                                                          )}\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          {approval.hod ? (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                HOD approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              Approved\r\n                                                            </Typography>\r\n                                                          ) : (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                HOD approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              not approved\r\n                                                            </Typography>\r\n                                                          )}\r\n                                                        </Grid>\r\n\r\n                                                        <Grid\r\n                                                          item\r\n                                                          xs={12}\r\n                                                          sm={6}\r\n                                                          style={{\r\n                                                            textAlign: \"right\"\r\n                                                          }}\r\n                                                        ></Grid>\r\n                                                      </Grid>\r\n                                                    </AccordionDetails>\r\n                                                  </Accordion>\r\n                                                );\r\n                                              }\r\n                                            )\r\n                                          ) : (\r\n                                            <Typography>\r\n                                              Proposals Not filled yet\r\n                                            </Typography>\r\n                                          )}\r\n                                        </div>\r\n                                      </AccordionDetails>\r\n                                    </Accordion>\r\n                                  </div>\r\n                                </AccordionDetails>\r\n                              </Accordion>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                })\r\n              : null}\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <LinearProgress />\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\nexport default withStyles(useStyles)(AdminArchives);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  makeStyles,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nlet Groups = null;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nconst GuideGroupList = props => {\r\n  const [adData, setAdData] = React.useState(null);\r\n  const [filled, setFilled] = React.useState(false);\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  function checkData() {\r\n    setLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Groups = res.data;\r\n        setAdData(\"new\");\r\n        setFilled(true);\r\n        setLoading(false);\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  //accordion handleChange\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n  if (adData === null) {\r\n    checkData();\r\n  }\r\n  if (filled) {\r\n    if (Groups.length !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Typography style={{ margin: \"10px\" }} variant=\"h4\">\r\n            Assigned Groups\r\n          </Typography>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              histor.push({\r\n                pathname: `/guide/prefs/${id}`\r\n              });\r\n            };\r\n            //console.log(Group);\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            // let pref2 = [];\r\n            // let pref3 = [];\r\n            let AppliedOn = null;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              // pref2 = Group.proposals[1];\r\n              // pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              //console.log(AppliedOn, DueDate);\r\n            }\r\n            // if (Group.guide.name===userInfo.name) {\r\n            return (\r\n              <React.Fragment>\r\n                <Accordion\r\n                  style={{\r\n                    width: \"90%\",\r\n                    margin: \"auto\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"2px\",\r\n                    boxShadow:\r\n                      \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                  }}\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item container xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <React.Fragment>\r\n                            <Grid item xs={3}>\r\n                              <Button\r\n                                onClick={routeChange}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                              >\r\n                                More Details\r\n                              </Button>\r\n                            </Grid>\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n                <div style={{ marginBottom: \"50px\" }}></div>\r\n              </React.Fragment>\r\n            );\r\n            // }\r\n            // return null;\r\n          })}\r\n          <Footer />\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <Typography>No group has been assigned to you yet.</Typography>;\r\n    }\r\n  } else {\r\n    return <CircularProgress />;\r\n  }\r\n};\r\n\r\nexport default GuideGroupList;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport GuideGroupList from \"../components/Guide Component/GroupList\";\r\nimport Profile from \"../components/Profile\"\r\n\r\n\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"guide\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"guide\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <LoggedNavbar />\r\n            <Profile userInfo={this.state.user} academicYear={null} />\r\n            <GuideGroupList userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n  Card\r\n} from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport HodCommentPage from \"../Hod-component/HodCommentPage\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\n//getting todays date\r\nvar tempDate = new Date();\r\nvar date =\r\n  tempDate.getFullYear() +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getMonth() + 1) +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getDate());\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n// const months=[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n// let pd= new Date()\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  }\r\n});\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      scheduleLoading: false,\r\n      dateTime: \"\",\r\n      orgMarks: \"\",\r\n      eodMarks: \"\",\r\n      timeMarks: \"\",\r\n      subKnowMarks: \"\",\r\n      probStatement: \"\",\r\n      concept: \"\",\r\n      innovation: \"\",\r\n      pmf: \"\",\r\n      teamWork: \"\",\r\n      bibliography: \"\",\r\n      diagram: \"\",\r\n      enggTheoryAnaly: \"\",\r\n      orgAndWriting: \"\",\r\n      spellAndGrammar: \"\",\r\n      weeklyLogMsg: \"\",\r\n      weeklyLogDate: date\r\n    };\r\n  }\r\n\r\n  handleBibliography = e => {\r\n    this.setState({ bibliography: e.target.value });\r\n  };\r\n  handleProbStatement = e => {\r\n    this.setState({ probStatement: e.target.value });\r\n  };\r\n  handleConcept = e => {\r\n    this.setState({ concept: e.target.value });\r\n  };\r\n  handleSpellAndGrammar = e => {\r\n    this.setState({ spellAndGrammar: e.target.value });\r\n  };\r\n  handleOrgAndWriting = e => {\r\n    this.setState({ orgAndWriting: e.target.value });\r\n  };\r\n  handleEngTheoryAnaly = e => {\r\n    this.setState({ enggTheoryAnaly: e.target.value });\r\n  };\r\n  handleDiagram = e => {\r\n    this.setState({ diagram: e.target.value });\r\n  };\r\n  handleTeamWork = e => {\r\n    this.setState({ teamWork: e.target.value });\r\n  };\r\n  handlePMF = e => {\r\n    this.setState({ pmf: e.target.value });\r\n  };\r\n  handleInnovation = e => {\r\n    this.setState({ innovation: e.target.value });\r\n  };\r\n\r\n  handleReportSubmit = (e, id) => {\r\n    if (\r\n      this.state.bibliography > 3 ||\r\n      this.state.diagram > 3 ||\r\n      this.state.enggTheoryAnaly > 3 ||\r\n      this.state.orgAndWriting > 3 ||\r\n      this.state.spellAndGrammar > 3 ||\r\n      this.state.bibliography === \"\" ||\r\n      this.state.diagram === \"\" ||\r\n      this.state.enggTheoryAnaly === \"\" ||\r\n      this.state.orgAndWriting === \"\" ||\r\n      this.state.spellAndGrammar === \"\"\r\n    ) {\r\n      alert(\"Please enter appropriate marks\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/report\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: id,\r\n          orgAndWriting: this.state.orgAndWriting,\r\n          enggTheoryAnaly: this.state.enggTheoryAnaly,\r\n          biblogrpahy: this.state.bibliography,\r\n          spellAndGrammar: this.state.spellAndGrammar,\r\n          diagrams: this.state.diagram\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          this.setState({\r\n            bibliography: \"\",\r\n            diagram: \"\",\r\n            spellAndGrammar: \"\",\r\n            enggTheoryAnaly: \"\",\r\n            orgAndWriting: \"\"\r\n          });\r\n          window.location.reload();\r\n        })\r\n\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          this.setState({\r\n            bibliography: \"\",\r\n            diagram: \"\",\r\n            spellAndGrammar: \"\",\r\n            enggTheoryAnaly: \"\",\r\n            orgAndWriting: \"\"\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleDeleteReport = (e, id) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteReport\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          bibliography: \"\",\r\n          diagram: \"\",\r\n          spellAndGrammar: \"\",\r\n          enggTheoryAnaly: \"\",\r\n          orgAndWriting: \"\"\r\n        });\r\n        window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          bibliography: \"\",\r\n          diagram: \"\",\r\n          spellAndGrammar: \"\",\r\n          enggTheoryAnaly: \"\",\r\n          orgAndWriting: \"\"\r\n        });\r\n      });\r\n  };\r\n\r\n  //WEEKLY LOG\r\n  weeklyMsgHandler = e => {\r\n    let message = e.target.value;\r\n    this.setState({\r\n      weeklyLogMsg: message\r\n    });\r\n  };\r\n\r\n  appendLeadingZeroes = n => {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  };\r\n  handleweelyDateChange = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getDate());\r\n    this.setState({\r\n      weeklyLogDate: formatted_date\r\n    });\r\n  };\r\n\r\n  sendLog = gid => {\r\n    const { weeklyLogDate, weeklyLogMsg } = this.state;\r\n    if (weeklyLogMsg === \"\") {\r\n      alert(\"Please enter a remark\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/weeklyMeetLog\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: gid,\r\n          date: weeklyLogDate,\r\n          remark: weeklyLogMsg\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          window.location.reload();\r\n          this.setState({\r\n            weeklyLogMsg: \"\"\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  //Delete weekly Log\r\n  deleteLog = (gid, wid) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteWeeklyMeetLog\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: gid,\r\n        id: wid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  /////////////////\r\n\r\n  handleImplementationSubmit = (e, id) => {\r\n    if (\r\n      this.state.concept > 3 ||\r\n      this.state.teamWork > 3 ||\r\n      this.state.pmf > 3 ||\r\n      this.state.innovation > 3 ||\r\n      this.state.probStatment > 3 ||\r\n      this.state.concept === \"\" ||\r\n      this.state.teamWork === \"\" ||\r\n      this.state.pmf === \"\" ||\r\n      this.state.innovation === \"\" ||\r\n      this.state.probStatment === \"\"\r\n    ) {\r\n      alert(\"Please enter appropriate marks\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/implementation\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: id,\r\n          probStatment: this.state.probStatement,\r\n          concept: this.state.concept,\r\n          innovation: this.state.innovation,\r\n          teamwork: this.state.teamWork,\r\n          pmf: this.state.pmf\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          this.setState({\r\n            probStatement: \"\",\r\n            concept: \"\",\r\n            innovation: \"\",\r\n            teamWork: \"\",\r\n            pmf: \"\"\r\n          });\r\n          window.location.reload();\r\n        })\r\n\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          this.setState({\r\n            probStatement: \"\",\r\n            concept: \"\",\r\n            innovation: \"\",\r\n            teamWork: \"\",\r\n            pmf: \"\"\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleDeleteImplementation = (e, id) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteImplementation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          probStatement: \"\",\r\n          concept: \"\",\r\n          innovation: \"\",\r\n          teamWork: \"\",\r\n          pmf: \"\"\r\n        });\r\n        window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          probStatement: \"\",\r\n          concept: \"\",\r\n          innovation: \"\",\r\n          teamWork: \"\",\r\n          pmf: \"\"\r\n        });\r\n      });\r\n  };\r\n\r\n  sche_pres = (e, id) => {\r\n    let dt = new Date(this.state.dateTime);\r\n    this.setState({ scheduleLoading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/presentation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        datetime: dt.toISOString(),\r\n        gid: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ scheduleLoading: false });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        this.setState({ scheduleLoading: false });\r\n      });\r\n  };\r\n\r\n  handleDateTimeChange = e => {\r\n    this.setState({ dateTime: e.target.value });\r\n  };\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState({\r\n      comment: comment\r\n    });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          this.setState({\r\n            comment: \"\",\r\n            adData: null\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(response => {\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  handleMarkSubmit = (e, groupID, presentationID) => {\r\n    if (\r\n      parseInt(this.state.timeMarks, 10) > 2 ||\r\n      parseInt(this.state.orgMarks, 10) > 2 ||\r\n      parseInt(this.state.eodMarks, 10) > 2 ||\r\n      parseInt(this.state.subKnowMarks, 10) > 2\r\n    ) {\r\n      alert(\"Entered marks greater than max marks. Please re-enter\");\r\n      this.setState({\r\n        timeMarks: null,\r\n        orgMarks: null,\r\n        eodMarks: null,\r\n        subKnowMarks: null\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/presentationMarks\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: groupID,\r\n          pid: presentationID,\r\n          orgMarks: this.state.orgMarks,\r\n          subKnowMarks: this.state.subKnowMarks,\r\n          EODMarks: this.state.eodMarks,\r\n          timeMarks: this.state.timeMarks\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ marks: \"\", totalMarks: \"\" });\r\n          window.location.reload();\r\n        })\r\n        .catch(err => {\r\n          this.setState({ marks: \"\", totalMarks: \"\" });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleOrgMarks = e => {\r\n    this.setState({ orgMarks: e.target.value });\r\n  };\r\n  handleSubKnowMarks = e => {\r\n    this.setState({ subKnowMarks: e.target.value });\r\n  };\r\n  handleTimeMarks = e => {\r\n    this.setState({ timeMarks: e.target.value });\r\n  };\r\n  handleEodMarks = e => {\r\n    this.setState({ eodMarks: e.target.value });\r\n  };\r\n\r\n  handleDeletePresentation = (e, PID, GID) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deletePresentation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        pid: PID,\r\n        gid: GID\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              let Gid = group.id;\r\n              if (group.id === this.props.match.params.id) {\r\n                let Presentations = group.presentation;\r\n                let Proposals = group.proposals;\r\n                let Comments = group.comments;\r\n                let weeklyLog = group.weeklyMeetLog;\r\n                let implementation = group.implementation;\r\n                let report = group.report;\r\n                Presentations.sort((a, b) =>\r\n                  new Date(a.scheduled_date).getTime() >\r\n                  new Date(b.scheduled_date).getTime()\r\n                    ? 1\r\n                    : -1\r\n                );\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let appliedDate = new Date(proposal.applied);\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Detailed Statement of Problem:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Internal Agency/External\r\n                                    Agency/CTL/Mastek/or any other:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Methods/Technique/Algorithm\r\n                                    proposed:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Software/Hardware Requirements:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/\r\n                                  {appliedDate.getMonth() + 1}/\r\n                                  {appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `${SERVER_URL}/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <Card\r\n                      style={{\r\n                        marginTop: \"50px\",\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"20px\",\r\n                        paddingTop: \"0px\",\r\n                        marginBottom: \"50px\"\r\n                      }}\r\n                    >\r\n                      <Grid style={{ marginTop: \"20px\" }} container>\r\n                        <Grid item xs={4} style={{ textAlign: \"left\" }}>\r\n                          <Typography\r\n                            style={{ marginBottom: \"20px\", marginLeft: \"20px\" }}\r\n                            variant=\"h3\"\r\n                          >\r\n                            Presentation\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                          <form\r\n                            onSubmit={e => {\r\n                              this.sche_pres(e, Gid);\r\n                            }}\r\n                          >\r\n                            <Grid container>\r\n                              <Grid item xs={3}></Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={6}\r\n                                style={{\r\n                                  padding: \"5px\",\r\n                                  backgroundColor: \"#fff\"\r\n                                }}\r\n                              >\r\n                                <TextField\r\n                                  id=\"datetime-local\"\r\n                                  label=\"Next Presentation\"\r\n                                  type=\"datetime-local\"\r\n                                  className={classes.textField}\r\n                                  required\r\n                                  InputLabelProps={{\r\n                                    shrink: true\r\n                                  }}\r\n                                  onChange={this.handleDateTimeChange}\r\n                                  style={{\r\n                                    padding: \"5px 20px\",\r\n                                    borderRadius: \"2px\"\r\n                                  }}\r\n                                />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={3}\r\n                                style={{\r\n                                  padding: \"5px\",\r\n                                  textAlign: \"left\",\r\n                                  backgroundColor: \"#fff\"\r\n                                }}\r\n                              >\r\n                                {!this.state.scheduleLoading ? (\r\n                                  <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{ margin: \"10px\" }}\r\n                                  >\r\n                                    Schedule\r\n                                  </Button>\r\n                                ) : (\r\n                                  <CircularProgress />\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </form>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {Presentations.length !== 0 ? (\r\n                            <React.Fragment>\r\n                              {Presentations.map((presentation, index) => {\r\n                                const panel = presentation._id;\r\n                                let d = new Date(presentation.scheduled_date);\r\n                                return (\r\n                                  <Accordion\r\n                                    key={presentation._id}\r\n                                    expanded={expanded === panel}\r\n                                    onChange={this.handleChange(panel)}\r\n                                  >\r\n                                    <AccordionSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls=\"panel1bh-content\"\r\n                                      id=\"panel1bh-header\"\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography variant=\"h6\">\r\n                                            <b>Presentation {index + 1}</b>\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        {!presentation.filled ? (\r\n                                          <React.Fragment>\r\n                                            {d.getTime() > Date.now() ? (\r\n                                              <React.Fragment>\r\n                                                <Grid item xs={6} />\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    Presentation Not conducted\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                              </React.Fragment>\r\n                                            ) : (\r\n                                              <React.Fragment>\r\n                                                <Grid item xs={6} />\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography color=\"secondary\">\r\n                                                    Presentation Missing\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                              </React.Fragment>\r\n                                            )}\r\n                                          </React.Fragment>\r\n                                        ) : (\r\n                                          <React.Fragment>\r\n                                            <Grid item xs={6} />\r\n                                            <Grid item xs={3}>\r\n                                              <Typography\r\n                                                style={{ color: \"green\" }}\r\n                                              >\r\n                                                Presentation conducted\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                          </React.Fragment>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <Grid\r\n                                        container\r\n                                        className={classes.content}\r\n                                        spacing={1}\r\n                                        style={{\r\n                                          padding: \"0px\"\r\n                                        }}\r\n                                      >\r\n                                        <Grid\r\n                                          item\r\n                                          xs={2}\r\n                                          style={{\r\n                                            textAlign: \"left\",\r\n                                            backgroundColor: \"#d3d3d3\"\r\n                                          }}\r\n                                        >\r\n                                          <React.Fragment>\r\n                                            {d.getHours() > 12 ? (\r\n                                              <Typography variant=\"h5\">\r\n                                                {d.getHours() - 12}:\r\n                                                {d.getMinutes()} pm\r\n                                              </Typography>\r\n                                            ) : (\r\n                                              <Typography variant=\"h5\">\r\n                                                {d.getHours()}:{d.getMinutes()}{\" \"}\r\n                                                am\r\n                                              </Typography>\r\n                                            )}\r\n                                            {days[d.getDay()]} {d.getDate()}/\r\n                                            {d.getMonth() + 1}/{d.getFullYear()}\r\n                                          </React.Fragment>\r\n                                        </Grid>\r\n                                        {!presentation.filled &&\r\n                                        d.getTime() <= Date.now() ? (\r\n                                          <Grid\r\n                                            item\r\n                                            xs={10}\r\n                                            style={{\r\n                                              backgroundColor: \"#fff\",\r\n                                              padding: \"0px\",\r\n                                              margin: \"0px 0px\",\r\n                                              border: \"4px solid #d3d3d3\"\r\n                                            }}\r\n                                          >\r\n                                            <Grid container>\r\n                                              <Grid item>\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={this.state.timeMarks}\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Time Management(3)\"\r\n                                                  onChange={\r\n                                                    this.handleTimeMarks\r\n                                                  }\r\n                                                  style={{\r\n                                                    margin: \"10px 5px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n                                              <Grid\r\n                                                item\r\n\r\n                                                // style={{ textAlign: \"right\" }}\r\n                                              >\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={this.state.eodMarks}\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Effectiveness(3) \"\r\n                                                  onChange={this.handleEodMarks}\r\n                                                  style={{\r\n                                                    margin: \"10px 5px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n\r\n                                              <Grid item>\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={this.state.orgMarks}\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Organization(2)\"\r\n                                                  onChange={this.handleOrgMarks}\r\n                                                  style={{\r\n                                                    margin: \"10px 5px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n                                              <Grid item>\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={\r\n                                                    this.state.subKnowMarks\r\n                                                  }\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Subject Knowledge(2)\"\r\n                                                  onChange={\r\n                                                    this.handleSubKnowMarks\r\n                                                  }\r\n                                                  style={{\r\n                                                    margin: \"10px 5px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n                                              <Grid item>\r\n                                                <Button\r\n                                                  size=\"large\"\r\n                                                  variant=\"contained\"\r\n                                                  color=\"primary\"\r\n                                                  onClick={e => {\r\n                                                    this.handleMarkSubmit(\r\n                                                      e,\r\n                                                      Gid,\r\n                                                      presentation._id\r\n                                                    );\r\n                                                  }}\r\n                                                  style={{\r\n                                                    margin: \"10px 0px\",\r\n                                                    marginLeft: \"15px\"\r\n                                                  }}\r\n                                                >\r\n                                                  Submit Marks\r\n                                                </Button>\r\n                                              </Grid>\r\n                                            </Grid>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                        {presentation.filled ? (\r\n                                          <React.Fragment>\r\n                                            <Grid\r\n                                              item\r\n                                              xs={10}\r\n                                              style={{\r\n                                                border: \"4px solid #d3d3d3\",\r\n                                                padding: \"12px\",\r\n                                                textAlign: \"center\"\r\n                                              }}\r\n                                            >\r\n                                              <Grid container>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    Organisation:&nbsp;\r\n                                                    {presentation.orgMarks}\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    Subject Knowledge:&nbsp;\r\n                                                    {presentation.subKnowMarks}\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    Effectiveness of\r\n                                                    Delivery:&nbsp;\r\n                                                    {presentation.EODMarks}\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    Time Management:&nbsp;\r\n                                                    {presentation.timeMarks}\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    <b>\r\n                                                      Total Marks:\r\n                                                      {presentation.orgMarks +\r\n                                                        presentation.subKnowMarks +\r\n                                                        presentation.EODMarks +\r\n                                                        presentation.timeMarks}\r\n                                                      /10\r\n                                                    </b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                              </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid\r\n                                              item\r\n                                              xs={12}\r\n                                              style={{ textAlign: \"right\" }}\r\n                                            >\r\n                                              <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                onClick={e => {\r\n                                                  this.handleDeletePresentation(\r\n                                                    e,\r\n                                                    presentation._id,\r\n                                                    Gid\r\n                                                  );\r\n                                                }}\r\n                                              >\r\n                                                Delete presentation\r\n                                              </Button>\r\n                                            </Grid>\r\n                                          </React.Fragment>\r\n                                        ) : (\r\n                                          <Grid\r\n                                            item\r\n                                            xs={12}\r\n                                            style={{ textAlign: \"right\" }}\r\n                                          >\r\n                                            <Button\r\n                                              variant=\"contained\"\r\n                                              color=\"secondary\"\r\n                                              onClick={e => {\r\n                                                this.handleDeletePresentation(\r\n                                                  e,\r\n                                                  presentation._id,\r\n                                                  Gid\r\n                                                );\r\n                                              }}\r\n                                            >\r\n                                              Delete presentation\r\n                                            </Button>\r\n                                          </Grid>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </AccordionDetails>\r\n                                  </Accordion>\r\n                                );\r\n                              })}\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            <React.Fragment>\r\n                              <Typography>No presentation scheduled</Typography>\r\n                            </React.Fragment>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    {/* Report marks */}\r\n                    <Card\r\n                      style={{\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\"\r\n                      }}\r\n                    >\r\n                      <Grid container>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            margin: \"20px 0px 0px 20px\"\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h3\">Report Marks</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ margin: \"20px 0px\" }}>\r\n                          {report.filled ? (\r\n                            <Card\r\n                              style={{\r\n                                padding: \"10px\",\r\n                                margin: \"2px 0px\"\r\n                              }}\r\n                            >\r\n                              <Grid container>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Organisation and writing style :{\" \"}\r\n                                    {report.orgAndWriting}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Engineering Theory and Analysis :{\" \"}\r\n                                    {report.enggTheoryAnaly}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Use of Bibliography : {report.biblogrpahy}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Spelling and Grammar :{\" \"}\r\n                                    {report.spellAndGrammar}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Graphs/Diagram : {report.diagrams}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h5\">\r\n                                    Total :{\" \"}\r\n                                    {report.orgAndWriting +\r\n                                      report.enggTheoryAnaly +\r\n                                      report.biblogrpahy +\r\n                                      report.spellAndGrammar +\r\n                                      report.diagrams}\r\n                                    /15\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid\r\n                                  item\r\n                                  xs={12}\r\n                                  style={{ textAlign: \"right\" }}\r\n                                >\r\n                                  <Button\r\n                                    onClick={e => {\r\n                                      this.handleDeleteReport(e, Gid);\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                  >\r\n                                    Delete\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Card>\r\n                          ) : (\r\n                            <Card\r\n                              style={{\r\n                                borderRadius: \"0px\",\r\n                                padding: \"10px\",\r\n                                margin: \"2px 0px\"\r\n                              }}\r\n                            >\r\n                              {/* <form> */}\r\n                              <Grid container>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Organisation and writing style\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Organisation_and_writing_style\"\r\n                                        name=\"Organisation_and_writing_style\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.orgAndWriting}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleOrgAndWriting}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Engineering Theory and Analysis:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Eng_Theory_and_Analysis\"\r\n                                        name=\"Eng_Theory_and_Analysis\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.enggTheoryAnaly}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleEngTheoryAnaly}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Use of Bibliography:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Use_of_Bibliography\"\r\n                                        name=\"Use_of_Bibliography\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.bibliography}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleBibliography}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Spelling and Grammar:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Spelling_and_Grammar\"\r\n                                        name=\"Spelling_and_Grammar\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.spellAndGrammar}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleSpellAndGrammar}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Graphs/Diagrams:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Graphs/Diagram\"\r\n                                        name=\"Graphs/Diagram\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.diagram}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleDiagram}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Button\r\n                                    type=\"submit\"\r\n                                    onClick={e => {\r\n                                      this.handleReportSubmit(e, Gid);\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                      padding: \"10px 0px\",\r\n                                      marginLeft: \"30px\",\r\n                                      width: \"54%\",\r\n                                      fontSize: \"20px\"\r\n                                    }}\r\n                                  >\r\n                                    Submit\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                              {/* </form> */}\r\n                            </Card>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    {/* Implementation */}\r\n                    <Card\r\n                      style={{\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\"\r\n                      }}\r\n                    >\r\n                      <Grid container>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            margin: \"20px 0px 0px 20px\"\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h3\">\r\n                            Implementation Marks\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ margin: \"20px 0px\" }}>\r\n                          {implementation.filled ? (\r\n                            <Card\r\n                              style={{\r\n                                borderRadius: \"0px\",\r\n                                padding: \"10px\",\r\n                                margin: \"2px 0px\"\r\n                              }}\r\n                            >\r\n                              <Grid container>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Problem Statement :{\" \"}\r\n                                    {implementation.probStatment}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Concepts : {implementation.concept}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Innovation : {implementation.innovation}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Teamwork : {implementation.teamwork}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Project Management and Finance :{\" \"}\r\n                                    {implementation.pmf}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h5\">\r\n                                    Total :{\" \"}\r\n                                    {implementation.probStatment +\r\n                                      implementation.concept +\r\n                                      implementation.innovation +\r\n                                      implementation.teamwork +\r\n                                      implementation.pmf}\r\n                                    /15\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid\r\n                                  item\r\n                                  xs={12}\r\n                                  style={{ textAlign: \"right\" }}\r\n                                >\r\n                                  <Button\r\n                                    onClick={e => {\r\n                                      this.handleDeleteImplementation(e, Gid);\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                  >\r\n                                    Delete\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Card>\r\n                          ) : (\r\n                            <Card\r\n                              style={{\r\n                                borderRadius: \"0px\",\r\n                                padding: \"10px\",\r\n                                margin: \"2px 0px\"\r\n                              }}\r\n                            >\r\n                              {/* <form > */}\r\n                              <Grid container>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Problem Statement:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Problem_Statement\"\r\n                                        name=\"Problem_Statement\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleProbStatement}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Concepts:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Concepts\"\r\n                                        name=\"Concepts\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleConcept}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Innovation:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Innovation\"\r\n                                        name=\"Innovation\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleInnovation}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Teamwork:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Teamwork\"\r\n                                        name=\"Teamwork\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleTeamWork}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Project Management and Finance:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Proj_Management_and_Finance\"\r\n                                        name=\"Proj_Management_and_Finance\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handlePMF}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"10px 0\" }}>\r\n                                  <Button\r\n                                    onClick={e => {\r\n                                      this.handleImplementationSubmit(e, Gid);\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                      padding: \"10px 0px\",\r\n                                      marginLeft: \"30px\",\r\n                                      width: \"54%\",\r\n                                      fontSize: \"20px\"\r\n                                    }}\r\n                                  >\r\n                                    Submit\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                              {/* </form> */}\r\n                            </Card>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    {/* WEEKLY LOG */}\r\n                    <Card\r\n                      style={{\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\"\r\n                      }}\r\n                    >\r\n                      <Grid container>\r\n                        <Grid item>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={3}\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            margin: \"20px 0px 0px 0px\"\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h3\">Weekly Log</Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={8}\r\n                          style={{\r\n                            backgroundColor: \"#fff\",\r\n                            width: \"100%\",\r\n                            margin: \"20px 0\"\r\n                          }}\r\n                        >\r\n                          <form>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <KeyboardDatePicker\r\n                                autoOk\r\n                                required\r\n                                variant=\"inline\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"yyyy/MM/dd\"\r\n                                value={this.state.weeklyLogDate}\r\n                                InputAdornmentProps={{ position: \"start\" }}\r\n                                style={{ margin: \"10px\" }}\r\n                                onChange={this.handleweelyDateChange}\r\n                              />\r\n                            </MuiPickersUtilsProvider>\r\n                            <TextField\r\n                              type=\"text\"\r\n                              id=\"logMsg\"\r\n                              name=\"logMsg\"\r\n                              label=\"Add log remark\"\r\n                              variant=\"outlined\"\r\n                              value={this.state.weeklyLogMsg}\r\n                              style={{ margin: \"10px\" }}\r\n                              onChange={this.weeklyMsgHandler}\r\n                            />\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => this.sendLog(Gid)}\r\n                              style={{\r\n                                margin: \"20px \",\r\n                                marginLeft: \"50px\"\r\n                              }}\r\n                            >\r\n                              Add Log\r\n                            </Button>\r\n                          </form>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ margin: \"20px 0px\" }}>\r\n                          <Card\r\n                            style={{\r\n                              borderRadius: \"0px\",\r\n                              padding: \"10px\",\r\n                              margin: \"2px 0px\"\r\n                            }}\r\n                          >\r\n                            <Grid container>\r\n                              <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                                <Typography variant=\"h4\">\r\n                                  <b>Log History:</b>\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Card>\r\n                          {weeklyLog ? (\r\n                            weeklyLog.map(log => {\r\n                              let wid = log._id;\r\n                              return (\r\n                                <Card\r\n                                  key={log._id}\r\n                                  style={{\r\n                                    borderRadius: \"0px\",\r\n                                    padding: \"10px\",\r\n                                    margin: \"2px 0px\"\r\n                                  }}\r\n                                >\r\n                                  <Grid container>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                      <Typography variant=\"h6\">\r\n                                        {log.remark}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                      <Typography variant=\"h6\">\r\n                                        {log.scheduled_date\r\n                                          ? log.scheduled_date.split(\"T\")[0]\r\n                                          : null}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      <DeleteIcon\r\n                                        className={classes.deleteIconStyle}\r\n                                        onClick={() => this.deleteLog(Gid, wid)}\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Card>\r\n                              );\r\n                            })\r\n                          ) : (\r\n                            <Typography variant=\"h6\">No logs Yet</Typography>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\"\r\n                      }}\r\n                    >\r\n                      <Grid container className={classes.comment}>\r\n                        <Grid item xs={12} style={{ marginBottom: \"30px\" }}>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{ textAlign: \"left\", fontWeight: \"400\" }}\r\n                          >\r\n                            Comments\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comTitle}\r\n                        >\r\n                          <Typography>\r\n                            <b>Add Comments:</b>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                          <TextField\r\n                            className={classes.comField}\r\n                            variant=\"outlined\"\r\n                            component={\"span\"}\r\n                            multiline\r\n                            inputProps={{ style: { fontSize: 14 } }}\r\n                            rows={3}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            onChange={this.commentHandler}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comButton}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.sendComment(Gid);\r\n                            }}\r\n                          >\r\n                            Send Comment\r\n                          </Button>\r\n                          <Snackbar\r\n                            open={this.state.openSuccess}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert\r\n                              onClose={this.handleClose}\r\n                              severity=\"success\"\r\n                            >\r\n                              Successful comment\r\n                            </Alert>\r\n                          </Snackbar>\r\n                          <Snackbar\r\n                            open={this.state.openFailure}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert onClose={this.handleClose} severity=\"error\">\r\n                              Unsuccessful. Comment cannot be empty\r\n                            </Alert>\r\n                          </Snackbar>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                          <HodCommentPage Comments={Comments} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./Login/background2.jpg\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SERVER_URL from \"./URL\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport qs from \"qs\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n\r\n\tleftpaper: {\r\n\t\tbackgroundImage: `url(${Image})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"transparent\",\r\n\t\tborderRadius: \"6px\",\r\n\t\tfloat: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"#fff\",\r\n\t\tpaddingTop: \"60px\",\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  paddingTop: \"20px\"\r\n\t\t}\r\n\t},\r\n\tform: {\r\n\t    width: \"90%\", \r\n\t    marginTop: theme.spacing(1)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tfontWeight: \"bolder\",\r\n\t\tbackgroundColor: \"#1877f2\",\r\n\t\tmarginBottom: \"25px\"\r\n\t},\r\n\tfields: {\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborderRadius: \"3px\"\r\n\t},\r\n\ttitle: {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tcolor: \"#fff\",\r\n\t\t[theme.breakpoints.down(\"775\")]: {\r\n\t\t  fontSize: \"45px\"\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  fontSize: \"40px\"\r\n\t\t}\r\n\t},\r\n\tavatar: {\r\n\t    margin: theme.spacing(1),\r\n\t    backgroundColor: \"#1877f2\",\r\n\t    height: \"50px\",\r\n\t    width: \"50px\",\r\n\t    marginTop: \"30px\"\r\n  },\r\n\r\n});\r\n\r\nclass forgetPassword extends Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttoken :localStorage.getItem(\"token\"),\r\n\t\t\tmsg : \"\",\r\n\t\t\temail : \"\",\r\n\t\t\tloading : false,\r\n\t\t\topenSuccess:false,\r\n\t\t\topenInfo:false,\r\n\t\t\topenFailure:false\r\n\t\t}\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t}\r\n\thandleChange = name => ({ target: { value } }) => {\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tsubmitForm(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({loading:true})\r\n\t\tlet email = this.state.email\r\n\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: SERVER_URL+\"/forgetPassword\",\r\n\t\t\tdata: qs.stringify({email: email}),\r\n\t\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n\t\t\t}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tif(res.data[0]===\"A\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmsg:res.data,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenInfo:true\r\n\t\t\t\t\t})\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmsg:res.data,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenSuccess:true\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmsg:\"there was some problem please refresh the page and try again\",\r\n\t\t\t\t\tloading:false,\r\n\t\t\t\t\topenFailure:true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\trender() {\r\n\t\tif(this.state.token != null)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\r\n\t\tif(this.state.loading)\r\n\t\t\treturn <LinearProgress/>\r\n\r\n\t\tconst { classes } = this.props;\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\t\tif(this.state.openSuccess){\r\n\t\t\t\tthis.setState({openSuccess: false});\r\n\t\t\t}\r\n\t\t\telse if(this.state.openInfo){\r\n\t\t\t\tthis.setState({openInfo: false});\r\n\t\t\t}\r\n\t\t\telse if(this.state.openFailure){\r\n\t\t\t\tthis.setState({openFailure: false});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className={classes.leftpaper}>\r\n\t          <Typography variant=\"h2\" className={classes.title}>\r\n\t            <b>Project Management System</b>\r\n\t          </Typography>\r\n\t          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n\t            <CssBaseline />\r\n\t            <Avatar variant=\"circle\" className={classes.avatar}>\r\n\t\t          <PersonIcon fontSize=\"large\" />\r\n\t\t        </Avatar>\r\n\t\t        <Typography component=\"h2\" variant=\"h6\">\r\n\t\t          <b>Forget Password</b>\r\n\t\t        </Typography>\r\n\t            <form className={classes.form} onSubmit={this.submitForm}>\r\n\t              <TextField\r\n\t                type=\"email\"\r\n\t                variant=\"filled\"\r\n\t                margin=\"normal\"\r\n\t                required\r\n\t                fullWidth\r\n\t                id=\"email\"\r\n\t                label=\"email\"\r\n\t                value={this.state.email}\r\n\t                onChange={this.handleChange(\"email\")}\r\n\t                className={classes.fields}\r\n\t                \r\n\t              />\r\n\t              <Button\r\n\t                type=\"submit\"\r\n\t                fullWidth\r\n\t                variant=\"contained\"\r\n\t                color=\"primary\"\r\n\t                className={classes.submit}\r\n\t              >\r\n\t                Reset Password\r\n\t              </Button>\r\n\t              \r\n\t            </form>\r\n\t\t\t\t<Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\">\r\n\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openInfo} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"info\">\r\n\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t  \r\n\t          </Container>\r\n\t        </div>\r\n\t      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(forgetPassword);","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./Login/background2.jpg\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SERVER_URL from \"./URL\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport qs from \"qs\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = theme => ({\r\n\r\n\tleftpaper: {\r\n\t\tbackgroundImage: `url(${Image})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"transparent\",\r\n\t\tborderRadius: \"6px\",\r\n\t\tfloat: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"#fff\",\r\n\t\tpaddingTop: \"60px\",\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  paddingTop: \"20px\"\r\n\t\t}\r\n\t},\r\n\tform: {\r\n\t    width: \"90%\", \r\n\t    marginTop: theme.spacing(1)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tfontWeight: \"bolder\",\r\n\t\tbackgroundColor: \"#1877f2\",\r\n\t\tmarginBottom: \"25px\"\r\n\t},\r\n\tfields: {\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborderRadius: \"3px\"\r\n\t},\r\n\ttitle: {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tcolor: \"#fff\",\r\n\t\t[theme.breakpoints.down(\"775\")]: {\r\n\t\t  fontSize: \"45px\"\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  fontSize: \"40px\"\r\n\t\t}\r\n\t},\r\n\tavatar: {\r\n\t    margin: theme.spacing(1),\r\n\t    backgroundColor: \"#1877f2\",\r\n\t    height: \"50px\",\r\n\t    width: \"50px\",\r\n\t    marginTop: \"30px\"\r\n  },\r\n\r\n});\r\n\r\nclass resetPassword extends Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttoken :localStorage.getItem(\"token\"),\r\n\t\t\tmsg : \"\",\r\n\t\t\tnewPassword : \"\",\r\n\t\t\tconfirmPassword:\"\",\r\n\t\t\tloading : false,\r\n\t\t\topenSuccees:false,\r\n\t\t\topenFailure:false,\r\n\t\t\topenInfo:false,\r\n\t\t\tdone:false\r\n\t\t}\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t}\r\n\thandleChange = name => ({ target: { value } }) => {\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tsubmitForm(e){\r\n\t\te.preventDefault();\r\n\t\tif(this.state.newPassword !== this.state.confirmPassword){\r\n\t\t  this.setState({msg : \"Two fields Doesn't match\"}) ;\r\n\t\t}else if(this.state.newPassword.length < 8){\r\n\t\t  this.setState({msg : \"Please Enter a Password with length greater than 8\"});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState({loading:true})\r\n\t\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: SERVER_URL+\"/resetPassword/\"+this.props.match.params.id,\r\n\t\t\tdata: qs.stringify({\r\n\t\t\t\tnewPassword:this.state.newPassword\r\n\t\t\t}),\r\n\t\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n\t\t\t}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tif(res.data === \"yes\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenSuccees:true\r\n\t\t\t\t\t})\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenInfo:true\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading:false,\r\n\t\t\t\t\topenFailure:true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.state.token != null)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\t\tif(this.state.loading)\r\n\t\t\treturn <LinearProgress/>\r\n\t\tif (this.state.done)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\t\tconst { classes } = this.props\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\tif(this.state.openSuccees)\r\n\t\t\tthis.setState({openSuccees: false,done:true});\r\n\t\telse if(this.state.openFailure)\r\n\t\t\tthis.setState({openFailure : false});\r\n\t\telse if(this.state.openInfo)\r\n\t\t\tthis.setState({openInfo : false});\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className={classes.leftpaper}>\r\n\t          <Typography variant=\"h2\" className={classes.title}>\r\n\t            <b>Project Management System</b>\r\n\t          </Typography>\r\n\t          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n\t            <CssBaseline />\r\n\t            <Avatar variant=\"circle\" className={classes.avatar}>\r\n\t\t          <PersonIcon fontSize=\"large\" />\r\n\t\t        </Avatar>\r\n\t\t        <Typography component=\"h2\" variant=\"h6\">\r\n\t\t          <b>Reset Password</b>\r\n\t\t        </Typography>\r\n\t            <form className={classes.form} onSubmit={this.submitForm}>\r\n\t              <TextField\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  className={classes.fields}\r\n                  value={this.state.newPassword}\r\n                  onChange={this.handleChange(\"newPassword\")}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  className={classes.fields}\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.handleChange(\"confirmPassword\")}\r\n                />\r\n\t              <Typography variant=\"subtitle2\" color=\"info\">\r\n\t                  {this.state.msg}\r\n\t              </Typography>\r\n\t              <Button\r\n\t                type=\"submit\"\r\n\t                fullWidth\r\n\t                variant=\"contained\"\r\n\t                color=\"primary\"\r\n\t                className={classes.submit}\r\n\t              >\r\n\t                Reset Password\r\n\t              </Button>\r\n\t             \r\n\t            </form>\r\n\t\t\t\t<Snackbar open={this.state.openSuccees} onClose={handleClose} autoHideDuration={3000}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\" >\r\n\t\t\t\t\tYour Password was changed successfully You will now be redirected to login page \r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openInfo} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tThis Link has expired please reapply for reset password\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tThere was some problem while changing your password please refresh the page and try again\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>  \r\n\t          </Container>\r\n\t        </div>\r\n\t      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(resetPassword);","import React from 'react'\r\nimport HodSideMenu from './HodSideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress, makeStyles } from \"@material-ui/core\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Button,CircularProgress,Grid} from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// function Alert(props) {\r\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// }\r\n\r\nlet Ad=null;\r\nlet groupData=null\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    \r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n  }));\r\n\r\nconst HodgroupsPage = (props) => {\r\n\r\n  const [user,setUser] = React.useState(\"\")\r\n  const [groupDetails,setGroupDetails] = React.useState(null)\r\n  const [loading,setLoading] = React.useState(false)\r\n  const [filled,setFilled] = React.useState(false)\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [reqSent,setReqSent] = React.useState(false);\r\n  \r\n  function getStat(){\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        setUser(res.data);\r\n      })\r\n\r\n      .catch(err => {\r\n        setUser(\"No User\");\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  \r\n  function checkData() {\r\n    setReqSent(true);\r\n    setLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        setReqSent(false);\r\n        Ad = res.data.length;\r\n        groupData=res.data\r\n        setGroupDetails(res.data);\r\n        setFilled(true)\r\n        setLoading(false);\r\n      })\r\n      .catch(function (err) {\r\n        setReqSent(false);\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // function handleChildClick(e){\r\n  //   e.stopPropagation();\r\n  //   console.log('handleChildClick');\r\n  // }\r\n    if (groupDetails === null && reqSent === false){\r\n      checkData();\r\n    } \r\n    if (user === \"\") {\r\n      getStat();\r\n      return <LinearProgress />;\r\n    } else if (user.type === \"hod\") {\r\n      if(loading){\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    if(filled)\r\n    {\r\n        if(groupData.length!==0){\r\n            return(\r\n                <React.Fragment >\r\n                    <HodSideMenu style={{marginBottom:\"10px\"}}/>\r\n                    <Typography style={{margin:\"20px\"}} variant = \"h3\">\r\n                      Assigned Groups\r\n                    </Typography>\r\n                    {groupData.map(Group => {\r\n                        const routeChange = () => {\r\n                            histor.push({\r\n                            pathname: `/hod/groups/prefs/${id}`,\r\n                            });\r\n                        };\r\n                        let DueDate = Group.dueDate.split(\"T\")[0];\r\n                        let members = Group.members;\r\n                        let Gname = Group.name;\r\n                        let id = Group.id;\r\n                        let pref1 = [];\r\n                        let AppliedOn = null;\r\n    \r\n                        if (Group.proposals.length !== 0) {\r\n                            pref1 = Group.proposals[0];\r\n                            // pref2 = Group.proposals[1];\r\n                            // pref3 = Group.proposals[2];\r\n    \r\n                            AppliedOn = pref1.applied.split(\"T\")[0];\r\n                            //console.log(AppliedOn, DueDate);\r\n                        }\r\n                        // if (Group.guide.name===userInfo.name) {\r\n                            return (\r\n                            <Accordion\r\n                                style={{\r\n                                    width: \"90%\",\r\n                                    margin: \"auto\",\r\n                                    textAlign: \"left\",\r\n                                    marginTop: \"2px\",\r\n                                    boxShadow:\r\n                                    \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                                }}\r\n                                expanded={expanded === Gname}\r\n                                onChange={handleChange(Gname)}\r\n                                className={classes.accor}\r\n                                key={Group.name}\r\n                            >\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1bh-content\"\r\n                                id=\"panel1bh-header\"\r\n                                >\r\n                                <Typography className={classes.heading}>\r\n                                    {toFirstCharUppercase(Group.name)}\r\n                                </Typography>\r\n                                {members.map(member => {\r\n                                    return (\r\n                                    <Typography\r\n                                        key={member.name}\r\n                                        className={classes.secondaryHeading}\r\n                                    >\r\n                                        {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                    );\r\n                                })}\r\n                                </AccordionSummary>\r\n                                <AccordionDetails className={classes.accordet}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Name\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.name}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Email\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.email}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Roll no\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                    {DueDate >= AppliedOn ? (\r\n                                        <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                        Proposals Submitted On Time\r\n                                        </Typography>\r\n                                    ) : (\r\n                                        <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                        Proposals Submitted LATE\r\n                                        </Typography>\r\n                                    )}\r\n                                    </Grid>\r\n                                    <Grid item container xs={12}>\r\n                                    {Group.proposals.length === 3 ? (\r\n                                        <React.Fragment>\r\n                                            <Grid item xs={3}>\r\n                                                <Button\r\n                                                onClick={routeChange}\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                >\r\n                                                More Details\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                            <Typography>Preferences not filled</Typography>\r\n                                        </Button>\r\n                                    )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                            );\r\n                        // }\r\n                        // return null;\r\n                        })}\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <React.Fragment>\r\n                  <HodSideMenu />\r\n                  <Typography>\r\n                    No group has been assigned to you yet.\r\n                  </Typography>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n    else{\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n\r\n\r\nexport default HodgroupsPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Admin from \"./Pages/Admin\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport Logout from \"./Pages/Logout\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Student from \"./Pages/Student\";\r\nimport Yami from \"./Pages/Yami\";\r\nimport Faculty from \"./Pages/Faculty\";\r\nimport ChangePassword from \"./components/ChangePassword/ChangePassword\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport PrefPage from \"./Pages/PrefPage\";\r\nimport Hod from \"./Pages/Hod\";\r\nimport HodPrefPage from \"./components/Hod-component/HodPrefPage\";\r\nimport AdminGroupsPage from \"./components/Admin-component/AdminGroupsPage\";\r\nimport AdminGuidePage from \"./components/Admin-component/AdminGuidePage\";\r\nimport AdminArchives from \"./components/Admin-component/AdminArchives\"\r\nimport Guide from \"./Pages/Guide\"\r\nimport GuidePrefPage from \"./components/Guide Component/GuidePrefPage\";\r\nimport forgetPassword from \"./Pages/forgetPassword\";\r\nimport resetPassword from \"./Pages/resetPassword\";\r\nimport HodGroupsPage from \"./components/Hod-component/HodGroupsPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/admin\" exact component={Admin} />\r\n        <Route path=\"/hod\" exact component={Hod} />\r\n        <Route path=\"/logout\" exact component={Logout} />\r\n        <Route path=\"/faculty\" exact component={Faculty} />\r\n        <Route path=\"/student\" exact component={Student} />\r\n        <Route path=\"/yami\" exact component={Yami} />\r\n        <Route path=\"/guide\" exact component={Guide}/>\r\n        <Route path=\"/cp@2707user\" exact component={ChangePassword} />\r\n        <Route path=\"/admin/prefs/:id\" exact component={PrefPage} />\r\n        <Route path=\"/hod/prefs/:id\" exact component={HodPrefPage} />\r\n        <Route path=\"/guide/prefs/:id\" exact component={GuidePrefPage} />\r\n        <Route path=\"/admin/groups\" exact component={AdminGroupsPage}/>\r\n        <Route path=\"/admin/guides\" exact component={AdminGuidePage}/>\r\n        <Route path=\"/admin/archives\" exact component={AdminArchives}/>\r\n        <Route path=\"/forgetPassword\" exact component={forgetPassword}/>\r\n        <Route path=\"/resetPassword/:id\" exact component={resetPassword}/>\r\n        <Route path=\"/hod/groups\" exact component={HodGroupsPage} />\r\n        <Route path=\"/hod/groups/prefs/:id\" exact component={GuidePrefPage} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.register();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/background2.43a914dc.jpg\";"],"sourceRoot":""}