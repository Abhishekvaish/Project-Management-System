{"version":3,"sources":["Pages/Login/background2.jpg","Pages/URL.js","components/Navbar/MenuAppBar.js","components/Navbar/LoggedNavbar.js","components/Admin-component/AdminInstructions.js","components/Footer/Footer.js","components/Profile.js","components/ToUpper.js","components/Admin-component/ProjectList.js","components/Admin-component/SideMenu.js","components/Admin-component/AdminContent.js","Pages/Admin.js","Pages/Login/Login.js","Pages/Logout.js","components/Student-component/StudentContent.js","components/Student-component/studentHomePage.js","components/Student-component/StudentCommentPage.js","components/Student-component/studentWholePage.js","Pages/Student.js","components/Yami-component/YamiContent.js","Pages/Yami.js","context/projectcontext.js","components/verification/projectdetails.js","components/verification/projectlist.js","components/Faculty-component/FacultyContent.js","Pages/Faculty.js","components/ChangePassword/ChangePassword.js","components/NotFound.js","components/Navbar/Navbar.js","components/Admin-component/AdminCommentPage.js","Pages/PrefPage.js","components/Hod-component/HodProjectList.js","components/Hod-component/HodContent.js","Pages/Hod.js","components/Hod-component/HodCommentPage.js","components/Hod-component/HodPrefPage.js","components/Admin-component/AdminGroupsPage.js","components/Admin-component/AdminGuidePage.js","components/Admin-component/AdminArchives.js","components/Guide Component/GuideDetail.js","components/Guide Component/GroupList.js","Pages/Guide.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SERVER_URL","process","PORT","console","log","kickUser","axios","method","url","withCredentials","headers","Authorization","localStorage","getItem","then","res","data","catch","err","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","profIcon","breakpoints","up","display","navMenu","down","MenuAppBar","classes","React","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","style","backgroundColor","Toolbar","Typography","variant","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","fontSize","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","to","textDecoration","Button","startIcon","marginLeft","LoggedNavbar","props","state","Fragment","Component","width","letterSpacing","pos","marginBottom","Profile","Card","boxShadow","borderRadius","CardContent","fontWeight","paddingTop","rootItems","padding","foot","margin","footEnd","Footer","Grid","container","item","xs","sm","Date","getFullYear","createMuiTheme","typography","h3","minWidth","marginTop","userInfo","academicYear","ThemeProvider","paddingBottom","md","name","type","department","email","toFirstCharUppercase","charAt","toUpperCase","slice","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","component","a11yProps","heading","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","accor","accordet","guideIndex","ControlledAccordions","histor","useHistory","expanded","setExpanded","useTheme","setValue","setOpen","guideName","setGuideName","guideEmail","setGuideEmail","loading","setLoading","assignLoading","setAssignLoading","handleMenuClick","handleMenuClose","index1","handleCloseCancel","handleChange","panel","isExpanded","Groups","Guides","CircularProgress","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","onChange","e","target","fullWidth","required","DialogActions","alert","credentials","qs","stringify","window","location","reload","Tabs","newValue","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","dir","map","Group","DueDate","dueDate","split","members","Gname","pref1","pref2","pref3","AppliedOn","pref1AdminApproval","pref2AdminApproval","pref3AdminApproval","pref1HodApproval","pref2HodApproval","pref3HodApproval","proposals","length","applied","approval","admin","hod","Accordion","key","AccordionSummary","expandIcon","member","AccordionDetails","rollno","push","pathname","guide","Guide","groupId","assignGuide","disabled","pref1Approval","pref2Approval","pref3Approval","ButtonStyle","cursor","SideMenu","handleMenu","top","left","bottom","right","setState","itemsList","icon","toggleDrawer","anchor","Drawer","clsx","list","fullList","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","appendLeadingZeroes","n","tempDate","date","getMonth","getDate","Alert","elevation","Ad","AdminContent","handleDateChange","current_datetime","formatted_date","prefDueDate","a","handleAcademicYear","Academicyear","hodHandler","hodNameHandler","hodName","reason","openSuccess","openFailure","adData","submitHandler","preventDefault","formData","FormData","append","student_file","fileValidation","fileInput","document","getElementById","files","filePath","exec","filled","this","checkData","checkGuides","LinearProgress","onSubmit","gridField","InputTitle","size","Inputfield","FormControl","Select","utils","DateFnsUtils","autoOk","inputVariant","format","InputAdornmentProps","Input","alignItems","submit","Snackbar","autoHideDuration","severity","footer","withStyles","flexDirection","minHeight","main","paper","pape","form","fields","border","paddingLeft","Admin","getStat","loggedIn","user","removeItem","Data","data_access","today","Login","username","password","msg","invalidCredentials","getResponse","bind","submitForm","response","access_token","setItem","token","exact","leftpaper","Container","maxWidth","CssBaseline","Avatar","avatar","autoComplete","background","float","backgroundImage","Image","backgroundSize","height","Logout","responsiveFontSizes","stuData","Stu","Proposals","StudentContent","tabValue","handleTopChange","pn","prefs","preferences","i","Top","handleDosChange","Dos","handleDsopChange","cs","Dsop","handleAgencyChange","Agency","handleMtapChange","Mtap","handleRedChange","Red","handleShrChange","Shr","handleFileChange","selectedFile","handleClick","currentStep","handleSubmit","specialization","details","agency","result","requirements","JSON","_next","_prev","handleNext","prefno","formFilled","Step1","Step2","previousButton","Step3","largeWinTabs","centered","tabPanel","typographyFilled","attachPrints","smallWinTabs","scrollButtons","multiline","inputProps","rows","buttonprop","borderTop","tableContainer","table","propF","sData","fill","StudentHomePage","propFilled","setPropFilled","setStuData","setFilled","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","_id","proposal","approved","propTitle","propApproved","typo","StudentCommentPage","comments","comment","author","time","vert_tab_grid","borderRight","divider","hor_tab_grid","borderBottom","large_win_tabs","small_win_tabs","StudentWholePage","setAcademicYear","acadYear","orientation","tab","YamiContent","mailHandler","mail","nameHandler","deptHandler","dept","noValidate","InputLabel","deptLabel","Yami","ProjectContext","createContext","ProjectContextProvider","projects","isapproved","Approve","project","addComment","Provider","ProjectDetails","aboutProps","ProjectList","useContext","FacultyContent","ChangePassword","pushPassword","newPassword","confirmPassword","newpasswordHandler","confirmpasswordHandler","helptext","NotFound","backButton","buttonContainer","Navbar","typo1","typo2","textAllign","THEME","fontFamily","join","AdminCommentPage","Comments","reverse","d","fontStyle","toString","substr","ControlledExpansionPanels","commentHandler","handleApprove","pid","Gid","group","Proposal1","Proposal2","Proposal3","grid","content","comTitle","comField","comButton","sendComment","HodProjectList","history","Designation","HodContent","getGroup","Hod","HodCommentPage","HodPrefPage","AdminGuidePage","groupDetails","GuideDetails","GuideGroupList","setAdData","App","path","Faculty","Student","PrefPage","AdminGroupsPage","AdminArchives","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","register","error","message"],"mappings":"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","file":"static/js/main.380a7428.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background2.43a914dc.jpg\";","if (process.env.NODE_ENV === \"production\")\r\n\tvar SERVER_URL = \"https://project-management-system-ark.herokuapp.com:\"+process.env.PORT;\r\nelse\t\r\n\tvar SERVER_URL = \"\";\r\nconsole.log(process.env.NODE_ENV);\r\nexport default SERVER_URL;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\n\r\nconst kickUser = () => {\r\n  axios({\r\n    method: \"get\",\r\n    url: SERVER_URL + \"/logout\",\r\n    withCredentials: true,\r\n    headers : {\r\n      Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n    }\r\n  })\r\n    .then(function (res) {\r\n      console.log(res.data);\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n          {auth && (\r\n            <div className={classes.profIcon}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/cp@2707user\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Change Password\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/logout\"\r\n                    onClick={kickUser}\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Link\r\n            to=\"/cp@2707user\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              startIcon={<AssignmentIndIcon />}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            to=\"/logout\"\r\n            onClick={kickUser}\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"20px\" }}\r\n              startIcon={<ExitToAppIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MenuAppBar from \"./MenuAppBar\";\r\n\r\nclass LoggedNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuAppBar />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedNavbar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    // minWidth: 275,\r\n    textAlign: \"left\",\r\n    width: \"90%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    // height: \"220px\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"1px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h4\" style={{ fontWeight: \"600\" }}>\r\n          Instructions -\r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          1.Please fill the below form to create project list of your department\r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          2.Project list file should be of .csv format\r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          3.Adding email of respective authorities will give them access\r\n          according to their designation\r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          {\" \"}\r\n          4.On submitting the form you will create a list mentioned in the file\r\n          and will give authorities to emails mentioned by you\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport \"./Footer.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: \"#333\",\r\n    color: \"#fff\",\r\n    paddingTop: \"20px\"\r\n  },\r\n  rootItems: {\r\n    padding: \"8px\"\r\n  },\r\n  foot: {\r\n    margin: \"auto\"\r\n  },\r\n  footEnd: {\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#222\",\r\n    margin: \"0\"\r\n  }\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <footer>\r\n        <Grid container className={classes.root}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Privacy</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms And Conditions</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms of Use</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <BusinessIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>\r\n                  K.J.Somaiya Institute Of Engineering And Information\r\n                  Technology\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography> Sion,Mumbai</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <ContactMailIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>abcd@gmail.com</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>36326623966996</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.footEnd}>\r\n            <Typography>\r\n              &copy;{new Date().getFullYear()} KJSIEIT,Inc. All Rights Reserved.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '1.5rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '2rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    width: \"90%\",\r\n    textAlign: \"left\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"30px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"1px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  const userInfo = props;\r\n  const academicYear=props.academicYear;\r\n  console.log(props)\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <ThemeProvider theme={theme}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={1}>\r\n              <AccountBoxRoundedIcon style={{ fontSize: 50 }} />\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n              <Typography variant=\"h3\" style={{ fontWeight: \"600\", paddingBottom:\"20px\", }}>\r\n                User Details -\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </ThemeProvider>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Name:</b> {userInfo.userInfo.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Designation:</b> {userInfo.userInfo.type}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Department:</b> {userInfo.userInfo.department}\r\n              </Typography>\r\n            </Grid>            \r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b>Email:</b> {userInfo.userInfo.email}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b>Academic Year:</b> {academicYear}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","export const toFirstCharUppercase = name =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { CircularProgress, ClickAwayListener, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Menu, MenuItem, TextField } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nlet Guides = null;\r\nlet guideIndex=null;\r\n\r\nexport default function ControlledAccordions(props) {\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n  const [open,setOpen] = React.useState(false);\r\n  const [guideName,setGuideName] = React.useState(\"\");\r\n  const [guideEmail,setGuideEmail] =React.useState(\"\");\r\n  const [loading,setLoading]=React.useState(false)\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [assignLoading,setAssignLoading]=React.useState(false)\r\n\r\n\r\n//Guide Menu\r\n  const handleMenuClick = (event) => {\r\n    //console.log(Guides)\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = (event,index1) => {\r\n    if(index1===\"backdropClick\"){\r\n      console.log(index1)\r\n      setAnchorEl(null);\r\n    }else{\r\n      guideIndex=index1;\r\n      console.log(index1)\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  //Add Guide Button & different options in Dialog Box\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseCancel = () => {\r\n    console.log(\"CANCEL\")\r\n    setOpen(false);\r\n  };\r\n  const handleCloseSubmit = () => {\r\n    setLoading(true)\r\n    if(guideName===\"\" || guideEmail===\"\"){\r\n      alert(\"Guide name or email cannot be empty\")\r\n    }else{\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide?type=new\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name:guideName,\r\n          email:guideEmail\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"submitted\")\r\n        setLoading(false)\r\n        setGuideName(\"\")\r\n        setGuideEmail(\"\")\r\n        setOpen(false);\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        alert(\"Guide not added\")\r\n        setLoading(false)\r\n        console.log(err);\r\n        setOpen(false);\r\n      });\r\n    }\r\n  };\r\n\r\n// Assign Guide button\r\n\r\n  const assignGuide = (e,id) => {  \r\n    if(guideIndex===null){\r\n      alert(\"Please select a guide first\")\r\n    }else{\r\n      setAssignLoading(true)\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name:Guides[guideIndex].name,\r\n          email:Guides[guideIndex].email,\r\n          groupId:id\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          \"Authorization\" : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"submitted\")\r\n        setAssignLoading(false)\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        alert(\"Guide not assigned\")\r\n        setAssignLoading(false)\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n// Dialog box Guide name and email\r\n\r\n  const handleGNameChange = (e) => {\r\n    setGuideName(e.target.value)\r\n  }\r\n\r\n  const handleGEmailChange = (e) => {\r\n    setGuideEmail(e.target.value)\r\n  }\r\n\r\n  // Tabs handleChange\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // SwipeableView index changing\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n// Accordion handleChange\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  const Groups = props.Groups;\r\n  const Guides = props.Guides;\r\n  let e={}\r\n\r\n  return (\r\n    <div>\r\n      { !loading ? (\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Add Guide</Button>\r\n          <Dialog open={open} onClose={handleCloseCancel} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Add Guide</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Please add name and email of Guide.\r\n              </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"guideName\"\r\n                  label=\"Guide Name\"\r\n                  type=\"text\"\r\n                  value={guideName}\r\n                  onChange={handleGNameChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"guideEmail\"\r\n                  label=\"Guide Email\"\r\n                  type=\"text\"\r\n                  value={guideEmail}\r\n                  onChange={handleGEmailChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseCancel} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleCloseSubmit} color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      ) : (\r\n        <div><CircularProgress /></div>\r\n      )}\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChangeT}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"full width tabs example\"\r\n          >\r\n            <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n            <Tab label=\"Approval by HOD left\" {...a11yProps(1)} />\r\n            <Tab label=\"Applied\" {...a11yProps(2)} />\r\n            <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            {Groups.map(Group => {\r\n              const routeChange = () => {\r\n                histor.push({\r\n                  pathname: `/admin/prefs/${id}`,\r\n                  state: { Group: Group }\r\n                });\r\n              };\r\n              let DueDate = Group.dueDate.split(\"T\")[0];\r\n              let members = Group.members;\r\n              let Gname = Group.name;\r\n              let id = Group.id;\r\n              let pref1 = [];\r\n              let pref2 = [];\r\n              let pref3 = [];\r\n              let AppliedOn = null;\r\n              let pref1AdminApproval = false;\r\n              let pref2AdminApproval = false;\r\n              let pref3AdminApproval = false;\r\n              let pref1HodApproval = false;\r\n              let pref2HodApproval = false;\r\n              let pref3HodApproval = false;\r\n\r\n              if (Group.proposals.length !== 0) {\r\n                pref1 = Group.proposals[0];\r\n                pref2 = Group.proposals[1];\r\n                pref3 = Group.proposals[2];\r\n\r\n                AppliedOn = pref1.applied.split(\"T\")[0];\r\n                //console.log(AppliedOn, DueDate);\r\n                pref1AdminApproval = pref1.approval.admin;\r\n                pref2AdminApproval = pref2.approval.admin;\r\n                pref3AdminApproval = pref3.approval.admin;\r\n                pref1HodApproval = pref1.approval.hod;\r\n                pref2HodApproval = pref2.approval.hod;\r\n                pref3HodApproval = pref3.approval.hod;\r\n              }\r\n\r\n              if (\r\n                (pref1AdminApproval && pref1HodApproval) ||\r\n                (pref2AdminApproval && pref2HodApproval) ||\r\n                (pref3AdminApproval &&\r\n                  pref3HodApproval &&\r\n                  Group.proposals.length !== 0)\r\n              ) {\r\n                return (\r\n                  <Accordion\r\n                    expanded={expanded === Gname}\r\n                    onChange={handleChange(Gname)}\r\n                    className={classes.accor}\r\n                    key={Group.name}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1bh-content\"\r\n                      id=\"panel1bh-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        {toFirstCharUppercase(Group.name)}\r\n                      </Typography>\r\n                      {members.map(member => {\r\n                        return (\r\n                          <Typography\r\n                            key={member.name}\r\n                            className={classes.secondaryHeading}\r\n                          >\r\n                            {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                          </Typography>\r\n                        );\r\n                      })}\r\n                    </AccordionSummary>\r\n                    <AccordionDetails className={classes.accordet}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Name\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return <Typography key={member.email}>{member.name}</Typography>;\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={5}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Email\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return <Typography key={member.email}>{member.email}</Typography>;\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Roll no\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {DueDate >= AppliedOn ? (\r\n                            <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                              Proposals Submitted On Time\r\n                            </Typography>\r\n                          ) : (\r\n                            <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                              Proposals Submitted LATE\r\n                            </Typography>\r\n                          )}\r\n                        </Grid>\r\n                        <Grid item container xs={12}>\r\n                          {Group.proposals.length === 3 ? (\r\n                            <React.Fragment>\r\n                              <Grid item xs={3}>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid container item xs={9}>\r\n                                {(Group.guide.name===null)?(\r\n                                  <React.Fragment>\r\n                                    <Grid item xs={5} />\r\n                                    <Grid item xs={2}>\r\n                                      <Button style={{marginLeft : \"20px\"}} aria-controls=\"simple-menu\" variant=\"outlined\" color=\"primary\" aria-haspopup=\"true\" onClick={handleMenuClick}>\r\n                                        Select Guide\r\n                                      </Button>          \r\n                                      <Menu\r\n                                        id=\"simple-menu\"\r\n                                        anchorEl={anchorEl}\r\n                                        keepMounted\r\n                                        open={Boolean(anchorEl)}\r\n                                        onClose={handleMenuClose}\r\n                                        style={{minWidth:\"500px\"}}\r\n                                      >\r\n                                        { anchorEl ? (\r\n                                          <React.Fragment>\r\n                                              {Guides.map((Guide,index) => {\r\n                                                return(\r\n                                                  <React.Fragment key={Guide.email}>\r\n                                                    {/* <ClickAwayListener onClickAway={()=>{setClicked(true)}}> */}\r\n                                                      <MenuItem onClick={(e) => {handleMenuClose(e,index)}}>{Guide.name}</MenuItem>\r\n                                                    {/* </ClickAwayListener> */}\r\n                                                  </React.Fragment>\r\n                                                )\r\n                                              })}\r\n                                          </React.Fragment>\r\n                                        ) : (\r\n                                          null\r\n                                        )}\r\n                                      </Menu>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      { (guideIndex!==null) ? (\r\n                                          <Button variant=\"outlined\" color=\"secondary\">{Guides[guideIndex].name}</Button>\r\n                                      ) : (\r\n                                        <Button variant=\"outlined\" color=\"secondary\">Guide not selected</Button>\r\n                                      )}\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      { !assignLoading ? (\r\n                                          <Button style={{marginRight:\"20px\"}} variant=\"contained\" color=\"secondary\" onClick={(e)=>assignGuide(e,id)}>Assign Guide</Button>\r\n                                      ) : (\r\n                                          <CircularProgress />\r\n                                      )}\r\n                                    </Grid>\r\n                                 </React.Fragment>\r\n                              ):(\r\n                                <React.Fragment>\r\n                                  <Grid item xs={6} />\r\n                                  <Grid item xs={3}>\r\n                                    <Typography variant=\"h6\" color=\"secondary\">\r\n                                      Guide Assigned: \r\n                                    </Typography>\r\n                                  </Grid>\r\n                                  <Grid item xs={3}>\r\n                                    <Typography variant=\"h6\" color=\"secondary\">{Group.guide.name}</Typography>\r\n                                  </Grid>\r\n                                </React.Fragment>\r\n                              )}\r\n                            </Grid> \r\n                            </React.Fragment>\r\n                          ) : (\r\n                            <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                              <Typography>Preferences not filled</Typography>\r\n                            </Button>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} dir={theme.direction}>\r\n            {Groups.map(Group => {\r\n              const routeChange = () => {\r\n                histor.push({\r\n                  pathname: `/admin/prefs/${id}`,\r\n                  state: { Group: Group }\r\n                });\r\n              };\r\n              let DueDate = Group.dueDate.split(\"T\")[0];\r\n              let members = Group.members;\r\n              let Gname = Group.name;\r\n              let id = Group.id;\r\n              let pref1 = [];\r\n              let pref2 = [];\r\n              let pref3 = [];\r\n              let AppliedOn = null;\r\n\r\n              let pref1AdminApproval = false;\r\n              let pref2AdminApproval = false;\r\n              let pref3AdminApproval = false;\r\n              let pref1HodApproval = false;\r\n              let pref2HodApproval = false;\r\n              let pref3HodApproval = false;\r\n\r\n              if (Group.proposals.length !== 0) {\r\n                pref1 = Group.proposals[0];\r\n                pref2 = Group.proposals[1];\r\n                pref3 = Group.proposals[2];\r\n\r\n                AppliedOn = pref1.applied.split(\"T\")[0];\r\n                //console.log(DueDate, AppliedOn);\r\n                pref1AdminApproval = pref1.approval.admin;\r\n                pref2AdminApproval = pref2.approval.admin;\r\n                pref3AdminApproval = pref3.approval.admin;\r\n                pref1HodApproval = pref1.approval.hod;\r\n                pref2HodApproval = pref2.approval.hod;\r\n                pref3HodApproval = pref3.approval.hod;\r\n              }\r\n\r\n              if (\r\n                (pref1AdminApproval && !pref1HodApproval) ||\r\n                (pref2AdminApproval && !pref2HodApproval) ||\r\n                (pref3AdminApproval &&\r\n                  !pref3HodApproval &&\r\n                  Group.proposals.length !== 0)\r\n              ) {\r\n                return (\r\n                  <Accordion\r\n                    expanded={expanded === Gname}\r\n                    onChange={handleChange(Gname)}\r\n                    className={classes.accor}\r\n                    key={Group.name}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1bh-content\"\r\n                      id=\"panel1bh-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        {toFirstCharUppercase(Group.name)}\r\n                      </Typography>\r\n                      {members.map(member => {\r\n                        return (\r\n                          <Typography\r\n                            key={member.name}\r\n                            className={classes.secondaryHeading}\r\n                          >\r\n                            {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                          </Typography>\r\n                        );\r\n                      })}\r\n                    </AccordionSummary>\r\n                    <AccordionDetails className={classes.accordet}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Name\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return <Typography key={member.email}>{member.name}</Typography>;\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={5}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Email\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return <Typography key={member.email}>{member.email}</Typography>;\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Roll-no\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {DueDate >= AppliedOn ? (\r\n                            <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                              Proposals Submitted On Time\r\n                            </Typography>\r\n                          ) : (\r\n                            <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                              Proposals Submitted LATE\r\n                            </Typography>\r\n                          )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {Group.proposals.length === 3 ? (\r\n                            <div>\r\n                              <Button\r\n                                onClick={routeChange}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                              >\r\n                                Show Preferences\r\n                              </Button>\r\n                            </div>\r\n                          ) : (\r\n                            <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                              <Typography>Preferences not filled</Typography>\r\n                            </Button>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2} dir={theme.direction}>\r\n            {Groups.map(Group => {\r\n              const routeChange = () => {\r\n                histor.push({\r\n                  pathname: `/admin/prefs/${id}`,\r\n                  state: { Group: Group }\r\n                });\r\n              };\r\n              let DueDate = Group.dueDate.split(\"T\")[0];\r\n\r\n              let members = Group.members;\r\n              let Gname = Group.name;\r\n              let id = Group.id;\r\n              let pref1 = [];\r\n              let pref2 = [];\r\n              let pref3 = [];\r\n              let AppliedOn = null;\r\n              let pref1Approval = false;\r\n              let pref2Approval = false;\r\n              let pref3Approval = false;\r\n\r\n              if (Group.proposals.length !== 0) {\r\n                pref1 = Group.proposals[0];\r\n                pref2 = Group.proposals[1];\r\n                pref3 = Group.proposals[2];\r\n\r\n                AppliedOn = pref1.applied.split(\"T\")[0];\r\n                pref1Approval = pref1.approval.admin;\r\n                pref2Approval = pref2.approval.admin;\r\n                pref3Approval = pref3.approval.admin;\r\n              }\r\n\r\n              if (\r\n                !pref1Approval &&\r\n                !pref2Approval &&\r\n                !pref3Approval &&\r\n                Group.proposals.length !== 0\r\n              ) {\r\n                return (\r\n                  <Accordion\r\n                    expanded={expanded === Gname}\r\n                    onChange={handleChange(Gname)}\r\n                    className={classes.accor}\r\n                    key={Group.name}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1bh-content\"\r\n                      id=\"panel1bh-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        {toFirstCharUppercase(Group.name)}\r\n                      </Typography>\r\n                      {members.map(member => {\r\n                        return (\r\n                          <Typography\r\n                            key={member.name}\r\n                            className={classes.secondaryHeading}\r\n                          >\r\n                            {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                          </Typography>\r\n                        );\r\n                      })}\r\n                    </AccordionSummary>\r\n                    <AccordionDetails className={classes.accordet}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={4}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Name\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return (\r\n                                  <Typography key={member.name}>\r\n                                    {member.name}\r\n                                  </Typography>\r\n                                );\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={5}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Email\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return (\r\n                                  <Typography key={member.email}>\r\n                                    {member.email}\r\n                                  </Typography>\r\n                                );\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Roll no\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return (\r\n                                  <Typography key={member.rollno}>\r\n                                    {member.rollno}\r\n                                  </Typography>\r\n                                );\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {DueDate >= AppliedOn ? (\r\n                            <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                              Proposals Submitted On Time\r\n                            </Typography>\r\n                          ) : (\r\n                            <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                              Proposals Submitted LATE\r\n                            </Typography>\r\n                          )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {Group.proposals.length === 3 ? (\r\n                            <div>\r\n                              <Button\r\n                                onClick={routeChange}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                              >\r\n                                Show Preferences\r\n                              </Button>\r\n                            </div>\r\n                          ) : (\r\n                            <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                              <Typography>Preferences not filled</Typography>\r\n                            </Button>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </TabPanel>\r\n\r\n          <TabPanel value={value} index={3} dir={theme.direction}>\r\n            {Groups.map(Group => {\r\n              const routeChange = () => {\r\n                histor.push({\r\n                  pathname: `/admin/prefs/${id}`,\r\n                  state: { Group: Group }\r\n                });\r\n              };\r\n              let DueDate = Group.dueDate.split(\"T\")[0];\r\n              let members = Group.members;\r\n              let Gname = Group.name;\r\n              let id = Group.id;\r\n\r\n              if (Group.proposals.length === 0) {\r\n                return (\r\n                  <Accordion\r\n                    expanded={expanded === Gname}\r\n                    onChange={handleChange(Gname)}\r\n                    className={classes.accor}\r\n                    key={Group.name}\r\n                  >\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1bh-content\"\r\n                      id=\"panel1bh-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        {toFirstCharUppercase(Group.name)}\r\n                      </Typography>\r\n                      {members.map(member => {\r\n                        return (\r\n                          <Typography\r\n                            key={member.name}\r\n                            className={classes.secondaryHeading}\r\n                          >\r\n                            {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                          </Typography>\r\n                        );\r\n                      })}\r\n                    </AccordionSummary>\r\n                    <AccordionDetails className={classes.accordet}>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{ width: \"100%\", padding: \"auto\" }}\r\n                      >\r\n                        <Grid item xs={12} sm={4}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Name\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return (\r\n                                  <Typography key={member.name}>\r\n                                    {member.name}\r\n                                  </Typography>\r\n                                );\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={5}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Email\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return (\r\n                                  <Typography key={member.email}>\r\n                                    {member.email}\r\n                                  </Typography>\r\n                                );\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                          <Grid container>\r\n                            <Grid item xs={12}>\r\n                              <Typography style={{ fontWeight: \"600\" }}>\r\n                                Roll-no\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              {members.map(member => {\r\n                                return (\r\n                                  <Typography key={member.rollno}>\r\n                                    {member.rollno}\r\n                                  </Typography>\r\n                                );\r\n                              })}\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Typography>\r\n                            <b>Due Date for Submitting Proposals:</b>&nbsp;&nbsp;\r\n                            {DueDate}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {Group.proposals.length === 3 ? (\r\n                            <div>\r\n                              <Button\r\n                                onClick={routeChange}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                              >\r\n                                Show Preferences\r\n                              </Button>\r\n                            </div>\r\n                          ) : (\r\n                            <Button variant=\"outlined\" color=\"secondary\">\r\n                              <Typography>Preferences not filled</Typography>\r\n                            </Button>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst kickUser = () => {\r\n  axios({\r\n    method: \"get\",\r\n    url: SERVER_URL + \"/logout\",\r\n    withCredentials: true,\r\n    headers : {\r\n      Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n    }\r\n  })\r\n    .then(function (res) {\r\n      console.log(res.data);\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  ButtonStyle:{\r\n    color:\"#000\",\r\n    backgroundColor:\"#e0e0e0\",\r\n    padding:\"0px 5px\",\r\n    cursor:\"pointer\",\r\n    borderRadius:\"2px\",\r\n    marginRight:\"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: '#fff'\r\n    }\r\n    \r\n  },\r\n  \r\n\r\n}));\r\n\r\n\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const histor = useHistory();\r\n   const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n   const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => histor.push(\"/admin\")\r\n    },\r\n    {\r\n      text: \"Groups\",\r\n      icon: <PeopleAltIcon/>,\r\n      onClick: () => histor.push(\"/admin/groups\")\r\n    },\r\n    {\r\n      text: \"Guides\",\r\n      icon: <SupervisedUserCircleIcon/>,\r\n      onClick: () => histor.push(\"/admin/guides\")\r\n    },\r\n    {\r\n      text: \"Archives\",\r\n      icon: <ArchiveIcon />,\r\n      onClick: () => histor.push(\"/admin/archives\")\r\n    }\r\n  ];\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n      {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <React.Fragment>\r\n            <ListItem button key={text} onClick={onClick} style={{marginRight:\"40px\"}}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n            <Divider/>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n     \r\n    </div>\r\n  );\r\n\r\n  return (\r\n        <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} >\r\n            {list(anchor)}\r\n          </Drawer>\r\n          <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n        <MenuIcon fontSize=\"large\" onClick={toggleDrawer(anchor, true)} className={classes.ButtonStyle} style={{}}/>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n          {auth && (\r\n            <div className={classes.profIcon}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/cp@2707user\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Change Password\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/logout\"\r\n                    onClick={kickUser}\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Link\r\n            to=\"/cp@2707user\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              startIcon={<AssignmentIndIcon />}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            to=\"/logout\"\r\n            onClick={kickUser}\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"20px\" }}\r\n              startIcon={<ExitToAppIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n          </React.Fragment>\r\n          ))}\r\n    </div>\r\n          \r\n      \r\n     \r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport AdminInstructions from \"./AdminInstructions\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LinearProgress,\r\n  TextField,\r\n  withStyles,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Input,\r\n  Snackbar,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SideMenu from \"./SideMenu\"\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\n//getting todays date\r\nvar tempDate = new Date();\r\nvar date =\r\n  tempDate.getFullYear() +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getMonth() + 1) +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getDate());\r\nconsole.log(date);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet userInfo = [];\r\nlet Ad = null;\r\nlet filled = false;\r\nlet Groups = null;\r\nlet Guides=null;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\n\r\nclass AdminContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hod: \"\",\r\n      hodName: \"\",\r\n      student_file: null,\r\n      adData: null,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      loading: false,\r\n      prefDueDate: date,\r\n      Academicyear: \"2020-2021\"\r\n    };\r\n  }\r\n\r\n  //to change format of the month\r\n  appendLeadingZeroes(n) {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  handleDateChange = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getDate());\r\n    this.setState({ prefDueDate: formatted_date });\r\n    let a = new Date(\"2020-12-01\");\r\n    if (current_datetime < a) {\r\n      console.log(\"success\");\r\n    } else if (current_datetime > a) {\r\n      console.log(\"failed\");\r\n    }\r\n    console.log(a);\r\n  };\r\n\r\n  //function to handle Academic Year\r\n  handleAcademicYear = e => {\r\n    this.setState({ Academicyear: e.target.value });\r\n  };\r\n\r\n  hodHandler = e => {\r\n    this.setState({ hod: e.target.value });\r\n  };\r\n  hodNameHandler = e => {\r\n    this.setState({ hodName: e.target.value });\r\n  };\r\n\r\n  // picHandler = e => {\r\n  //   this.setState({ pic: e.target.value });\r\n  // };\r\n  // picNameHandler = e => {\r\n  //   this.setState({ picName: e.target.value });\r\n  // };\r\n  // igHandler = e => {\r\n  //   this.setState({ ig: e.target.value });\r\n  // };\r\n  // igNameHandler = e => {\r\n  //   this.setState({ igName: e.target.value });\r\n  // };\r\n  // studentfileHandler = e => {\r\n  //   this.fileValidation(e);\r\n  // };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    var formData = new FormData();\r\n    formData.append(\"hodName\", this.state.hodName);\r\n    formData.append(\"hodEmail\", this.state.hod);\r\n    formData.append(\"student_file\", this.state.student_file);\r\n    formData.append(\"dueDate\", this.state.prefDueDate);\r\n    formData.append(\"acadYear\", this.state.Academicyear);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/admin\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n    this.setState({ hod: \"\", student_file: null, hodName: \"\" });\r\n  };\r\n\r\n  fileValidation = e => {\r\n    var fileInput = document.getElementById(\"file\");\r\n    console.log(fileInput);\r\n    console.log(e.target.files[0]);\r\n    var filePath = fileInput.value;\r\n    console.log(filePath);\r\n    // Allowing file type\r\n    var allowedExtensions = /(\\.csv|\\.xlsx)$/i;\r\n\r\n    if (!allowedExtensions.exec(filePath)) {\r\n      alert(\"Invalid file type\");\r\n      fileInput.value = \"\";\r\n      return false;\r\n    } else {\r\n      this.setState(\r\n        { student_file: e.target.files[0] },\r\n        console.log(this.state.student_file)\r\n      );\r\n    }\r\n  };\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        // console.log(res.data)\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n  checkGuides(){\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n    .then(res => {\r\n      Guides = res.data;\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.prefDueDate);\r\n    let academicYear=this.state.Academicyear\r\n    //console.log(academicYear);\r\n    const { classes } = this.props;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <LoggedNavbar />\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n      this.checkGuides();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n\r\n    if (this.state.filled === true) {\r\n      if (Ad === 0) {\r\n        return (\r\n          <div className={classes.root}>\r\n            <SideMenu/>\r\n            <Profile userInfo={userInfo} />\r\n            <AdminInstructions />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"50px auto\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\"\r\n              }}\r\n            >\r\n              <form\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  marginTop: \"30px\",\r\n                  padding: \"20px 30px\"\r\n                }}\r\n                onSubmit={this.submitHandler}\r\n              >\r\n                <Typography variant=\"h2\" style={{ marginBottom: \"30px\" }}>\r\n                  Create Project List\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Enter Head Of Department Details:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hodName\"\r\n                      label=\"Enter Head of Department Name\"\r\n                      value={this.state.hodName}\r\n                      onChange={this.hodNameHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hod\"\r\n                      label=\"Enter Head of Department Email\"\r\n                      value={this.state.hod}\r\n                      onChange={this.hodHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  {/* <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student List File:\r\n                    </Typography>\r\n                  </Grid> */}\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Academic Year:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {\" \"}\r\n                        <FormControl\r\n                          variant=\"outlined\"\r\n                          label=\"Academic Year\"\r\n                          style={{ width: \"60%\", padding: \"8px\" }}\r\n                        >\r\n                          <Select\r\n                            required\r\n                            value={this.state.Academicyear}\r\n                            onChange={this.handleAcademicYear}\r\n                            name=\"Academic Year\"\r\n                          >\r\n                            <MenuItem value=\"2020-2021\">2020-2021</MenuItem>\r\n                            <MenuItem value=\"2021-2022\">2021-2022</MenuItem>\r\n                            <MenuItem value=\"2022-2023\">2022-2023</MenuItem>\r\n                            <MenuItem value=\"2023-2024\">2023-2024</MenuItem>\r\n                            <MenuItem value=\"2024-2025\">2024-2025</MenuItem>\r\n                            <MenuItem value=\"2025-2026\">2025-2026</MenuItem>\r\n                            <MenuItem value=\"2026-2027\">2026-2027</MenuItem>\r\n                            <MenuItem value=\"2027-2028\">2027-2028</MenuItem>\r\n                            <MenuItem value=\"2028-2029\">2028-2029</MenuItem>\r\n                            <MenuItem value=\"2029-2030\">2029-2030</MenuItem>\r\n                            <MenuItem value=\"2030-2031\">2030-2031</MenuItem>\r\n                            <MenuItem value=\"2031-2032\">2031-2032</MenuItem>\r\n                            <MenuItem value=\"2032-2033\">2032-2033</MenuItem>\r\n                            <MenuItem value=\"2033-2034\">2033-2034</MenuItem>\r\n                            <MenuItem value=\"2034-2035\">2034-2035</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Due Date for Proposal Submission:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            autoOk\r\n                            required\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"yyyy/MM/dd\"\r\n                            value={this.state.prefDueDate}\r\n                            InputAdornmentProps={{ position: \"start\" }}\r\n                            onChange={this.handleDateChange}\r\n                            style={{ width: \"60%\", padding: \"8px\" }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student Group List:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <Input\r\n                      className={classes.Input}\r\n                      type=\"file\"\r\n                      id=\"file\"\r\n                      name=\"student_file\"\r\n                      onChange={this.fileValidation}\r\n                      style={{\r\n                        width: \"60%\",\r\n                        padding: \"12px\"\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <div style={{ alignItems: \"center\", margin: \"0 30%\" }}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                        startIcon={<CloudUploadIcon />}\r\n                        style={{\r\n                          padding: \"8px 50px\",\r\n                          fontSize: \"18px\",\r\n                          backgroundColor: \"#1877f2\",\r\n                          margin: \"25px\"\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Data submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Data not submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </div>\r\n        );\r\n      }\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <SideMenu/>\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n              <ProjectList Groups={Groups} Guides={Guides} />\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AdminContent from \"../components/Admin-component/AdminContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nvar today = new Date(),\r\n  date = today.getDate();\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <AdminContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport SERVER_URL from \"../URL\";\r\n// import SERVER_URL from \"../../../../Config.js\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./background2.jpg\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet Data = \"\";\r\nlet data_access = \"\";\r\nlet Ad = [];\r\nvar today = new Date(),\r\n  date =\r\n    today.getDate() +\r\n    \"a\" +\r\n    today.getMonth() +\r\n    \"V\" +\r\n    today.getFullYear() +\r\n    \"fUcKyoU\" +\r\n    50 +\r\n    \"Z\" +\r\n    today.getDate();\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    background: \"transparent\",\r\n    // boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n    borderRadius: \"6px\",\r\n    float: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    paddingTop: \"40px\",\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      paddingTop: \"20px\"\r\n    }\r\n  },\r\n  leftpaper: {\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundSize: \"cover\",\r\n    height: \"100%\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#1877f2\",\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    marginTop: \"30px\"\r\n  },\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  title: {\r\n    paddingTop: \"50px\",\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"775\")]: {\r\n      fontSize: \"45px\"\r\n    },\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      fontSize: \"40px\"\r\n    }\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n\r\n    if (token == null) {\r\n      loggedIn = false;\r\n      console.log(\"token is null\");\r\n    }\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedIn,\r\n      user: \"\",\r\n      msg: \"\",\r\n      invalidCredentials: false,\r\n      getResponse: false\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChange = name => ({ target: { value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    //Login Logic\r\n    this.setState({ getResponse: true });\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/login\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        email: username,\r\n        password: password\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n      }\r\n    })\r\n      .then(\r\n        function (response) {\r\n          console.log(response.data);\r\n          Data = response.data.type;\r\n          data_access = response.data.access_token;\r\n          localStorage.setItem(\"access_token\", response.data.access_token);\r\n          this.setState({\r\n            user: response.data.type,\r\n            loggedIn: true,\r\n            msg: \"set\",\r\n            getResponse: false\r\n          });\r\n          console.log(this.state.msg, this.state.user);\r\n                  }.bind(this)\r\n      )\r\n\r\n      .catch(err => {\r\n        console.log(\"process.env.NODE_ENV\");\r\n        console.log(process.env.NODE_ENV);\r\n        console.log(err);\r\n        this.setState({ invalidCredentials: true, getResponse: false });\r\n      });\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(function (res) {\r\n        Ad = res.data;\r\n        console.log(Ad);\r\n      })\r\n      // .then(() => {\r\n      //   localStorage.setItem(\"data\", \"set\");\r\n      // })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getToken() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === null) {\r\n      this.setState({\r\n        loggedIn: false\r\n      });\r\n      console.log(this.state.loggedIn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (Data === \"admin\") {\r\n      this.checkData();\r\n    }\r\n    if (Data === \"yami\") {\r\n      localStorage.setItem(\"token\", \"N1g70xwfa0V6oCXVweqt\" + date);\r\n    }\r\n    if (Data === \"admin\") {\r\n      localStorage.setItem(\"token\", \"admin\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"guide\") {\r\n      localStorage.setItem(\"token\", \"guide\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"ig\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"pic\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"hod\") {\r\n      localStorage.setItem(\"token\", \"hod\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"student\") {\r\n      localStorage.setItem(\"token\", \"student\");\r\n      localStorage.setItem(\"access_token\",data_access);\r\n    }\r\n    Data = \"\";\r\n    if (this.state.loggedIn) {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (token === \"N1g70xwfa0V6oCXVweqt\" + date)\r\n        return <Redirect to=\"/yami\" exact />;\r\n      if (token === \"admin\") return <Redirect to=\"/admin\" exact />;\r\n      if (token === \"student\") return <Redirect to=\"/student\" exact />;\r\n      if (token === \"faculty\") return <Redirect to=\"/faculty\" exact />;\r\n      if (token === \"hod\") return <Redirect to=\"/hod\" exact />;\r\n      if (token === \"guide\") return <Redirect to=\"/guide\" exact />;\r\n    }\r\n    const handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n      this.setState({ invalidCredentials: false });\r\n    };\r\n    // if (this.state.loggedIn) {\r\n    //   return <Redirect to=\"/admin\" />;\r\n    // }\r\n    if (this.state.getResponse) {\r\n      return <LinearProgress />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.leftpaper}>\r\n          <Typography variant=\"h2\" className={classes.title}>\r\n            <b>Project Management System</b>\r\n          </Typography>\r\n          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n            <CssBaseline />\r\n            <Avatar variant=\"circle\" className={classes.avatar}>\r\n              <PersonIcon fontSize=\"large\" />\r\n            </Avatar>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              <b>User Login</b>\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={this.submitForm}>\r\n              <TextField\r\n                type=\"email\"\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange(\"username\")}\r\n                className={classes.fields}\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange(\"password\")}\r\n                autoComplete=\"current-password\"\r\n                className={classes.fields}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n            <Snackbar\r\n              open={this.state.invalidCredentials}\r\n              autoHideDuration={6000}\r\n              onClose={handleClose}\r\n            >\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                Invalid Username/Password Please try again\r\n              </Alert>\r\n            </Snackbar>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Login);\r\n// <Grid container>\r\n//   <Hidden xsDown>\r\n//     <Grid item   md={7}   className={classes.leftpaper}>\r\n//     </Grid>\r\n//   </Hidden>\r\n//   <Grid item  component=\"main\" maxWidth=\"xs\" md={5}>\r\n//     <CssBaseline />\r\n//     <div\r\n//       className={classes.paper}\r\n//       style={{\r\n//         boxShadow:\r\n//           \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n//         backgroundColor: \"#fff\",\r\n//         borderRadius: \"6px\"\r\n//       }}\r\n//     >\r\n//       <Avatar\r\n//         variant=\"circle\"\r\n//         className={classes.avatar}\r\n//         style={{ marginTop: \"30px\" }}\r\n//       >\r\n//         <PersonIcon fontSize=\"large\" />\r\n//       </Avatar>\r\n//       <Typography component=\"h2\" variant=\"h6\">\r\n//         User Login\r\n//       </Typography>\r\n//       <form\r\n//         className={classes.form}\r\n//         onSubmit={this.submitForm}\r\n//         noValidate\r\n//       >\r\n//         <TextField\r\n//           type=\"email\"\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           id=\"username\"\r\n//           label=\"username\"\r\n//           value={this.state.username}\r\n//           onChange={this.handleChange(\"username\")}\r\n//           className={classes.fields}\r\n//           autoFocus\r\n//         />\r\n//         <TextField\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           label=\"Password\"\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           value={this.state.password}\r\n//           onChange={this.handleChange(\"password\")}\r\n//           autoComplete=\"current-password\"\r\n//           className={classes.fields}\r\n//         />\r\n\r\n//         <Button\r\n//           type=\"submit\"\r\n//           fullWidth\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           className={classes.submit}\r\n//           style={{\r\n//             padding: \"10px\",\r\n//             fontSize: \"18px\",\r\n//             fontWeight: \"bolder\",\r\n//             backgroundColor: \"#1877f2\",\r\n//             marginBottom: \"25px\"\r\n//           }}\r\n//         >\r\n//           Log In\r\n//         </Button>\r\n//       </form>\r\n//       <Snackbar\r\n//         open={this.state.invalidCredentials}\r\n//         autoHideDuration={6000}\r\n//         onClose={handleClose}\r\n//       >\r\n//         <Alert onClose={handleClose} severity=\"error\">\r\n//           Invalid Username/Password Please try again\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </div>\r\n//   </Grid>\r\n// </Grid>\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Logout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"access_token\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>You Have been Logged out</h1>\r\n        <button onClick={() => {window.location.reload(false)}}><Link to=\"/\">Login Again</Link></button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport {Typography, TextField, Grid, Button, withStyles, CircularProgress, Tabs, Tab, Box, AppBar, createMuiTheme, ThemeProvider, responsiveFontSizes } from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet stuData = null;\r\nlet Stu = null;\r\nlet filled = false;\r\nlet Proposals = null;\r\nlet pref1=[];\r\nlet pref2=[];\r\nlet pref3=[];\r\n\r\nconst useStyles = theme => ({\r\n  buttonprop: {\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  TextField: {\r\n    width: \"100%\"\r\n  },\r\n  typography:{\r\n    fontSize:\"16px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  typographyFilled:{\r\n    fontWeight:\"700\",\r\n    fontSize:\"20px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  tabPanel:{\r\n    borderTop:\"1px solid #000\",\r\n    width:\"100%\"\r\n  },\r\n  largeWinTabs:{\r\n    [theme.breakpoints.down('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n  smallWinTabs:{\r\n    [theme.breakpoints.up('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nclass StudentContent extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      preferences: [\r\n        {\r\n          filled: false,\r\n          prefno: 1,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 2,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 3,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        }\r\n      ],\r\n      currentStep: 1,\r\n      stuData: null,\r\n      tabValue: 0,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      formFilled: false,\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      stuData: null\r\n    });\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      tabValue: newValue\r\n    });\r\n  };\r\n\r\n  handleTopChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      //let prefno = prefs[i].prefno;\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Top = e.target.value;\r\n        //prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n        // console.log(this.state.preferences);\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleDosChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dos = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleDsopChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dsop = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleAgencyChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Agency = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleMtapChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Mtap = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleRedChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Red = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleShrChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Shr = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n    //console.log(this.state.preferences)\r\n  };\r\n\r\n  handleFileChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        prefs[i].selectedFile = e.target.files[0];\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClick = (e, pn) => {\r\n    e.preventDefault();\r\n    if (this.state.currentStep === 3) {\r\n      console.log(\"HELLO\");\r\n      let prefs = [...this.state.preferences];\r\n      for (var i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n          console.log(prefs[i].filled);\r\n          this.handleSubmit(e);\r\n        }\r\n      }\r\n    } else {\r\n      let prefs = [...this.state.preferences];\r\n      for (i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n          console.log(prefs[i].filled);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(this.state.preferences);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let pref1 = this.state.preferences[0];\r\n    let pref2 = this.state.preferences[1];\r\n    let pref3 = this.state.preferences[2];\r\n    //console.log(pref1);\r\n    let proposals = [\r\n      {\r\n        title: pref1.Top,\r\n        specialization: pref1.Dos,\r\n        details: pref1.Dsop,\r\n        agency: pref1.Agency,\r\n        method: pref1.Mtap,\r\n        result: pref1.Red,\r\n        requirements: pref1.Shr\r\n      },\r\n      {\r\n        title: pref2.Top,\r\n        specialization: pref2.Dos,\r\n        details: pref2.Dsop,\r\n        agency: pref2.Agency,\r\n        method: pref2.Mtap,\r\n        result: pref2.Red,\r\n        requirements: pref2.Shr\r\n      },\r\n      {\r\n        title: pref3.Top,\r\n        specialization: pref3.Dos,\r\n        details: pref3.Dsop,\r\n        agency: pref3.Agency,\r\n        method: pref3.Mtap,\r\n        result: pref3.Red,\r\n        requirements: pref3.Shr\r\n      }\r\n    ];\r\n    var formData = new FormData();\r\n    formData.append(\"proposals\", JSON.stringify(proposals));\r\n    formData.append(\"file1\", this.state.preferences[0].selectedFile);\r\n    formData.append(\"file2\", this.state.preferences[1].selectedFile);\r\n    formData.append(\"file3\", this.state.preferences[2].selectedFile);\r\n    console.log(proposals);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n\r\n    console.log(this.state.preferences);\r\n  };\r\n\r\n  checkData = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers : {\r\n                Authorization : 'Bearer '+localStorage.getItem(\"access_token\"),\r\n            }\r\n    })\r\n      .then(res => {\r\n        Stu = res.data.proposals.length;\r\n        Proposals = res.data.proposals;\r\n        //console.log(Proposals);\r\n        pref1 = Proposals[0]\r\n        pref2 = Proposals[1]\r\n        pref3 = Proposals[2]\r\n        // console.log(pref1)\r\n        this.setState({\r\n          stuData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  _next = e => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n    this.handleClick(e, currentStep - 1);\r\n  };\r\n\r\n  _prev = () => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n  };\r\n\r\n  /*\r\n   * the functions for our button\r\n   */\r\n  // previousButton() {\r\n  //   const classes=useStyles();\r\n  //   let currentStep = this.state.currentStep;\r\n  //   if (currentStep !== 1) {\r\n  //     return (\r\n  //       <Button className={classes.buttonprop} variant=\"contained\" component={'span'} onClick={this._prev}>\r\n  //         Previous\r\n  //       </Button>\r\n  //     );\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  handleNext = e => {\r\n    e.preventDefault();\r\n    let currentStep = this.state.currentStep;\r\n    let {\r\n      Top,\r\n      Dos,\r\n      Dsop,\r\n      Agency,\r\n      Mtap,\r\n      Red,\r\n      Shr,\r\n      selectedFile\r\n    } = this.state.preferences[currentStep - 1];\r\n    if (\r\n      Top === \"\" ||\r\n      Dos === \"\" ||\r\n      Dsop === \"\" ||\r\n      Agency === \"\" ||\r\n      Mtap === \"\" ||\r\n      Red === \"\" ||\r\n      Shr === \"\" ||\r\n      selectedFile === null\r\n    ) {\r\n      alert(\"Please enter all the details of the preference\");\r\n    } else {\r\n      // console.log(this.state.preferences);\r\n      this.setState({ open: true });\r\n      this._next(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    stuData = this.state.stuData;\r\n    filled = this.state.filled;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (stuData === null) {\r\n      this.checkData();\r\n    }\r\n    if (filled === true) {\r\n      if (Stu === 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <form>\r\n              <Step1\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleClose={this.handleClose}\r\n                handleFileChange={this.handleFileChange}\r\n              />\r\n              <Step2\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                handleClose={this.handleClose}\r\n                _prev={this._prev}\r\n              />\r\n              <Step3\r\n                classes={classes}\r\n                openSuccess={this.state.openSuccess}\r\n                openFailure={this.state.openFailure}\r\n                handleClose={this.handleClose}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleSubmit={this.handleSubmit}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                _prev={this._prev}\r\n              />\r\n              {/* {this.previousButton()} */}\r\n            </form>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n      if (Stu !== 0) {\r\n        let value=this.state.tabValue;\r\n          return (\r\n            <React.Fragment>\r\n              <div className={classes.largeWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\" centered>\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </div>\r\n              <div className={classes.smallWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs variant=\"scrollable\" scrollButtons=\"on\" value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\">\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>Title of Preference : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Domain/Area of Specialization : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Detailed Statement of Problem : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Internal agency/external agency/CTL/Mastek/or any other : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Method/Technique/Algorithm proposed : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Results Expected : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>Software and Hardware requirements : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>IEEE / ACM / Springer Journal Paper : </Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `http://localhost:8000/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <CircularProgress />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step1(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 1) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 1\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step2(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 2) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 2\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n            {/* <Snackbar open={props.open} autoHideDuration={6000} onClose={props.handleClose}>\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preference 2 submitted successfully\r\n              </Alert>\r\n            </Snackbar> */}\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step3(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 3) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 3\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              type=\"submit\"\r\n              onClick={e => {\r\n                props.handleClick(e, props.currentStep);\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Snackbar\r\n              open={props.openSuccess}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preferences submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n              open={props.openFailure}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"error\">\r\n                Preferences not submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(StudentContent);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\n\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nlet propF = false;\r\nlet sData = null;\r\nlet fill = false;\r\nlet Group = null;\r\n\r\nconst StudentHomePage = () => {\r\n\r\n    const [propFilled,setPropFilled] = useState(false)\r\n    const [stuData, setStuData] = useState(null);\r\n    const [filled, setFilled ] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const classes = useStyles();\r\n    function checkData() {\r\n        setLoading(true);\r\n        axios({\r\n            method: \"get\",\r\n            url: SERVER_URL + \"/group\",\r\n            withCredentials: true,\r\n            headers : {\r\n                Authorization : 'Bearer '+localStorage.getItem(\"access_token\"),\r\n            }\r\n        })\r\n        .then(res => {\r\n        Group = res.data;\r\n        DueDate = Group.dueDate.split(\"T\")[0];\r\n        AppliedOn = Group.proposals[0].applied.split(\"T\")[0];\r\n        if (Group.proposals.length > 0) {\r\n          setPropFilled(true);\r\n          propF = propFilled;\r\n        }\r\n        setStuData(\"new\");\r\n        setFilled(true);\r\n        setLoading(false);\r\n        sData = stuData;\r\n        fill = filled;\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function propApproved(proposals) {\r\n    let approved = false;\r\n    let propTitle = \"\";\r\n\r\n    proposals.map(proposal => {\r\n      if (proposal.approval.admin && proposal.approval.hod) {\r\n        approved = true;\r\n        propTitle = proposal.title;\r\n      }\r\n    });\r\n\r\n    if (approved) {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"primary\" variant=\"h4\">\r\n              Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h4\">\r\n              Your Proposal <b>{propTitle}</b> has been approved. Please start\r\n              working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"secondary\" variant=\"h4\">\r\n              Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h4\">\r\n              Your Proposal <b>{propTitle}</b> has been approved. Please start\r\n              working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"primary\" variant=\"h4\">\r\n              Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"secondary\" variant=\"h4\">\r\n              Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  // console.log(propF)\r\n  if (loading) {\r\n    return (\r\n      <div style={{ margin: \"auto\" }}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  if (sData === null) {\r\n    checkData();\r\n  }\r\n  if (fill && propF) {\r\n    let i = 1;\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Typography style={{ marginTop: \"20px\" }} variant=\"h4\">\r\n            Approval Status\r\n          </Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Proposal</TableCell>\r\n                  <TableCell align=\"center\">Proposal Title</TableCell>\r\n                  <TableCell align=\"center\">Admin</TableCell>\r\n                  <TableCell align=\"center\">Head of Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {proposals.map(proposal => (\r\n                  <TableRow key={proposal.title}>\r\n                    <TableCell align=\"center\">{i++}</TableCell>\r\n                    <TableCell align=\"center\">{proposal.title}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.admin ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.hod ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {propApproved(proposals)}\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  if (fill && !propF) {\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {proposals.length === 0 ? (\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              <b>Due Date for Submitting Proposals:</b>&nbsp;&nbsp;{DueDate}\r\n            </Typography>\r\n          ) : null}\r\n\r\n          <Typography style={{ marginBottom: \"40px\" }} variant=\"h3\">\r\n            Preferences not filled\r\n          </Typography>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return <CircularProgress />;\r\n};\r\n\r\nexport default StudentHomePage;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Typography, CircularProgress, Grid, Paper } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport SERVER_URL from \"../../Pages/URL\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo:{\r\n        textAlign:\"Left\"\r\n    }\r\n}))\r\n\r\nlet sData = null;\r\nlet fill = false;\r\nlet Group = null;\r\n\r\nconst StudentCommentPage = () => {\r\n\r\n    const classes = useStyles();\r\n    const [stuData,setStuData] = useState(null);\r\n    const [filled,setFilled] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    function checkData() {\r\n        setLoading(true);\r\n        axios({\r\n            method: \"get\",\r\n            url: SERVER_URL + \"/group\",\r\n            withCredentials: true,\r\n            headers : {\r\n                Authorization : 'Bearer '+localStorage.getItem(\"access_token\"),\r\n            }\r\n        })\r\n        .then(res => {\r\n        Group = res.data;\r\n        //console.log(Group.comments.length);\r\n        setStuData(\"new\");\r\n        setFilled(true);\r\n        setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n        console.log(err);\r\n        });\r\n    }\r\n\r\n    if (loading) {\r\n        console.log(\"LOADING\")\r\n        return (\r\n            <div style={{ margin: \"auto\" }}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n    if(stuData === null){\r\n        checkData();\r\n        console.log(\"sData : \",stuData);\r\n        console.log(\"fill : \",filled);\r\n    }\r\n    // if(fill && Group.comments.length===0){\r\n    //     return(\r\n    //         <React.Fragment>\r\n    //             <Typography variant=\"h4\">No comments have been added</Typography>\r\n    //         </React.Fragment>\r\n    //     )\r\n    // }\r\n    // if(fill && Group.comments.length!==0){\r\n    //     Group.comments.map(comment => {\r\n    //         return(\r\n    //             <React.Fragment>\r\n    //                 <Typography variant=\"h4\">{comment.text}</Typography>\r\n    //             </React.Fragment>\r\n    //         )\r\n    //     })\r\n    // }\r\n    if(filled){\r\n        const {comments} = Group;\r\n        console.log(stuData,filled);\r\n        if(comments.length === 0){\r\n            console.log(comments.length);\r\n            return(\r\n                <React.Fragment>\r\n                    <Typography variant=\"h4\">No comments have been added</Typography>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            console.log(comments);\r\n            return(\r\n            comments.map(comment => {\r\n                console.log(comment);\r\n                return(\r\n                    <React.Fragment key={comment._id}>\r\n                        <Paper>\r\n                            <Grid style={{marginTop:\"10px\",marginBottom:\"10px\"}} container spacing={2}>\r\n                                <Grid className={classes.typo} item xs={6}>\r\n                                    <Typography>Author : {comment.author}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={6}>\r\n                                    <Typography>Time : {comment.time}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={12}>\r\n                                    <Typography>Comment : {comment.text}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </React.Fragment>\r\n                );\r\n            }))\r\n        }\r\n    }\r\n    return(\r\n        <div style={{ margin: \"auto\" }}>\r\n            <CircularProgress />\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default StudentCommentPage;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Container } from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport StudentContent from \"./StudentContent\";\r\nimport Profile from \"../Profile\";\r\nimport StudentHomePage from \"./studentHomePage\";\r\nimport StudentCommentPage from \"./StudentCommentPage\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\n\r\nlet userInfo = [];\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Container>\r\n          <Box>\r\n            <Typography component={\"span\"}>{children}</Typography>\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    maxWidth: \"100%\",\r\n    marginTop: \"3px\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  // tabs: {\r\n  //   borderRight: `1px solid ${theme.palette.divider}`,\r\n  // },\r\n  TabPanel: {\r\n    //borderLeft:`1px solid ${theme.palette.divider}`,\r\n    display: \"block\"\r\n    //margin:\"1px\",\r\n  },\r\n  vert_tab_grid: {\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  hor_tab_grid: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  large_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.down(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  small_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.up(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nlet Group=null;\r\n\r\nconst StudentWholePage = props => {\r\n  userInfo = props.userInfo;\r\n  //console.log(userInfo.name);\r\n\r\n  const [academicYear,setAcademicYear] = React.useState(\"\");\r\n\r\n  function checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers:{\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Group = res.data;\r\n        setAcademicYear(Group.acadYear);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {checkData()}\r\n      <Profile academicYear={academicYear} userInfo={userInfo} />\r\n      <div\r\n        style={{\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n        }}\r\n        className={classes.small_win_tabs}\r\n      >\r\n        <Grid container className={classes.root}>\r\n          <ThemeProvider theme={theme}>\r\n            <Grid item xs={12} className={classes.hor_tab_grid}>\r\n              <Tabs\r\n                orientation=\"horizontal\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"horizontal tabs\"\r\n                variant=\"fullWidth\"\r\n                //scrollButtons=\"on\"\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n              >\r\n                <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Preferences\"\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Comments\"\r\n                  {...a11yProps(2)}\r\n                />\r\n              </Tabs>\r\n            </Grid>\r\n            {/* <Grid item xs={2} /> */}\r\n          </ThemeProvider>\r\n          <Grid className={classes.TabPanel} item xs={12}>\r\n            <TabPanel value={value} index={0}>\r\n              <StudentHomePage />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <StudentContent />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <StudentCommentPage />\r\n            </TabPanel>\r\n          </Grid>\r\n          {/* <Grid item xs={1}></Grid> */}\r\n        </Grid>\r\n      </div>\r\n      <div\r\n        style={{\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n        }}\r\n        className={classes.large_win_tabs}\r\n      >\r\n        <Grid style={{ marginTop: \"3px\" }} container className={classes.root}>\r\n          <ThemeProvider theme={theme}>\r\n            <Grid item xs={3} className={classes.vert_tab_grid}>\r\n              <Tabs\r\n                orientation=\"vertical\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs\"\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n              >\r\n                <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Preferences\"\r\n                  {...a11yProps(1)}\r\n                />\r\n                <Tab\r\n                  className={classes.tab}\r\n                  label=\"Comments\"\r\n                  {...a11yProps(2)}\r\n                />\r\n              </Tabs>\r\n            </Grid>\r\n          </ThemeProvider>\r\n          <Grid className={classes.TabPanel} item xs={9}>\r\n            <TabPanel value={value} index={0}>\r\n              <StudentHomePage />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <StudentContent />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <StudentCommentPage />\r\n            </TabPanel>\r\n          </Grid>\r\n          {/* <Grid item xs={1}></Grid> */}\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StudentWholePage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport StudentWholePage from \"../components/Student-component/studentWholePage\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\n//import StudentContent from \"../components/Student-component/StudentContent\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"student\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    \r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"NO user\" });\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"access_token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"student\") {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <StudentWholePage userInfo={this.state.user} />\r\n          <footer>\r\n            <Footer />\r\n          </footer>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel : {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float : \"left\",\r\n  }\r\n});\r\n\r\nclass YamiContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      openSuccess : false,\r\n      openFailure : false,\r\n      name:\"\",\r\n      mail: \"\",\r\n      dept: \"Computer Science\"\r\n    };\r\n  }\r\n\r\n  mailHandler = event => {\r\n    this.setState({ mail: event.target.value });\r\n  };\r\n  nameHandler = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  deptHandler = event => {\r\n    this.setState({ dept: event.target.value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const {name, mail, dept } = this.state;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/yami\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        name : name,\r\n        email: mail,\r\n        department: dept\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(response => {\r\n        this.setState({openSuccess:true});\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({openFailure:true});\r\n      });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      this.setState({openFailure:false,openSuccess:false})\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <LoggedNavbar />\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div\r\n            className={classes.paper}\r\n            style={{\r\n              boxShadow:\r\n                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: \"6px\"\r\n            }}\r\n          >\r\n           \r\n            <form\r\n              className={classes.form}\r\n              onSubmit={this.submitHandler}\r\n              noValidate\r\n            >\r\n              <Typography variant=\"h4\" style={{ marginTop:'15px',marginBottom:'15px'}}>\r\n                Create Admin\r\n              </Typography>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin name\"\r\n                value={this.state.name}\r\n                onChange={this.nameHandler}\r\n                autoFocus/>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin email\"\r\n                value={this.state.mail}\r\n                onChange={this.mailHandler}\r\n                />\r\n              <InputLabel\r\n              className = {classes.deptLabel}> Select Department</InputLabel>\r\n              <Select\r\n                value={this.state.dept}\r\n                onChange={this.deptHandler}\r\n                label=\"Department\"\r\n                fullWidth\r\n              >\r\n                <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\r\n                <MenuItem value=\"Information Technology\">Information Technology</MenuItem>\r\n                <MenuItem value=\"Electronics and Telecommunication\">Electronics and Telecommunication</MenuItem>\r\n                <MenuItem value=\"Electronics\">Electronics</MenuItem>\r\n              </Select>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  fontSize: \"18px\",\r\n                  fontWeight: \"bolder\",\r\n                  backgroundColor: \"#1877f2\",\r\n                  marginBottom: \"25px\"\r\n                }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </form>\r\n            <Snackbar open={this.state.openSuccess} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                A new Admin was created successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={this.state.openFailure} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                There was some problem while creating the admin please refresh the page and try again.\r\n              </Alert>\r\n            </Snackbar>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n        \r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(YamiContent);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport YamiContent from \"../components/Yami-component/YamiContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Yami extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"None\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === null) {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"yami\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <YamiContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" exact />;\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, Component} from 'react';\r\nexport const ProjectContext = createContext();\r\n\r\nclass ProjectContextProvider extends Component{\r\n    state = {\r\n            projects:[\r\n                {title:\"project1\",isapproved:true,comment:\"\",id:1},\r\n                {title:\"project2\",isapproved:false,comment:\"\",id:2},\r\n                {title:\"project3\",isapproved:false,comment:\"\",id:3},\r\n                {title:\"project4\",isapproved:false,comment:\"\",id:4},\r\n                {title:\"project5\",isapproved:true,comment:\"\",id:5}\r\n            ]\r\n    }\r\n    Approve = (id) => {\r\n        let projects = [...this.state.projects];\r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.isapproved = !project.isapproved;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    addComment = (id,comment) => {\r\n        let projects = [...this.state.projects];\r\n        \r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.comment = comment;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <ProjectContext.Provider value={{...this.state,Approve: this.Approve,addComment: this.addComment}}>\r\n                {this.props.children}\r\n            </ProjectContext.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ProjectContextProvider;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst ProjectDetails = (project) => {\r\n    // const handleClick = () => {\r\n    //     const pro_to_show = project;\r\n    //     ProjectForm(pro_to_show);\r\n    // } \r\n    return (\r\n            <NavLink to={{pathname:\"/projectform\",aboutProps:{project}}}>\r\n                <div>\r\n                    <label className=\"title\"> Title : {project.project.title}</label>\r\n                    <label className=\"id\"> ID : {project.project.id}</label>\r\n                </div>\r\n            </NavLink>\r\n     );\r\n}\r\n \r\nexport default ProjectDetails;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { ProjectContext } from \"../../context/projectcontext\";\r\nimport ProjectDetails from \"./projectdetails\";\r\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nconst ProjectList = () => {\r\n  const { projects } = useContext(ProjectContext);\r\n  return projects.length ? (\r\n    <div className=\"project-list\">\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Approved</Tab>\r\n          <Tab>Not Approved</Tab>\r\n        </TabList>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? null : (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            );\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            ) : null;\r\n          })}\r\n        </TabPanel>\r\n      </Tabs>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">No projects submitted</div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport \"./FacultyContent.css\";\r\nimport ProjectContextProvider from \"../../context/projectcontext\";\r\nimport ProjectList from \"../verification/projectlist\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\n\r\nconst FacultyContent = props => {\r\n  return (\r\n    <div>\r\n      <LoggedNavbar />\r\n      <ProjectContextProvider>\r\n        <ProjectList />\r\n      </ProjectContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacultyContent;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FacultyContent from \"../components/Faculty-component/FacultyContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"faculty\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"no user\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (\r\n      this.state.user.type === \"ig\" ||\r\n      this.state.user.type === \"pic\"\r\n    ) {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <FacultyContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChangePassword.css\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel: {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float: \"left\"\r\n  }\r\n});\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      user: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      openSuccess: false,\r\n      openFailure :false,\r\n      helptext : \"\",\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"no user\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  pushPassword = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/changePassword\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        newPassword: this.state.newPassword,\r\n        confirmPassword: this.state.confirmPassword\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({openFailure : true});\r\n      });\r\n  };\r\n\r\n  newpasswordHandler = e => {\r\n    this.setState({ newPassword: e.target.value });\r\n  };\r\n  confirmpasswordHandler = e => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(this.state.newPassword !== this.state.confirmPassword){\r\n      this.setState({helptext : \"Two fields Doesn't match\"}) ;\r\n    }else if(this.state.newPassword.length < 8){\r\n      this.setState({helptext : \"Please Enter a Password with length greater than 8\"});\r\n    }\r\n    else{\r\n       this.pushPassword(); \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if(this.state.openSuccess){\r\n        this.setState({openSuccess: false, user: \"no user\"});\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n      else if(this.state.openFailure){\r\n        this.setState({openFailure : false});\r\n      }\r\n    };\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user === \"no user\") {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div\r\n              className={classes.paper}\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"6px\"\r\n              }}\r\n            >\r\n              <Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  Your Password was changed successfully Please click anywhere\r\n                  to login again\r\n                </Alert>\r\n              </Snackbar>\r\n              <Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                  There was some problem while changing your password please refresh the page and try again\r\n                </Alert>\r\n              </Snackbar>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={this.handleSubmit}\r\n                noValidate\r\n              >\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  style={{ marginTop: \"15px\", marginBottom: \"15px\" }}\r\n                >\r\n                  Change Password\r\n                </Typography>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  value={this.state.newPassword}\r\n                  onChange={this.newpasswordHandler}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.confirmpasswordHandler}\r\n                />\r\n                <Typography variant=\"subtitle2\" color=\"error\">\r\n                  {this.state.helptext}\r\n                </Typography>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bolder\",\r\n                    backgroundColor: \"#1877f2\",\r\n                    marginBottom: \"25px\"\r\n                  }}\r\n                >\r\n                  Change Password\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ChangePassword);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <React.Fragment>\r\n            <h1>404 Page Not Found</h1>\r\n            <p>The page you were looking for was not found </p>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\",\r\n    margin: theme.spacing(2)\r\n  },\r\n  backButton: {},\r\n  buttonContainer: {\r\n    padding: \"auto\",\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n          <Link\r\n            to=\"/\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button color=\"inherit\" variant=\"contained\">\r\n              <ArrowBackRoundedIcon />\r\n            </Button>\r\n          </Link>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  CircularProgress,\r\n  Grid,\r\n  Paper,\r\n  Box,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typo1: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"Medium\"\r\n  },\r\n  typo2: {\r\n    textAllign: \"right\",\r\n    fontWeight: \"Light\"\r\n  }\r\n}));\r\n\r\nconst THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst AdminCommentPage = props => {\r\n  const classes = useStyles();\r\n  const comments = props.Comments;\r\n  //console.log(comments);\r\n  if (comments.length === 0) {\r\n    console.log(comments.length);\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h4\">No comments have been added</Typography>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <ThemeProvider theme={THEME}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <Paper\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0,0,0,.1), 0 8px 16px rgba(0,0,0,.1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"0px\",\r\n                marginTop: \"50px\",\r\n                marginBottom: \"50px\"\r\n              }}\r\n            >\r\n              <Paper style={{ borderRadius: \"0\" }}>\r\n                {/* <Typography style={{fontWeight:\"bold\"}} variant=\"h4\">\r\n                            Your Previous Comments\r\n                        </Typography> */}\r\n                <Typography variant=\"h3\" style={{ fontWeight: \"500\" }}>\r\n                  Previous Comments\r\n                </Typography>\r\n              </Paper>\r\n              {comments\r\n                .slice(0)\r\n                .reverse()\r\n                .map(comment => {\r\n                  let d = new Date(comment.time);\r\n                  //comment.time = new Date(d.getTime() + 330*60000);\r\n                  // console.log(d)\r\n                  // console.log(comment.time)\r\n                  let author = comment.author;\r\n                  // if(author.includes(\"admin\"))\r\n                  return (\r\n                    <React.Fragment key={comment._id}>\r\n                      <Paper style={{ borderRadius: \"0\" }}>\r\n                        <Grid\r\n                          container\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"5px\"\r\n                          }}\r\n                          spacing={2}\r\n                        >\r\n                          <Grid\r\n                            className={classes.typo1}\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            md={8}\r\n                          >\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 16,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Author : {comment.author}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            {/* <Typography style={{fontSize:\"12px\",fontWeight:\"300\"}}>\r\n                                                Time : {comment.time}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Roboto\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Date : {d.toString().substr(4, 12)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Helvetica Neue\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Time : {d.toString().slice(15, 24)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo1} item xs={12}>\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 18,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Comment : {comment.text}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </React.Fragment>\r\n                  );\r\n                  // }else{return null}\r\n                })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AdminCommentPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../components/ToUpper\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport AdminCommentPage from \"../components/Admin-component/AdminCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  }\r\n});\r\n\r\n//axios get Request\r\n\r\nclass ControlledExpansionPanels extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      approved: false,\r\n      openSuccess: false,\r\n      openFailure: false\r\n    };\r\n  }\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState({\r\n      comment: comment\r\n    });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  //axios request to send comments\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          console.log(response);\r\n          this.setState({\r\n            adData: null,\r\n            comment: \"\"\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        console.log(Groups[3].comments);\r\n\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //axios post request to \"/approve\"\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n\r\n    //call axios\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Proposal1 = Proposals[0];\r\n                let Proposal2 = Proposals[1];\r\n                let Proposal3 = Proposals[2];\r\n                console.log(\r\n                  Proposal1.approval,\r\n                  Proposal2.approval,\r\n                  Proposal3.approval\r\n                );\r\n                let Comments = group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Details:&nbsp;&nbsp;</b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Method:&nbsp;&nbsp;</b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Requirements:&nbsp;&nbsp;</b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {/* {proposal.applied.split(\"T\")[0]} */}\r\n                                  {proposal.applied.substr(0, 10)}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Attached Print:&nbsp;&nbsp;</b>\r\n                                  {proposal.attachPrints}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `http://localhost:8000/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {!proposal.approval.admin &&\r\n                                !Proposal1.approval.hod &&\r\n                                !Proposal2.approval.hod &&\r\n                                !Proposal3.approval.hod ? (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    onClick={() => {\r\n                                      this.handleApprove(pid, Gid);\r\n                                    }}\r\n                                  >\r\n                                    Approve Proposal\r\n                                  </Button>\r\n                                ) : (\r\n                                  <div>\r\n                                    {proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        This Proposal is Selected\r\n                                      </Button>\r\n                                    ) : proposal.approval.admin ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Waiting For Hod Approval\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved Another Proposal\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <Grid container className={classes.comment}>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comTitle}\r\n                      >\r\n                        <Typography>\r\n                          <b>Add Comments:</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                          className={classes.comField}\r\n                          variant=\"outlined\"\r\n                          component={\"span\"}\r\n                          multiline\r\n                          inputProps={{ style: { fontSize: 14 } }}\r\n                          rows={3}\r\n                          id=\"comment\"\r\n                          name=\"comment\"\r\n                          type=\"text\"\r\n                          value={this.state.comment}\r\n                          onChange={this.commentHandler}\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comButton}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            this.sendComment(Gid);\r\n                          }}\r\n                        >\r\n                          Send Comment\r\n                        </Button>\r\n                        <Snackbar\r\n                          open={this.state.openSuccess}\r\n                          autoHideDuration={6000}\r\n                          onClose={this.handleClose}\r\n                        >\r\n                          <Alert onClose={this.handleClose} severity=\"success\">\r\n                            Successful comment\r\n                          </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar\r\n                          open={this.state.openFailure}\r\n                          autoHideDuration={6000}\r\n                          onClose={this.handleClose}\r\n                        >\r\n                          <Alert onClose={this.handleClose} severity=\"error\">\r\n                            Unsuccessful. Comment cannot be empty\r\n                          </Alert>\r\n                        </Snackbar>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={12}>\r\n                        <AdminCommentPage Comments={Comments} />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n\r\n    // return (\r\n    //   <div className={classes.root}>\r\n\r\n    //     <Accordion\r\n    //       expanded={expanded === \"panel1\"}\r\n    //       onChange={this.handleChange(\"panel1\")}\r\n    //     >\r\n    //       <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n    //         <Typography className={classes.heading}>\r\n    //           General settings\r\n    //         </Typography>\r\n    //         <Typography className={classes.secondaryHeading}>\r\n    //           I am an expansion panel\r\n    //         </Typography>\r\n    //       </AccordionSummary>\r\n    //       <AccordionDetails>\r\n    //         <Typography>\r\n    //           Nulla facilisi. Phasellus sollicitudin nulla et quam mattis\r\n    //           feugiat. Aliquam eget maximus est, id dignissim quam.\r\n    //         </Typography>\r\n    //       </AccordionDetails>\r\n    //     </Accordion>\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n\r\nControlledExpansionPanels.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ControlledExpansionPanels);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  Box,\r\n  useTheme,\r\n  AccordionSummary,\r\n  Grid,\r\n  Button,\r\n  Accordion,\r\n  AccordionDetails\r\n} from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst HodProjectList = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n  // console.log(props);\r\n  const Groups = props.Groups;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChangeT}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n          <Tab label=\"Approved by Project Coordinator\" {...a11yProps(1)} />\r\n          <Tab label=\"Pending Approval\" {...a11yProps(2)} />\r\n          <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            // console.log(Group);\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && pref1HodApproval) ||\r\n              (pref2AdminApproval && pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && !pref1HodApproval) ||\r\n              (pref2AdminApproval && !pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                !pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1Approval = false;\r\n            let pref2Approval = false;\r\n            let pref3Approval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1Approval = pref1.approval.admin;\r\n              pref2Approval = pref2.approval.admin;\r\n              pref3Approval = pref3.approval.admin;\r\n            }\r\n\r\n            if (\r\n              !pref1Approval &&\r\n              !pref2Approval &&\r\n              !pref3Approval &&\r\n              Group.proposals.length !== 0\r\n            ) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n\r\n            if (Group.proposals.length === 0) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid\r\n                      container\r\n                      spacing={3}\r\n                      style={{ width: \"100%\", padding: \"auto\" }}\r\n                    >\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Typography>\r\n                          <b>Due Date for Submitting Proposals:</b>\r\n                          &nbsp;&nbsp;\r\n                          {DueDate}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </React.Fragment>\r\n    // <Typography>HELLO</Typography>\r\n  );\r\n};\r\n\r\nexport default HodProjectList;\r\n","import React, { Component } from \"react\";\r\nimport { withStyles, LinearProgress } from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport HodProjectList from \"./HodProjectList\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\n\r\nlet userInfo = [];\r\nlet Groups = null;\r\nlet academicYear=\"\"\r\nlet Ad = null;\r\nlet filled = false;\r\n\r\nclass HodContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      adData: null,\r\n      filled\r\n    };\r\n  }\r\n\r\n  getGroup = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        academicYear=Groups[0].acadYear\r\n        //console.log(academicYear);\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.adData === null) {\r\n      this.getGroup();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n    //console.log(userInfo);\r\n    if (this.state.filled) {\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n              <HodProjectList Groups={Groups} Designation={userInfo.type}/>\r\n            </div>\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(HodContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport HodContent from \"../components/Hod-component/HodContent\";\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"hod\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    //groups = this.state.Groups;\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"hod\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <LoggedNavbar />\r\n            <HodContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Typography, CircularProgress, Grid, Paper, Box, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo1:{\r\n        textAlign:\"left\",\r\n        fontWeight:\"Medium\"\r\n    },\r\n    typo2:{\r\n        textAllign:\"right\",\r\n        fontWeight:\"Light\"\r\n    }\r\n}))\r\n\r\nconst THEME = createMuiTheme(\r\n    {\r\n        typography: {\r\n          fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n          ].join(','),\r\n        },\r\n    }\r\n)\r\n\r\nconst HodCommentPage = (props) => {\r\n    const classes = useStyles();\r\n    const comments=props.Comments;\r\n    //console.log(comments);\r\n    if(comments.length === 0){\r\n        console.log(comments.length);\r\n        return(\r\n            <React.Fragment>\r\n                <Typography variant=\"h4\">No comments have been added</Typography>\r\n            </React.Fragment>\r\n        )\r\n    }else{\r\n        return(\r\n            <ThemeProvider theme={THEME}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                <Paper style={{boxShadow:\"0 2px 4px rgba(0,0,0,.1), 0 8px 16px rgba(0,0,0,.1)\",backgroundColor:\"#fff\",borderRadius:\"0px\", marginTop : \"50px\",marginBottom:\"50px\"}}>\r\n                    <Paper style={{borderRadius:\"0\"}}>\r\n                        {/* <Typography style={{fontWeight:\"bold\"}} variant=\"h4\">\r\n                            Your Previous Comments\r\n                        </Typography> */}\r\n                        <Typography variant=\"h3\" style={{fontWeight:\"500\"}}>\r\n                            Previous Comments\r\n                        </Typography>\r\n                    </Paper>\r\n                    {comments.slice(0).reverse().map(comment => {\r\n                        let d = new Date(comment.time);\r\n                        //comment.time = new Date(d.getTime() + 330*60000);\r\n                        // console.log(d)\r\n                        // console.log(comment.time)\r\n                        let author=comment.author;\r\n                        // if(author.includes(\"admin\"))\r\n                        return(\r\n                            <React.Fragment key={comment._id}>\r\n                                <Paper style={{borderRadius:\"0\"}}>\r\n                                    <Grid container style={{margin:\"auto\",marginTop:\"5px\",marginBottom:\"5px\"}} spacing={2}>\r\n                                        <Grid className={classes.typo1} item xs={8}>\r\n                                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                                            <Typography style={{fontWeight:\"400\",fontSize:20,fontStyle:\"Arial\"}}>\r\n                                                Author : {comment.author}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid className={classes.typo2} item xs={2}>\r\n                                            {/* <Typography style={{fontSize:\"12px\",fontWeight:\"300\"}}>\r\n                                                Time : {comment.time}\r\n                                            </Typography> */}\r\n                                            <Typography style={{fontWeight:\"200\",fontSize:14,fontStyle:\"Roboto\"}}>\r\n                                                Date : {d.toString().substr(4,12)}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid className={classes.typo2} item xs={2}>\r\n                                            <Typography style={{fontWeight:\"200\",fontSize:14,fontStyle:\"Helvetica Neue\"}}>\r\n                                                Time : {d.toString().slice(15,24)}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid className={classes.typo1} item xs={12}>\r\n                                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                                            <Typography style={{fontWeight:\"400\",fontSize:20,fontStyle:\"Arial\"}}>\r\n                                                Comment : {comment.text}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        \r\n                                    </Grid>\r\n                                </Paper>\r\n                            </React.Fragment>\r\n                        );\r\n                    // }else{return null}\r\n                    })}\r\n                </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n \r\nexport default HodCommentPage;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport HodCommentPage from \"./HodCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  }\r\n});\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false,\r\n    };\r\n  }\r\n  \r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState(\r\n      {\r\n        comment: comment\r\n      },\r\n      // function () {\r\n      //   console.log(this.state.comment);\r\n      // }\r\n    );\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    })\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if(comment===\"\"){\r\n      this.setState({\r\n        openFailure:true\r\n      })\r\n    }else{\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n           Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n          \r\n        }\r\n      })\r\n      .then(response => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        console.log(response);\r\n        this.setState({\r\n          comment:\"\",\r\n          adData: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        console.log(Groups);\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Comments =group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      return (\r\n                        <Accordion key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Details:&nbsp;&nbsp;</b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Method:&nbsp;&nbsp;</b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Requirements:&nbsp;&nbsp;</b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {proposal.applied}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Attached Print:&nbsp;&nbsp;</b>\r\n                                  {proposal.attachPrints}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `http://localhost:8000/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <Grid container className={classes.comment}>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comTitle}\r\n                      >\r\n                        <Typography>\r\n                          <b>Add Comments:</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={6}>\r\n                        <TextField\r\n                          className={classes.comField}\r\n                          variant=\"outlined\"\r\n                          component={\"span\"}\r\n                          multiline\r\n                          inputProps={{ style: { fontSize: 14 } }}\r\n                          rows={3}\r\n                          id=\"comment\"\r\n                          name=\"comment\"\r\n                          type=\"text\"\r\n                          value={this.state.comment}\r\n                          onChange={this.commentHandler}\r\n                        />\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={12}\r\n                        md={3}\r\n                        className={classes.comButton}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            this.sendComment(Gid);\r\n                          }}\r\n                        >\r\n                          Send Comment\r\n                        </Button>\r\n                        <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Successful comment\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Unsuccessful. Comment cannot be empty\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={12} md={12}>\r\n                        <HodCommentPage Comments={Comments}/>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from 'react'\r\nimport SideMenu from './SideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nexport default class AdminGuidePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      groupDetails:null\r\n      };\r\n  }\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res.data)\r\n        this.setState({\r\n          groupDetails:res.data\r\n          \r\n        },console.log(this.state.groupDetails));\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n      \r\n  }\r\n  render() {\r\n    if (this.state.groupDetails === null){\r\n      this.checkData();\r\n    } \r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n         <SideMenu/>\r\n        <h1>GROUPS</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport SideMenu from './SideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nexport default class AdminGuidePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      groupDetails:null\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n         <SideMenu/>\r\n        <h1>GUIDES</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport SideMenu from './SideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nexport default class AdminGuidePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n         <SideMenu/>\r\n        <h1>ARCHIVES</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\n\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '1.5rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '2rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    width: \"90%\",\r\n    textAlign: \"left\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"30px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"1px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function GuideDetails(props) {\r\n  const classes = useStyles();\r\n  const userInfo = props;\r\n  //const academicYear=props.academicYear;\r\n  console.log(props)\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <ThemeProvider theme={theme}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={1}>\r\n              <AccountBoxRoundedIcon style={{ fontSize: 50 }} />\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n              <Typography variant=\"h3\" style={{ fontWeight: \"600\", paddingBottom:\"20px\", }}>\r\n                User Details -\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </ThemeProvider>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Name:</b> {userInfo.userInfo.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Designation:</b> {userInfo.userInfo.type}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b> Department:</b> {userInfo.userInfo.department}\r\n              </Typography>\r\n            </Grid>            \r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.title}>\r\n                <b>Email:</b> {userInfo.userInfo.email}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React,{Component} from 'react';\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Accordion, AccordionDetails, AccordionSummary, Button, CircularProgress, Grid, makeStyles, Typography, useTheme } from '@material-ui/core';\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nlet Ad=null;\r\nlet Groups=null;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: \"100%\"\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(16),\r\n      fontWeight: \"600\",\r\n      flexBasis: \"33.33%\",\r\n      flexShrink: 0\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(16),\r\n      color: theme.palette.text.secondary\r\n    },\r\n    accor: {\r\n      width: \"100%\",\r\n      margin: \"auto\"\r\n    },\r\n    accordet: {\r\n      width: \"100%\",\r\n      margin: \"auto\"\r\n    }\r\n  }));\r\n\r\nconst GuideGroupList = (props) => {\r\n    const [adData,setAdData] = React.useState(null);\r\n    const [filled,setFilled] = React.useState(false)\r\n    const histor = useHistory();\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [loading,setLoading] = React.useState(false);\r\n    const theme = useTheme();\r\n\r\n    function checkData() {\r\n        setLoading(true);\r\n        axios({\r\n        method: \"get\",\r\n        url: SERVER_URL + \"/getStudents?by=group\",\r\n        withCredentials: true,\r\n        headers : {\r\n            Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n        }\r\n        })\r\n        .then(res => {\r\n            Ad = res.data.length;\r\n            Groups = res.data;\r\n            setAdData(\"new\");\r\n            setFilled(true);\r\n            setLoading(false);\r\n        })\r\n    \r\n        .catch(function (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n        });\r\n    }\r\n    \r\n    //accordion handleChange\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    if(loading){\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    if(adData===null){\r\n        checkData();\r\n        return null\r\n    }\r\n    if(filled)\r\n    {\r\n        console.log(Groups);\r\n        return(\r\n            <React.Fragment >\r\n                {Groups.map(Group => {\r\n                    const routeChange = () => {\r\n                        histor.push({\r\n                        pathname: `/admin/prefs/${id}`,\r\n                        state: { Group: Group }\r\n                        });\r\n                    };\r\n                    let DueDate = Group.dueDate.split(\"T\")[0];\r\n                    let members = Group.members;\r\n                    let Gname = Group.name;\r\n                    let id = Group.id;\r\n                    let pref1 = [];\r\n                    let pref2 = [];\r\n                    let pref3 = [];\r\n                    let AppliedOn = null;\r\n\r\n                    if (Group.proposals.length !== 0) {\r\n                        pref1 = Group.proposals[0];\r\n                        pref2 = Group.proposals[1];\r\n                        pref3 = Group.proposals[2];\r\n\r\n                        AppliedOn = pref1.applied.split(\"T\")[0];\r\n                        //console.log(AppliedOn, DueDate);\r\n                    }\r\n                    let userInfo=props.userInfo;\r\n                    if (Group.guide.name===userInfo.name) {\r\n                        return (\r\n                        <Accordion\r\n                            style={{\r\n                                width: \"90%\",\r\n                                margin: \"auto\",\r\n                                textAlign: \"left\",\r\n                                marginTop: \"50px\",\r\n                                boxShadow:\r\n                                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                            }}\r\n                            expanded={expanded === Gname}\r\n                            onChange={handleChange(Gname)}\r\n                            className={classes.accor}\r\n                            key={Group.name}\r\n                        >\r\n                            <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                            >\r\n                            <Typography className={classes.heading}>\r\n                                {toFirstCharUppercase(Group.name)}\r\n                            </Typography>\r\n                            {members.map(member => {\r\n                                return (\r\n                                <Typography\r\n                                    key={member.name}\r\n                                    className={classes.secondaryHeading}\r\n                                >\r\n                                    {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                </Typography>\r\n                                );\r\n                            })}\r\n                            </AccordionSummary>\r\n                            <AccordionDetails className={classes.accordet}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={4}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12}>\r\n                                    <Typography style={{ fontWeight: \"600\" }}>\r\n                                        Name\r\n                                    </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                    {members.map(member => {\r\n                                        return <Typography key={member.email}>{member.name}</Typography>;\r\n                                    })}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12}>\r\n                                    <Typography style={{ fontWeight: \"600\" }}>\r\n                                        Email\r\n                                    </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                    {members.map(member => {\r\n                                        return <Typography key={member.email}>{member.email}</Typography>;\r\n                                    })}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={3}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12}>\r\n                                    <Typography style={{ fontWeight: \"600\" }}>\r\n                                        Roll no\r\n                                    </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                    {members.map(member => {\r\n                                        return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                    })}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                {DueDate >= AppliedOn ? (\r\n                                    <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                    Proposals Submitted On Time\r\n                                    </Typography>\r\n                                ) : (\r\n                                    <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                    Proposals Submitted LATE\r\n                                    </Typography>\r\n                                )}\r\n                                </Grid>\r\n                                <Grid item container xs={12}>\r\n                                {Group.proposals.length === 3 ? (\r\n                                    <React.Fragment>\r\n                                        <Grid item xs={3}>\r\n                                            <Button\r\n                                            onClick={routeChange}\r\n                                            variant=\"outlined\"\r\n                                            color=\"primary\"\r\n                                            >\r\n                                            Show Preferences\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </React.Fragment>\r\n                                ) : (\r\n                                    <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                        <Typography>Preferences not filled</Typography>\r\n                                    </Button>\r\n                                )}\r\n                                </Grid>\r\n                            </Grid>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                        );\r\n                    }\r\n                    return null;\r\n                    })}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n}\r\n \r\n \r\nexport default GuideGroupList;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport GuideDetails from \"../components/Guide Component/GuideDetail\"\r\nimport GuideGroupList from \"../components/Guide Component/GroupList\";\r\n\r\n\r\nlet Groups=null;\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"guide\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"guide\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <LoggedNavbar />\r\n            <GuideDetails userInfo={this.state.user} />\r\n            <h1>GUIDE PAGE!</h1>\r\n            <GuideGroupList userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Admin from \"./Pages/Admin\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport Logout from \"./Pages/Logout\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Student from \"./Pages/Student\";\r\nimport Yami from \"./Pages/Yami\";\r\nimport Faculty from \"./Pages/Faculty\";\r\nimport ChangePassword from \"./components/ChangePassword/ChangePassword\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport PrefPage from \"./Pages/PrefPage\";\r\nimport Hod from \"./Pages/Hod\";\r\nimport HodPrefPage from \"./components/Hod-component/HodPrefPage\";\r\nimport AdminGroupsPage from \"./components/Admin-component/AdminGroupsPage\";\r\nimport AdminGuidePage from \"./components/Admin-component/AdminGuidePage\";\r\nimport AdminArchives from \"./components/Admin-component/AdminArchives\"\r\nimport Guide from \"./Pages/Guide\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/admin\" exact component={Admin} />\r\n        <Route path=\"/hod\" exact component={Hod} />\r\n        <Route path=\"/logout\" exact component={Logout} />\r\n        <Route path=\"/faculty\" exact component={Faculty} />\r\n        <Route path=\"/student\" exact component={Student} />\r\n        <Route path=\"/yami\" exact component={Yami} />\r\n        <Route path=\"/guide\" exact component={Guide}/>\r\n        <Route path=\"/cp@2707user\" exact component={ChangePassword} />\r\n        <Route path=\"/admin/prefs/:id\" exact component={PrefPage} />\r\n        <Route path=\"/hod/prefs/:id\" exact component={HodPrefPage} />\r\n        <Route path=\"/admin/groups\" exact component={AdminGroupsPage}/>\r\n        <Route path=\"/admin/guides\" exact component={AdminGuidePage}/>\r\n        <Route path=\"/admin/archives\" exact component={AdminArchives}/>\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.register();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}