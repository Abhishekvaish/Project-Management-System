{"version":3,"sources":["components/Admin-component/sample.PNG","Pages/URL.js","components/Navbar/MenuAppBar.js","components/Navbar/LoggedNavbar.js","components/Admin-component/AdminInstructions.js","components/Footer/Footer.js","components/Profile.js","components/ToUpper.js","components/Admin-component/ProjectList.js","components/Admin-component/SideMenu.js","components/Admin-component/AdminContent.js","Pages/Admin.js","Pages/Login/Login.js","Pages/Logout.js","components/Student-component/StudentContent.js","components/Student-component/studentHomePage.js","components/Student-component/StudentCommentPage.js","components/Student-component/StudentPresentation.js","components/Student-component/StudentWeeklyLog.js","components/Student-component/studentWholePage.js","Pages/Student.js","components/Yami-component/YamiContent.js","Pages/Yami.js","context/projectcontext.js","components/verification/projectdetails.js","components/verification/projectlist.js","components/Faculty-component/FacultyContent.js","Pages/Faculty.js","components/ChangePassword/ChangePassword.js","components/NotFound.js","components/Navbar/Navbar.js","components/Admin-component/AdminCommentPage.js","Pages/PrefPage.js","components/Hod-component/HodProjectList.js","components/Hod-component/HodSideMenu.js","components/Hod-component/HodContent.js","Pages/Hod.js","components/Hod-component/HodCommentPage.js","components/Hod-component/HodPrefPage.js","components/Admin-component/AdminGroupsPage.js","components/Admin-component/AdminGuidePage.js","components/Admin-component/AdminArchives.js","components/Guide Component/GroupList.js","Pages/Guide.js","components/Guide Component/GuidePrefPage.js","Pages/forgetPassword.js","Pages/resetPassword.js","components/Hod-component/HodGroupsPage.js","App.js","serviceWorker.js","index.js","Pages/Login/background2.jpg"],"names":["module","exports","SERVER_URL","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","profIcon","breakpoints","up","display","navMenu","down","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleMenu","event","currentTarget","handleClose","pres_url","window","location","href","console","log","className","AppBar","position","style","backgroundColor","Toolbar","to","textDecoration","color","Button","variant","Typography","IconButton","aria-label","aria-controls","aria-haspopup","onClick","fontSize","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","startIcon","marginLeft","starticon","LoggedNavbar","props","state","Fragment","Component","width","padding","letterSpacing","marginBottom","image","pos","Profile","Card","boxShadow","borderRadius","CardContent","fontWeight","fontFamily","src","Image","alt","paddingTop","rootItems","foot","margin","footEnd","Footer","Grid","container","item","xs","sm","target","Date","getFullYear","createMuiTheme","typography","h3","minWidth","marginTop","icon","userInfo","academicYear","ThemeProvider","md","name","type","department","email","toFirstCharUppercase","charAt","toUpperCase","slice","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","component","a11yProps","heading","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","accor","accordet","dueDateContainer","downloadButton","float","ControlledAccordions","Groups","dueDate","Guides","histor","useHistory","expanded","setExpanded","useTheme","setValue","assignLoading","setAssignLoading","guide","setGuide","guideE","setGuideE","changeDuedate","setDueDate","DueDateOpen","setDOpen","downLoading","setDownLoading","SdownLoading","setSDownLoading","showButton","handleGuideChange","e","map","Guide","appendLeadingZeroes","n","handleChangeDueDateDialogClose","handleChange","panel","isExpanded","length","Dialog","DialogTitle","DialogContent","DialogContentText","utils","DateFnsUtils","autoOk","required","inputVariant","format","onChange","date","current_datetime","formatted_date","getMonth","getDate","InputAdornmentProps","DialogActions","axios","method","url","credentials","withCredentials","data","qs","stringify","headers","Authorization","localStorage","getItem","then","res","reload","catch","err","alert","split","Tabs","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","Group","DueDate","members","Gname","pref1","pref2","pref3","AppliedOn","pref1AdminApproval","pref2AdminApproval","pref3AdminApproval","pref1HodApproval","pref2HodApproval","pref3HodApproval","proposals","applied","approval","admin","hod","Accordion","key","AccordionSummary","expandIcon","member","AccordionDetails","rollno","push","pathname","TextField","size","select","helperText","CircularProgress","groupId","assignGuide","handleChangeGuide","disabled","maxWidth","maxHeight","responseType","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","pref1Approval","pref2Approval","pref3Approval","LinearProgress","ButtonStyle","cursor","SideMenu","top","left","bottom","right","setState","itemsList","toggleDrawer","anchor","Drawer","clsx","list","fullList","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","tempDate","Alert","elevation","Ad","a","academicYearList","AdminContent","handleDateChange","prefDueDate","handleAcademicYear","Academicyear","hodHandler","hodNameHandler","hodName","reason","openSuccess","openFailure","adData","submitHandler","preventDefault","formData","FormData","append","student_file","loading","fileValidation","fileInput","getElementById","filePath","exec","files","filled","this","checkData","checkGuides","onSubmit","gridField","InputTitle","Inputfield","autoFocus","FormControl","Select","Input","alignItems","submit","Snackbar","autoHideDuration","severity","footer","withStyles","flexDirection","minHeight","main","paper","pape","form","fields","border","paddingLeft","Admin","getStat","loggedIn","user","removeItem","Data","data_access","today","Login","username","password","msg","invalidCredentials","getResponse","bind","submitForm","response","access_token","setItem","token","exact","leftpaper","Container","CssBaseline","Avatar","avatar","fullWidth","autoComplete","background","backgroundImage","backgroundSize","height","Logout","responsiveFontSizes","stuData","Stu","Proposals","StudentContent","handleClickOpen","handleAgreeClickClose","handleCancelClickClose","tabValue","handleTopChange","pn","prefs","preferences","i","Top","handleDosChange","Dos","handleDsopChange","cs","Dsop","handleAgencyChange","Agency","handleMtapChange","Mtap","handleRedChange","Red","handleShrChange","Shr","handleFileChange","selectedFile","handleClick","currentStep","handleSubmit","specialization","details","agency","result","requirements","JSON","_next","_prev","handleNext","prefno","formFilled","Step1","Step2","previousButton","Step3","handleClickClose","aria-describedby","largeWinTabs","centered","tabPanel","typographyFilled","attachPrints","smallWinTabs","scrollButtons","multiline","inputProps","rows","buttonprop","borderTop","tableContainer","table","propF","fill","StudentHomePage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","_id","proposal","approved","propTitle","propApproved","typo","StudentCommentPage","comments","comment","dt","time","author","getHours","getMinutes","Presentations","StudentPresentation","presentation","sort","b","scheduled_date","getTime","Presentation","orgMarks","subKnowMarks","EODMarks","timeMarks","now","StudentWeeklyLog","weeklyMeetLog","wML","remark","vert_tab_grid","borderRight","divider","hor_tab_grid","borderBottom","large_win_tabs","small_win_tabs","StudentWholePage","obtained","setObtained","setAcademicYear","reqSent","setReqSent","acadYear","orientation","tab","YamiContent","mailHandler","mail","nameHandler","deptHandler","dept","noValidate","InputLabel","deptLabel","Yami","ProjectContext","createContext","ProjectContextProvider","projects","isapproved","Approve","project","addComment","Provider","ProjectDetails","aboutProps","ProjectList","useContext","FacultyContent","ChangePassword","pushPassword","newPassword","confirmPassword","newpasswordHandler","confirmpasswordHandler","helptext","NotFound","backButton","buttonContainer","Navbar","history","back","typo1","typo2","textAllign","THEME","join","AdminCommentPage","Comments","reverse","d","fontStyle","toString","substr","ControlledExpansionPanels","commentHandler","handleApprove","pid","Gid","group","Proposal1","Proposal2","Proposal3","grid","appliedDate","content","comTitle","comField","comButton","sendComment","HodProjectList","Designation","HodContent","getGroup","Hod","HodCommentPage","days","HodPrefPage","getDay","marks","Groupid","deleteMemberEmail","groupData","AdminGroupsPage","handleDeleteMemberDialogOpen","deleteMemberOpen","handleDeleteMemberDialogClose","handleDeleteMember","gid","handleDeleteProposalsDialogClose","deleteProposalsOpen","handleDeleteProposals","handleDeleteAllUser","deleteAllUserDialog","handleArchieve","archive","archiveSuccess","handleAddMemberDialogOpen","gname","addMemberOpen","handleAddMemberDialogClose","handleMemberNameChange","memberName","handleMemberEmailChange","memberEmail","handleMemberRollnoChange","memberRollno","handleAddMember","groupName","addHodOpen","handleChildClick","stopPropagation","groupDetails","mainAccorContainer","endIcon","proposal1Stat","proposal2Stat","proposal3Stat","mainAccor","accorStyle","groupCard","dmemberEmail","deleteIconStyle","handleDeleteProposalsDialogOpen","presCard","pres","memberHolder","dguideId","dguideEmail","dguideName","checkHod","dHodId","guideData","AdminGuidePage","handleDeleteHodDialogOpen","deleteHodOpen","handleDeleteHodDialogClose","handleDeleteHod","handleAddHodDialogOpen","handleAddHodDialogClose","handleHodNameChange","handleHodEmailChange","hodEmail","handleAddHod","Open","handleCloseCancel","handleCloseSubmit","Loading","guideName","guideEmail","handleDeleteDialogOpen","deleteOpen","handleDeleteDialogClose","handleDeleteGuide","handleGNameChange","handleGEmailChange","getGuide","guideDetails","mHodContainer","guideListHolder","guideList","fontWeightRegular","dArchiveId","archData","AdminArchives","handleDeleteArchiveDialogOpen","deleteDialogOpen","handleDeleteArchiveDialogClose","handleDeleteArchive","getArchive","archiveData","archId","groups","GuideGroupList","setAdData","setFilled","setLoading","handleBibliography","bibliography","handleProbStatement","probStatement","handleConcept","concept","handleSpellAndGrammar","spellAndGrammar","handleOrgAndWriting","orgAndWriting","handleEngTheoryAnaly","enggTheoryAnaly","handleDiagram","diagram","handleTeamWork","teamWork","handlePMF","pmf","handleInnovation","innovation","handleReportSubmit","biblogrpahy","diagrams","handleDeleteReport","weeklyMsgHandler","message","weeklyLogMsg","handleweelyDateChange","weeklyLogDate","sendLog","deleteLog","wid","handleImplementationSubmit","probStatment","teamwork","handleDeleteImplementation","sche_pres","dateTime","scheduleLoading","datetime","toISOString","handleDateTimeChange","handleMarkSubmit","groupID","presentationID","parseInt","eodMarks","totalMarks","handleOrgMarks","handleSubKnowMarks","handleTimeMarks","handleEodMarks","handleDeletePresentation","PID","GID","match","params","weeklyLog","implementation","report","defaultValue","textField","InputLabelProps","shrink","forgetPassword","openInfo","resetPassword","openSuccees","done","HodgroupsPage","setUser","setGroupDetails","App","path","Faculty","Student","PrefPage","GuidePrefPage","HodGroupsPage","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","register","error"],"mappings":"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","file":"static/js/main.cb6a84c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.fcf68321.PNG\";","var SERVER_URL  = \"\"\r\nif (process.env.NODE_ENV === \"production\")\r\n\tSERVER_URL = \"\";\r\nelse\t\r\n\tSERVER_URL = \"http://127.0.0.1:8000\";\r\nexport default SERVER_URL;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const pres_url = window.location.href;\r\n  if(pres_url===\"http://localhost:3000/cp@2707user\"||pres_url===`${SERVER_URL}/cp@2707user`){\r\n    console.log(\"HELLO\")\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n          <Toolbar>\r\n            <Link\r\n              to=\"/\"\r\n              style={{ textDecoration: \"none\", color: \"#000\", marginRight:\"5px\" }}\r\n            >\r\n              <Button color=\"inherit\" variant=\"contained\">\r\n                <ArrowBackRoundedIcon />\r\n              </Button>\r\n            </Link>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              Project Management System\r\n            </Typography>\r\n            {auth && (\r\n              <div className={classes.profIcon}>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\t\r\n                  onClick={handleMenu}\t\r\n                  color=\"inherit\"\t\r\n                >\t\r\n                  <AccountCircle style={{ fontSize: 40 }} />\t\r\n                </IconButton>\t\r\n                <Menu\t\r\n                  id=\"menu-appbar\"\t\r\n                  anchorEl={anchorEl}\t\r\n                  anchorOrigin={{\t\r\n                    vertical: \"top\",\t\r\n                    horizontal: \"right\"\t\r\n                  }}\t\r\n                  keepMounted\t\r\n                  transformOrigin={{\t\r\n                    vertical: \"top\",\t\r\n                    horizontal: \"right\"\t\r\n                  }}\t\r\n                  open={open}\t\r\n                  onClose={handleClose}\t\r\n                >\t\r\n                  <MenuItem onClick={handleClose}>\t\r\n                    <Link\t\r\n                      to=\"/cp@2707user\"\t\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n                    >\t\r\n                      Change Password\t\r\n                    </Link>\t\r\n                  </MenuItem>\t\r\n                  <MenuItem onClick={handleClose}>\t\r\n                    <Link\t\r\n                      to=\"/logout\"\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n                    >\t\r\n                      Logout\t\r\n                    </Link>\t\r\n                  </MenuItem>\t\r\n                </Menu>\t\r\n              </div>\t\r\n            )}\t\r\n            <Link\t\r\n              to=\"/cp@2707user\"\t\r\n              className={classes.navMenu}\t\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n            >\t\r\n              <Button\t\r\n                color=\"inherit\"\r\n                variant=\"contained\"\t\r\n                startIcon={<AssignmentIndIcon />}\t\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Link>\r\n            <Link\r\n              to=\"/logout\"\r\n              className={classes.navMenu}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                startIcon={<ExitToAppIcon />}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }else{\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n          <Toolbar>\r\n            <Typography variant=\"h5\" className={classes.title}>\r\n              Project Management System\r\n            </Typography>\r\n            {auth && (\r\n              <div className={classes.profIcon}>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle style={{ fontSize: 40 }} />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\t\r\n                  anchorOrigin={{\t\r\n                    vertical: \"top\",\t\r\n                    horizontal: \"right\"\t\r\n                  }}\t\r\n                  keepMounted\t\r\n                  transformOrigin={{\t\r\n                    vertical: \"top\",\t\r\n                    horizontal: \"right\"\t\r\n                  }}\t\r\n                  open={open}\t\r\n                  onClose={handleClose}\t\r\n                >\t\r\n                  <MenuItem onClick={handleClose}>\t\r\n                    <Link\t\r\n                      to=\"/cp@2707user\"\t\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n                    >\t\r\n                      Change Password\t\r\n                    </Link>\t\r\n                  </MenuItem>\t\r\n                  <MenuItem onClick={handleClose}>\t\r\n                    <Link\t\r\n                      to=\"/logout\"\r\n                      style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n                    >\t\r\n                      Logout\t\r\n                    </Link>\t\r\n                  </MenuItem>\t\r\n                </Menu>\t\r\n              </div>\t\r\n            )}\t\r\n            <Link\t\r\n              to=\"/cp@2707user\"\t\r\n              className={classes.navMenu}\t\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\t\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\r\n                startIcon={<AssignmentIndIcon />}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Link>\r\n            <Link\r\n              to=\"/logout\"\r\n              className={classes.navMenu}\r\n              style={{ textDecoration: \"none\", color: \"#000\" }}\r\n              starticon={<ExitToAppIcon />}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                variant=\"contained\"\t\r\n                style={{ marginLeft: \"20px\" }}\t\r\n                startIcon={<ExitToAppIcon />}\r\n              >\r\n                Logout\r\n              </Button>\t\r\n            </Link>\t\r\n          </Toolbar>\t\r\n        </AppBar>\t\r\n      </div>\t\r\n    );\t\r\n  }  \r\n}\r\n","import React, { Component } from \"react\";\r\nimport MenuAppBar from \"./MenuAppBar\";\r\n\r\nclass LoggedNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <MenuAppBar />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedNavbar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Image from \"./sample.PNG\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textAlign: \"left\",\r\n    width: \"87%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: \"20px\",\r\n    \"borderLeftColor\": \"blue\",\r\n    \"border-left-style\": \"solid\",\r\n    \"border-left-width\": \"10px\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"20px\",\r\n    letterSpacing: \"1px\",\r\n    marginBottom:\"3px\"\r\n  },\r\n  image:{\r\n    [theme.breakpoints.up(\"md\")]:{\r\n      marginLeft:\"20%\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n      width:\"95%\"\r\n    }\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h4\" style={{ fontWeight: \"600\",fontFamily:\"sans-serif\",marginBottom:\"10px\" }}>\r\n          Instructions -\r\n        </Typography>\r\n\r\n        \r\n        <Typography className={classes.title}>\r\n          1. Please fill the below form to create project list of your department          \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          2. Project list file should be of <b>.csv</b>  or <b>.xlsx</b> format          \r\n        </Typography>\r\n        <Typography className={classes.title}>\r\n          3. The first row of the file should be <b>name,rollno,email,group_name </b>\r\n             actual values should start from second row \r\n        </Typography><br/>\r\n        <img src={Image} className ={classes.image} alt=\"sample\"/><br/>\r\n        <Typography className={classes.title}>\r\n          4. On submitting the form you will create a list mentioned in the file\r\n          and will give authorities to emails mentioned by you\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport \"./Footer.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: \"#333\",\r\n    color: \"#fff\",\r\n    paddingTop: \"20px\"\r\n  },\r\n  rootItems: {\r\n    padding: \"8px\"\r\n  },\r\n  foot: {\r\n    margin: \"auto\"\r\n  },\r\n  footEnd: {\r\n    padding: \"15px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#222\",\r\n    margin: \"0\"\r\n  }\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <footer>\r\n        <Grid container className={classes.root}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography><a style={{color:\"#fff\"}} target=\"blank\" href=\"/about.html\"> About</a></Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms And Conditions</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>Terms of Use</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <BusinessIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>\r\n                  K.J.Somaiya Institute Of Engineering And Information\r\n                  Technology\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography> Sion,Mumbai</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <ContactMailIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>abcd@gmail.com</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} className={classes.rootItems}>\r\n                <Typography>36326623966996</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.footEnd}>\r\n            <Typography>\r\n              &copy;{new Date().getFullYear()} KJSIEIT,Inc. All Rights Reserved.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\nconst theme = createMuiTheme();\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '1.5rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '2rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: 275,\r\n    width: \"90%\",\r\n    textAlign: \"left\",\r\n    marginTop: \"50px\",\r\n    marginBottom: \"30px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {}\r\n  },\r\n  title: {\r\n    fontSize: \"16px\",\r\n    letterSpacing: \"1px\",\r\n    fontFamily:\"sans-serif\",\r\n    marginTop:\"5px\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  icon : {\r\n    fontSize: \"7rem\",\r\n    color:\"powderblue\"\r\n  }\r\n}));\r\n\r\nexport default function Profile(props) {\r\n  const classes = useStyles();\r\n  const userInfo = props;\r\n  const academicYear=props.academicYear;\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"0px\"\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <ThemeProvider theme={theme}>\r\n          <Grid container >\r\n            <Grid item xs={12} sm={2}>\r\n              <AccountBoxRoundedIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs={12} sm ={10}>\r\n                <br/>\r\n                <Grid container >\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Name:</b> {userInfo.userInfo.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Designation:</b> {userInfo.userInfo.type}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b> Department:</b> {userInfo.userInfo.department}\r\n                      </Typography>\r\n                    </Grid>            \r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      <Typography className={classes.title}>\r\n                        <b>Email:</b> {userInfo.userInfo.email}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                      {academicYear!==null?(\r\n                        <Typography className={classes.title}>\r\n                          <b>Academic Year:</b> {academicYear}\r\n                        </Typography>\r\n                      ):(null)}\r\n                    </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </ThemeProvider>\r\n          \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","export const toFirstCharUppercase = name =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {\r\n  CircularProgress,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  LinearProgress,\r\n  MenuItem,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport CloudDownload from \"@material-ui/icons/CloudDownload\";\r\n// import FileDownload from \"@material-ui/icons/FileDownload\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  dueDateContainer: {\r\n    borderRadius: \"0px\"\r\n  },\r\n  downloadButton: {\r\n    float: \"right\",\r\n    marginTop: \"5%\",\r\n    marginBottom: \"10px\"\r\n  }\r\n}));\r\n\r\n// let Guides = null;\r\n\r\nexport default function ControlledAccordions(props) {\r\n  let Groups = props.Groups;\r\n  let dueDate = Groups[0].dueDate;\r\n  let Guides = props.Guides;\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n  const [assignLoading, setAssignLoading] = React.useState(false);\r\n  const [guide, setGuide] = React.useState(null);\r\n  const [guideE, setGuideE] = React.useState(null);\r\n  const [changeDuedate, setDueDate] = React.useState(new Date());\r\n  const [DueDateOpen, setDOpen] = React.useState(false);\r\n  const [downLoading, setDownLoading] = React.useState(false);\r\n  const [SdownLoading, setSDownLoading] = React.useState(false);\r\n  let showButton = false;\r\n\r\n  const handleGuideChange = e => {\r\n    setGuide(e.target.value);\r\n    Guides.map(Guide => {\r\n      if (Guide.name === e.target.value) {\r\n        setGuideE(Guide.email);\r\n      }\r\n    });\r\n    return null;\r\n  };\r\n\r\n  //Change DueDate-------------------------------\r\n  //to change format of the month\r\n  const appendLeadingZeroes = n => {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  };\r\n\r\n  //Submission List\r\n  const downloadSubmissionList = () => {\r\n    setSDownLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/submissionList\",\r\n      responseType: \"blob\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        const url = window.URL.createObjectURL(new Blob([res.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", \"Submission List.xlsx\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        setSDownLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setSDownLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const downloadProjectList = () => {\r\n    setDownLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/excel\",\r\n      responseType: \"blob\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        const url = window.URL.createObjectURL(new Blob([res.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", \"Project List.xlsx\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        setDownLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setDownLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChangeDueDateDialogOpen = () => {\r\n    setDOpen(true);\r\n  };\r\n  const handleChangeDueDateDialogClose = () => {\r\n    setDOpen(false);\r\n  };\r\n  const handleChangeDueDate = () => {\r\n    console.log(changeDuedate);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/updateDueDate\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        dueDate: changeDuedate\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Due Changed\");\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        alert(\"DueDate didnt Change\");\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleSetDueDate = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      appendLeadingZeroes(current_datetime.getDate());\r\n    setDueDate(formatted_date);\r\n  };\r\n\r\n  // Assign Guide button\r\n\r\n  const assignGuide = (e, id) => {\r\n    if (guide === null) {\r\n      alert(\"Please select a guide first\");\r\n    } else {\r\n      setAssignLoading(true);\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name: guide,\r\n          email: guideE,\r\n          groupId: id\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          setAssignLoading(false);\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"Guide not assigned\");\r\n          setAssignLoading(false);\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleChangeGuide = id => {\r\n    Groups.map(Group => {\r\n      if (Group.id === id) {\r\n        Group.guide.name = null;\r\n        Group.guide.email = null;\r\n      }\r\n    });\r\n    setGuide(null);\r\n    return null;\r\n  };\r\n\r\n  // Tabs handleChange\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  // SwipeableView index changing\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n  // Accordion handleChange\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // let e={}\r\n\r\n  if (Guides !== null && Guides.length !== 0) {\r\n    if (guide === null) {\r\n      setGuide(Guides[0].name);\r\n      setGuideE(Guides[0].email);\r\n    }\r\n    return (\r\n      <div>\r\n        {/* DIALOG FOR CHANGE DUEDATE */}\r\n        <Dialog\r\n          open={DueDateOpen}\r\n          onClose={handleChangeDueDateDialogClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\" style={{ margin: \"auto 100px\" }}>\r\n            Change DueDate\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>Select a new DueDate</DialogContentText>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                autoOk\r\n                required\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                format=\"yyyy/MM/dd\"\r\n                value={changeDuedate}\r\n                onChange={handleSetDueDate}\r\n                InputAdornmentProps={{ position: \"start\" }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleChangeDueDateDialogClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleChangeDueDate} color=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <div></div>\r\n        {/* DIALOG END */}\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\" color=\"default\">\r\n            <div>\r\n              <Card className={classes.dueDateContainer}>\r\n                <Grid container style={{ padding: \"5px\" }}>\r\n                  <Grid item xs={8} style={{ margin: \"auto\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      &nbsp;&nbsp;\r\n                      <b>\r\n                        DueDate for Submitting Proposals:&nbsp;\r\n                        {dueDate.split(\"T\")[0]}\r\n                      </b>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4} style={{ textAlign: \"right\" }}>\r\n                    <Button\r\n                      onClick={handleChangeDueDateDialogOpen}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Change DueDate\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Card>\r\n            </div>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChangeT}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n            >\r\n              <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n              <Tab label=\"Approval by HOD left\" {...a11yProps(1)} />\r\n              <Tab label=\"Applied\" {...a11yProps(2)} />\r\n              <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n                let pref1AdminApproval = false;\r\n                let pref2AdminApproval = false;\r\n                let pref3AdminApproval = false;\r\n                let pref1HodApproval = false;\r\n                let pref2HodApproval = false;\r\n                let pref3HodApproval = false;\r\n\r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n\r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  //console.log(AppliedOn, DueDate);\r\n                  pref1AdminApproval = pref1.approval.admin;\r\n                  pref2AdminApproval = pref2.approval.admin;\r\n                  pref3AdminApproval = pref3.approval.admin;\r\n                  pref1HodApproval = pref1.approval.hod;\r\n                  pref2HodApproval = pref2.approval.hod;\r\n                  pref3HodApproval = pref3.approval.hod;\r\n                }\r\n\r\n                if (\r\n                  (pref1AdminApproval && pref1HodApproval) ||\r\n                  (pref2AdminApproval && pref2HodApproval) ||\r\n                  (pref3AdminApproval &&\r\n                    pref3HodApproval &&\r\n                    Group.proposals.length !== 0)\r\n                ) {\r\n                  showButton = true;\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography\r\n                                style={{ color: \"green\" }}\r\n                                variant=\"h5\"\r\n                              >\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item container xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <React.Fragment>\r\n                                <Grid item xs={3}>\r\n                                  <Button\r\n                                    onClick={routeChange}\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    Show Preferences\r\n                                  </Button>\r\n                                </Grid>\r\n                                <Grid container item xs={9}>\r\n                                  {Group.guide.name === null ? (\r\n                                    <React.Fragment>\r\n                                      <Grid item xs={5} />\r\n                                      <Grid item xs={3}>\r\n                                        <TextField\r\n                                          size=\"medium\"\r\n                                          id=\"selectGuide\"\r\n                                          select\r\n                                          value={guide}\r\n                                          onChange={handleGuideChange}\r\n                                          helperText=\"Please select Guide\"\r\n                                        >\r\n                                          {Guides.map(Guide => {\r\n                                            return (\r\n                                              <MenuItem\r\n                                                key={Guide.email}\r\n                                                value={Guide.name}\r\n                                              >\r\n                                                {Guide.name}\r\n                                              </MenuItem>\r\n                                            );\r\n                                          })}\r\n                                        </TextField>\r\n                                      </Grid>\r\n                                      <Grid item xs={1} />\r\n                                      <Grid item xs={3}>\r\n                                        {!assignLoading ? (\r\n                                          <Button\r\n                                            style={{ marginRight: \"20px\" }}\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            onClick={e => assignGuide(e, id)}\r\n                                          >\r\n                                            Assign Guide\r\n                                          </Button>\r\n                                        ) : (\r\n                                          <CircularProgress />\r\n                                        )}\r\n                                      </Grid>\r\n                                    </React.Fragment>\r\n                                  ) : (\r\n                                    <React.Fragment>\r\n                                      <Grid item xs={2} />\r\n                                      <Grid item xs={3}>\r\n                                        <Typography\r\n                                          variant=\"h6\"\r\n                                          color=\"secondary\"\r\n                                        >\r\n                                          Guide Assigned:\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                      <Grid item xs={3}>\r\n                                        <Typography\r\n                                          variant=\"h6\"\r\n                                          color=\"secondary\"\r\n                                        >\r\n                                          {Group.guide.name}\r\n                                        </Typography>\r\n                                      </Grid>\r\n                                      <Grid item xs={4}>\r\n                                        <Button\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                          onClick={() => {\r\n                                            handleChangeGuide(id);\r\n                                          }}\r\n                                        >\r\n                                          Change Guide\r\n                                        </Button>\r\n                                      </Grid>\r\n                                    </React.Fragment>\r\n                                  )}\r\n                                </Grid>\r\n                              </React.Fragment>\r\n                            ) : (\r\n                              <Button\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n\r\n              <React.Fragment>\r\n                {/* SUBMISSION LIST BUTTON */}\r\n                {SdownLoading ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.downloadButton}\r\n                    style={{ maxWidth: \"153.24px\", maxHeight: \"40px\" }}\r\n                  >\r\n                    <CircularProgress\r\n                      size=\"2rem\"\r\n                      color=\"white\"\r\n                      style={{ padding: \"0 40px\" }}\r\n                    />\r\n                  </Button>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    {showButton ? (\r\n                      <React.Fragment>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          className={classes.downloadButton}\r\n                          startIcon={<CloudDownload />}\r\n                          onClick={downloadSubmissionList}\r\n                        >\r\n                          Submission List\r\n                        </Button>\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                  </React.Fragment>\r\n                )}\r\n\r\n                {downLoading ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.downloadButton}\r\n                    style={{ maxWidth: \"153.24px\", maxHeight: \"40px\" }}\r\n                  >\r\n                    <CircularProgress\r\n                      size=\"2rem\"\r\n                      color=\"white\"\r\n                      style={{ padding: \"0 40px\" }}\r\n                    />\r\n                  </Button>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    {showButton ? (\r\n                      <React.Fragment>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.downloadButton}\r\n                          startIcon={<CloudDownload />}\r\n                          onClick={downloadProjectList}\r\n                          style={{ marginRight: \"20px\" }}\r\n                        >\r\n                          Project List\r\n                        </Button>\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                  </React.Fragment>\r\n                )}\r\n              </React.Fragment>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n\r\n                let pref1AdminApproval = false;\r\n                let pref2AdminApproval = false;\r\n                let pref3AdminApproval = false;\r\n                let pref1HodApproval = false;\r\n                let pref2HodApproval = false;\r\n                let pref3HodApproval = false;\r\n\r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n\r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  //console.log(DueDate, AppliedOn);\r\n                  pref1AdminApproval = pref1.approval.admin;\r\n                  pref2AdminApproval = pref2.approval.admin;\r\n                  pref3AdminApproval = pref3.approval.admin;\r\n                  pref1HodApproval = pref1.approval.hod;\r\n                  pref2HodApproval = pref2.approval.hod;\r\n                  pref3HodApproval = pref3.approval.hod;\r\n                }\r\n\r\n                if (\r\n                  (pref1AdminApproval && !pref1HodApproval) ||\r\n                  (pref2AdminApproval && !pref2HodApproval) ||\r\n                  (pref3AdminApproval &&\r\n                    !pref3HodApproval &&\r\n                    Group.proposals.length !== 0)\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll-no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography\r\n                                style={{ color: \"green\" }}\r\n                                variant=\"h5\"\r\n                              >\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n                let pref1 = [];\r\n                let pref2 = [];\r\n                let pref3 = [];\r\n                let AppliedOn = null;\r\n                let pref1Approval = false;\r\n                let pref2Approval = false;\r\n                let pref3Approval = false;\r\n\r\n                if (Group.proposals.length !== 0) {\r\n                  pref1 = Group.proposals[0];\r\n                  pref2 = Group.proposals[1];\r\n                  pref3 = Group.proposals[2];\r\n\r\n                  AppliedOn = pref1.applied.split(\"T\")[0];\r\n                  pref1Approval = pref1.approval.admin;\r\n                  pref2Approval = pref2.approval.admin;\r\n                  pref3Approval = pref3.approval.admin;\r\n                }\r\n\r\n                if (\r\n                  !pref1Approval &&\r\n                  !pref2Approval &&\r\n                  !pref3Approval &&\r\n                  Group.proposals.length !== 0\r\n                ) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.name}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.rollno}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {DueDate >= AppliedOn ? (\r\n                              <Typography\r\n                                style={{ color: \"green\" }}\r\n                                variant=\"h5\"\r\n                              >\r\n                                Proposals Submitted On Time\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                Proposals Submitted LATE\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                              >\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={3} dir={theme.direction}>\r\n              {Groups.map(Group => {\r\n                const routeChange = () => {\r\n                  histor.push({\r\n                    pathname: `/admin/prefs/${id}`,\r\n                    state: { Group: Group }\r\n                  });\r\n                };\r\n                let DueDate = Group.dueDate.split(\"T\")[0];\r\n                let members = Group.members;\r\n                let Gname = Group.name;\r\n                let id = Group.id;\r\n\r\n                if (Group.proposals.length === 0) {\r\n                  return (\r\n                    <Accordion\r\n                      expanded={expanded === Gname}\r\n                      onChange={handleChange(Gname)}\r\n                      className={classes.accor}\r\n                      key={Group.name}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          {toFirstCharUppercase(Group.name)}\r\n                        </Typography>\r\n                        {members.map(member => {\r\n                          return (\r\n                            <Typography\r\n                              key={member.name}\r\n                              className={classes.secondaryHeading}\r\n                            >\r\n                              {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            </Typography>\r\n                          );\r\n                        })}\r\n                      </AccordionSummary>\r\n                      <AccordionDetails className={classes.accordet}>\r\n                        <Grid\r\n                          container\r\n                          spacing={3}\r\n                          style={{ width: \"100%\", padding: \"auto\" }}\r\n                        >\r\n                          <Grid item xs={12} sm={4}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Name\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.name}>\r\n                                      {member.name}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={5}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Email\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.email}>\r\n                                      {member.email}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n\r\n                          <Grid item xs={12} sm={3}>\r\n                            <Grid container>\r\n                              <Grid item xs={12}>\r\n                                <Typography style={{ fontWeight: \"600\" }}>\r\n                                  Roll-no\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {members.map(member => {\r\n                                  return (\r\n                                    <Typography key={member.rollno}>\r\n                                      {member.rollno}\r\n                                    </Typography>\r\n                                  );\r\n                                })}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            <Typography>\r\n                              <b>Due Date for Submitting Proposals:</b>\r\n                              &nbsp;&nbsp;\r\n                              {DueDate}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {Group.proposals.length === 3 ? (\r\n                              <div>\r\n                                <Button\r\n                                  onClick={routeChange}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Show Preferences\r\n                                </Button>\r\n                              </div>\r\n                            ) : (\r\n                              <Button variant=\"outlined\" color=\"secondary\">\r\n                                <Typography>Preferences not filled</Typography>\r\n                              </Button>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </TabPanel>\r\n          </SwipeableViews>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <LinearProgress />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    list: {\r\n      width: 250\r\n    },\r\n    fullList: {\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  ButtonStyle: {\r\n    color: \"#000\",\r\n    backgroundColor: \"#e0e0e0\",\r\n    padding: \"0px 5px\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"2px\",\r\n    marginRight: \"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const histor = useHistory();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n  const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => histor.push(\"/admin\")\r\n    },\r\n    {\r\n      text: \"Groups\",\r\n      icon: <PeopleAltIcon />,\r\n      onClick: () => histor.push(\"/admin/groups\")\r\n    },\r\n    {\r\n      text: \"Faculty\",\r\n      icon: <SupervisedUserCircleIcon />,\r\n      onClick: () => histor.push(\"/admin/guides\")\r\n    },\r\n    {\r\n      text: \"Archives\",\r\n      icon: <ArchiveIcon />,\r\n      onClick: () => histor.push(\"/admin/archives\")\r\n    }\r\n  ];\r\n\r\n  const toggleDrawer = (anchor, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = anchor => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <React.Fragment key={index}>\r\n              <ListItem\r\n                button\r\n                key={text}\r\n                onClick={onClick}\r\n                style={{ marginRight: \"40px\" }}\r\n              >\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n              <Divider />\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"left\"].map(anchor => (\r\n        <React.Fragment key={anchor}>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n          <div className={classes.root}>\r\n            <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n              <Toolbar>\r\n                <MenuIcon\r\n                  fontSize=\"large\"\r\n                  onClick={toggleDrawer(anchor, true)}\r\n                  className={classes.ButtonStyle}\r\n                  style={{}}\r\n                />\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                  Project Management System\r\n                </Typography>\r\n                {auth && (\r\n                  <div className={classes.profIcon}>\r\n                    <IconButton\r\n                      aria-label=\"account of current user\"\r\n                      aria-controls=\"menu-appbar\"\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleMenu}\r\n                      color=\"inherit\"\r\n                    >\r\n                      <AccountCircle style={{ fontSize: 40 }} />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"menu-appbar\"\r\n                      anchorEl={anchorEl}\r\n                      anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\"\r\n                      }}\r\n                      keepMounted\r\n                      transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"right\"\r\n                      }}\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                    >\r\n                      <MenuItem onClick={handleClose}>\r\n                        <Link\r\n                          to=\"/cp@2707user\"\r\n                          style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                        >\r\n                          Change Password\r\n                        </Link>\r\n                      </MenuItem>\r\n                      <MenuItem onClick={handleClose}>\r\n                        <Link\r\n                          to=\"/logout\"\r\n                          style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                        >\r\n                          Logout\r\n                        </Link>\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </div>\r\n                )}\r\n                <Link\r\n                  to=\"/cp@2707user\"\r\n                  className={classes.navMenu}\r\n                  style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                >\r\n                  <Button\r\n                    color=\"inherit\"\r\n                    variant=\"contained\"\r\n                    startIcon={<AssignmentIndIcon />}\r\n                  >\r\n                    Change Password\r\n                  </Button>\r\n                </Link>\r\n                <Link\r\n                  to=\"/logout\"\r\n                  className={classes.navMenu}\r\n                  style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                >\r\n                  <Button\r\n                    color=\"inherit\"\r\n                    variant=\"contained\"\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    startIcon={<ExitToAppIcon />}\r\n                  >\r\n                    Logout\r\n                  </Button>\r\n                </Link>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport AdminInstructions from \"./AdminInstructions\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LinearProgress,\r\n  TextField,\r\n  withStyles,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Input,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport ProjectList from \"./ProjectList\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SideMenu from \"./SideMenu\"\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\n//getting todays date\r\nvar tempDate = new Date();\r\nvar date =\r\n  tempDate.getFullYear() +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getMonth() + 1) +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getDate());\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet userInfo = [];\r\nlet Ad = null;\r\nlet filled = false;\r\nlet Groups = null;\r\nlet Guides=null;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\nlet a = new Date()\r\nvar academicYearList = [`${a.getFullYear()-1}-${a.getFullYear()}`,`${a.getFullYear()}-${a.getFullYear()+1}`,`${a.getFullYear()+1}-${a.getFullYear()+2}`]\r\n\r\nclass AdminContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    \r\n    this.state = {\r\n      hod: \"\",\r\n      hodName: \"\",\r\n      student_file: null,\r\n      adData: null,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      loading: false,\r\n      prefDueDate: date,\r\n      Academicyear: academicYearList[0]\r\n    };\r\n\r\n  }\r\n\r\n  //to change format of the month\r\n  appendLeadingZeroes(n) {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  handleDateChange = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getDate());\r\n    this.setState({ prefDueDate: formatted_date });\r\n    let a = new Date(\"2020-12-01\");\r\n    if (current_datetime < a) {\r\n      // console.log(\"success\");\r\n    } else if (current_datetime > a) {\r\n      // console.log(\"failed\");\r\n    }\r\n    // console.log(a);\r\n  };\r\n\r\n  //function to handle Academic Year\r\n  handleAcademicYear = e => {\r\n    this.setState({ Academicyear: e.target.value });\r\n  };\r\n\r\n  hodHandler = e => {\r\n    this.setState({ hod: e.target.value });\r\n  };\r\n  hodNameHandler = e => {\r\n    this.setState({ hodName: e.target.value });\r\n  };\r\n\r\n  // picHandler = e => {\r\n  //   this.setState({ pic: e.target.value });\r\n  // };\r\n  // picNameHandler = e => {\r\n  //   this.setState({ picName: e.target.value });\r\n  // };\r\n  // igHandler = e => {\r\n  //   this.setState({ ig: e.target.value });\r\n  // };\r\n  // igNameHandler = e => {\r\n  //   this.setState({ igName: e.target.value });\r\n  // };\r\n  // studentfileHandler = e => {\r\n  //   this.fileValidation(e);\r\n  // };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  submitHandler = e => {\r\n    e.preventDefault();\r\n    var formData = new FormData();\r\n    formData.append(\"hodName\", this.state.hodName);\r\n    formData.append(\"hodEmail\", this.state.hod);\r\n    formData.append(\"student_file\", this.state.student_file);\r\n    formData.append(\"dueDate\", this.state.prefDueDate);\r\n    formData.append(\"acadYear\", this.state.Academicyear);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/admin\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n    this.setState({ hod: \"\", student_file: null, hodName: \"\" });\r\n  };\r\n\r\n  fileValidation = e => {\r\n    var fileInput = document.getElementById(\"file\");\r\n    // console.log(fileInput);\r\n    // console.log(e.target.files[0]);\r\n    var filePath = fileInput.value;\r\n    // console.log(filePath);\r\n    // Allowing file type\r\n    var allowedExtensions = /(\\.csv|\\.xlsx)$/i;\r\n\r\n    if (!allowedExtensions.exec(filePath)) {\r\n      alert(\"Invalid file type\");\r\n      fileInput.value = \"\";\r\n      return false;\r\n    } else {\r\n      this.setState(\r\n        { student_file: e.target.files[0] },\r\n        // console.log(this.state.student_file)\r\n      );\r\n    }\r\n  };\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        // console.log(res.data)\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n  checkGuides(){\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n    .then(res => {\r\n      Guides = res.data;\r\n      // console.log(res,Guides)\r\n    })\r\n    .catch(function (err) {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let academicYear=this.state.Academicyear\r\n    //console.log(academicYear);\r\n    const { classes } = this.props;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <LoggedNavbar />\r\n          <LinearProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.adData === null || Guides===null) {\r\n      this.checkData();\r\n      this.checkGuides();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n\r\n    if (this.state.filled === true) {\r\n      if (Ad === 0) {\r\n        return (\r\n          <div className={classes.root}>\r\n            <SideMenu/>\r\n            <Profile userInfo={userInfo} academicYear={null} />\r\n            <AdminInstructions />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"50px auto\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\"\r\n              }}\r\n            >\r\n              <form\r\n                style={{\r\n                  backgroundColor: \"#fff\",\r\n                  marginTop: \"30px\",\r\n                  padding: \"20px 30px\"\r\n                }}\r\n                onSubmit={this.submitHandler}\r\n              >\r\n                <Typography variant=\"h4\" style={{ fontWeight: \"600\",fontFamily:\"sans-serif\",marginBottom:\"10px\"}}>\r\n                  Create Project List\r\n                </Typography>\r\n                <hr size = \"5\" color = \"blue\"/>\r\n                <br/><br/>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Enter Head Of Department Details:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hodName\"\r\n                      label=\"Enter Head of Department Name\"\r\n                      value={this.state.hodName}\r\n                      onChange={this.hodNameHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      id=\"hod\"\r\n                      label=\"Enter Head of Department Email\"\r\n                      value={this.state.hod}\r\n                      onChange={this.hodHandler}\r\n                      className={classes.Inputfield}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  {/* <Grid item xs={12} className={classes.gridField}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student List File:\r\n                    </Typography>\r\n                  </Grid> */}\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Academic Year:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {\" \"}\r\n                        <FormControl\r\n                          variant=\"outlined\"\r\n                          label=\"Academic Year\"\r\n                          style={{ width: \"60%\", padding: \"8px\" }}\r\n                        >\r\n                          <Select\r\n                            required\r\n                            value={this.state.Academicyear}\r\n                            onChange={this.handleAcademicYear}\r\n                            name=\"Academic Year\"\r\n                          >\r\n                          <MenuItem value={academicYearList[0]}>{academicYearList[0]}</MenuItem>\r\n                          <MenuItem value={academicYearList[1]}>{academicYearList[1]}</MenuItem>\r\n                          <MenuItem value={academicYearList[2]}>{academicYearList[2]}</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} md={6}>\r\n                    <Grid container>\r\n                      <Grid item xs={12} className={classes.gridField}>\r\n                        <Typography className={classes.InputTitle}>\r\n                          Enter Due Date for Proposal Submission:\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <KeyboardDatePicker\r\n                            autoOk\r\n                            required\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            format=\"yyyy/MM/dd\"\r\n                            value={this.state.prefDueDate}\r\n                            InputAdornmentProps={{ position: \"start\" }}\r\n                            onChange={this.handleDateChange}\r\n                            style={{ width: \"60%\", padding: \"8px\" }}\r\n                          />\r\n                        </MuiPickersUtilsProvider>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Typography className={classes.InputTitle}>\r\n                      Upload Student Group List:\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    className={classes.gridField}\r\n                  >\r\n                    <Input\r\n                      className={classes.Input}\r\n                      type=\"file\"\r\n                      id=\"file\"\r\n                      name=\"student_file\"\r\n                      onChange={this.fileValidation}\r\n                      style={{\r\n                        width: \"60%\",\r\n                        padding: \"12px\"\r\n                      }}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.gridField}>\r\n                    <div style={{ alignItems: \"center\", margin: \"0 30%\" }}>\r\n                      <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                        startIcon={<CloudUploadIcon />}\r\n                        style={{\r\n                          padding: \"8px 50px\",\r\n                          fontSize: \"18px\",\r\n                          backgroundColor: \"#1877f2\",\r\n                          margin: \"25px\"\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Snackbar\r\n                        open={this.state.openSuccess}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"success\">\r\n                          Data submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                      <Snackbar\r\n                        open={this.state.openFailure}\r\n                        autoHideDuration={6000}\r\n                        onClose={this.handleClose}\r\n                      >\r\n                        <Alert onClose={this.handleClose} severity=\"error\">\r\n                          Data not submitted successfully\r\n                        </Alert>\r\n                      </Snackbar>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </div>\r\n        );\r\n      }\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <SideMenu/>\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n            {}\r\n              <ProjectList Groups={Groups} Guides={Guides} />\r\n            </div>\r\n            <footer className={classes.footer}>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AdminContent from \"../components/Admin-component/AdminContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n// var today = new Date(),\r\n//   date = today.getDate();\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <AdminContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SERVER_URL from \"../URL\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./background2.jpg\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet Data = \"\";\r\nlet data_access = \"\";\r\nlet Ad = [];\r\nvar today = new Date(),\r\n  date =\r\n    today.getDate() +\r\n    \"a\" +\r\n    today.getMonth() +\r\n    \"V\" +\r\n    today.getFullYear() +\r\n    \"hello\" +\r\n    50 +\r\n    \"Z\" +\r\n    today.getDate();\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    background: \"transparent\",\r\n    // boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n    borderRadius: \"6px\",\r\n    float: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    paddingTop: \"40px\",\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      paddingTop: \"20px\"\r\n    }\r\n  },\r\n  leftpaper: {\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundSize: \"cover\",\r\n    height: \"100%\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#1877f2\",\r\n    height: \"50px\",\r\n    width: \"50px\",\r\n    marginTop: \"30px\"\r\n  },\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  title: {\r\n    paddingTop: \"50px\",\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"775\")]: {\r\n      fontSize: \"45px\"\r\n    },\r\n    [theme.breakpoints.down(\"575\")]: {\r\n      fontSize: \"40px\"\r\n    }\r\n  }\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n\r\n    if (token == null) {\r\n      loggedIn = false;\r\n      // console.log(\"token is null\");\r\n    }\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedIn,\r\n      user: \"\",\r\n      msg: \"\",\r\n      invalidCredentials: false,\r\n      getResponse: false\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleChange = name => ({ target: { value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    const { username, password } = this.state;\r\n    //Login Logic\r\n    this.setState({ getResponse: true });\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL+\"/login\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        email: username,\r\n        password: password\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n      }\r\n    })\r\n      .then(\r\n        function (response) {\r\n          Data = response.data.type;\r\n          data_access = response.data.access_token;\r\n          localStorage.setItem(\"access_token\", response.data.access_token);\r\n          this.setState({\r\n            user: response.data.type,\r\n            loggedIn: true,\r\n            msg: \"set\",\r\n            getResponse: false\r\n          });\r\n        }.bind(this)\r\n      )\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({ invalidCredentials: true, getResponse: false });\r\n      });\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(function (res) {\r\n        Ad = res.data;\r\n        // console.log(Ad);\r\n      })\r\n      // .then(() => {\r\n      //   localStorage.setItem(\"data\", \"set\");\r\n      // })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getToken() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token === null) {\r\n      this.setState({\r\n        loggedIn: false\r\n      });\r\n      // console.log(this.state.loggedIn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (Data === \"admin\") {\r\n      this.checkData();\r\n    }\r\n    if (Data === \"yami\") {\r\n      localStorage.setItem(\"token\", \"N1g70xwfa0V6oCXVweqt\" + date);\r\n    }\r\n    if (Data === \"admin\") {\r\n      localStorage.setItem(\"token\", \"admin\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"guide\") {\r\n      localStorage.setItem(\"token\", \"guide\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"ig\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"pic\") {\r\n      localStorage.setItem(\"token\", \"faculty\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"hod\") {\r\n      localStorage.setItem(\"token\", \"hod\");\r\n      Data = \"\";\r\n    }\r\n    if (Data === \"student\") {\r\n      localStorage.setItem(\"token\", \"student\");\r\n      localStorage.setItem(\"access_token\",data_access);\r\n    }\r\n    Data = \"\";\r\n    if (this.state.loggedIn) {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (token === \"N1g70xwfa0V6oCXVweqt\" + date)\r\n        return <Redirect to=\"/yami\" exact />;\r\n      if (token === \"admin\") return <Redirect to=\"/admin\" exact />;\r\n      if (token === \"student\") return <Redirect to=\"/student\" exact />;\r\n      if (token === \"faculty\") return <Redirect to=\"/faculty\" exact />;\r\n      if (token === \"hod\") return <Redirect to=\"/hod\" exact />;\r\n      if (token === \"guide\") return <Redirect to=\"/guide\" exact />;\r\n    }\r\n    const handleClose = (event, reason) => {\r\n      if (reason === \"clickaway\") {\r\n        return;\r\n      }\r\n      this.setState({ invalidCredentials: false });\r\n    };\r\n    // if (this.state.loggedIn) {\r\n    //   return <Redirect to=\"/admin\" />;\r\n    // }\r\n    if (this.state.getResponse) {\r\n      return <LinearProgress />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className={classes.leftpaper}>\r\n          <Typography variant=\"h2\" className={classes.title}>\r\n            <b>Project Management System</b>\r\n          </Typography>\r\n          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n            <CssBaseline />\r\n            <Avatar variant=\"circle\" className={classes.avatar}>\r\n              <PersonIcon fontSize=\"large\" />\r\n            </Avatar>\r\n            <Typography component=\"h2\" variant=\"h6\">\r\n              <b>User Login</b>\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={this.submitForm}>\r\n              <TextField\r\n                type=\"email\"\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange(\"username\")}\r\n                className={classes.fields}\r\n              />\r\n              <TextField\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange(\"password\")}\r\n                autoComplete=\"current-password\"\r\n                className={classes.fields}\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n            <Link\r\n              to=\"/forgetPassword\"\r\n              style={{ textDecoration: \"underline\", color: \"#fff\", marginRight:\"5px\" }}\r\n            >\r\n            forgot password ? reset now\r\n            </Link>\r\n            <Snackbar\r\n              open={this.state.invalidCredentials}\r\n              autoHideDuration={6000}\r\n              onClose={handleClose}\r\n            >\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                Invalid Username/Password Please try again\r\n              </Alert>\r\n            </Snackbar>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Login);\r\n// <Grid container>\r\n//   <Hidden xsDown>\r\n//     <Grid item   md={7}   className={classes.leftpaper}>\r\n//     </Grid>\r\n//   </Hidden>\r\n//   <Grid item  component=\"main\" maxWidth=\"xs\" md={5}>\r\n//     <CssBaseline />\r\n//     <div\r\n//       className={classes.paper}\r\n//       style={{\r\n//         boxShadow:\r\n//           \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n//         backgroundColor: \"#fff\",\r\n//         borderRadius: \"6px\"\r\n//       }}\r\n//     >\r\n//       <Avatar\r\n//         variant=\"circle\"\r\n//         className={classes.avatar}\r\n//         style={{ marginTop: \"30px\" }}\r\n//       >\r\n//         <PersonIcon fontSize=\"large\" />\r\n//       </Avatar>\r\n//       <Typography component=\"h2\" variant=\"h6\">\r\n//         User Login\r\n//       </Typography>\r\n//       <form\r\n//         className={classes.form}\r\n//         onSubmit={this.submitForm}\r\n//         noValidate\r\n//       >\r\n//         <TextField\r\n//           type=\"email\"\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           id=\"username\"\r\n//           label=\"username\"\r\n//           value={this.state.username}\r\n//           onChange={this.handleChange(\"username\")}\r\n//           className={classes.fields}\r\n//           autoFocus\r\n//         />\r\n//         <TextField\r\n//           variant=\"outlined\"\r\n//           margin=\"normal\"\r\n//           required\r\n//           fullWidth\r\n//           label=\"Password\"\r\n//           type=\"password\"\r\n//           id=\"password\"\r\n//           value={this.state.password}\r\n//           onChange={this.handleChange(\"password\")}\r\n//           autoComplete=\"current-password\"\r\n//           className={classes.fields}\r\n//         />\r\n\r\n//         <Button\r\n//           type=\"submit\"\r\n//           fullWidth\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           className={classes.submit}\r\n//           style={{\r\n//             padding: \"10px\",\r\n//             fontSize: \"18px\",\r\n//             fontWeight: \"bolder\",\r\n//             backgroundColor: \"#1877f2\",\r\n//             marginBottom: \"25px\"\r\n//           }}\r\n//         >\r\n//           Log In\r\n//         </Button>\r\n//       </form>\r\n//       <Snackbar\r\n//         open={this.state.invalidCredentials}\r\n//         autoHideDuration={6000}\r\n//         onClose={handleClose}\r\n//       >\r\n//         <Alert onClose={handleClose} severity=\"error\">\r\n//           Invalid Username/Password Please try again\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </div>\r\n//   </Grid>\r\n// </Grid>\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Logout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"access_token\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>You Have been Logged out</h1>\r\n        <button onClick={() => {window.location.reload(false)}}><Link to=\"/\">Login Again</Link></button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport {Typography, TextField, Grid, Button, withStyles, CircularProgress, Tabs, Tab, Box, AppBar, createMuiTheme, ThemeProvider, responsiveFontSizes } from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nlet stuData = null;\r\nlet Stu = null;\r\nlet filled = false;\r\nlet Proposals = null;\r\nlet pref1=[];\r\nlet pref2=[];\r\nlet pref3=[];\r\n\r\nconst useStyles = theme => ({\r\n  buttonprop: {\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    color: \"#fff\",\r\n    fontWeight: \"bolder\",\r\n    backgroundColor: \"#1877f2\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  TextField: {\r\n    width: \"100%\"\r\n  },\r\n  typography:{\r\n    fontSize:\"16px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  typographyFilled:{\r\n    fontWeight:\"700\",\r\n    fontSize:\"20px\",\r\n    display:\"flex\",\r\n    textAlign:\"left\"\r\n  },\r\n  tabPanel:{\r\n    borderTop:\"1px solid #000\",\r\n    width:\"100%\"\r\n  },\r\n  largeWinTabs:{\r\n    [theme.breakpoints.down('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n  smallWinTabs:{\r\n    [theme.breakpoints.up('700')]: {\r\n      display:\"none\"\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nclass StudentContent extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      preferences: [\r\n        {\r\n          filled: false,\r\n          prefno: 1,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 2,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        },\r\n        {\r\n          filled: false,\r\n          prefno: 3,\r\n          Top: \"\",\r\n          Dos: \"\",\r\n          Dsop: \"\",\r\n          Agency: \"\",\r\n          Mtap: \"\",\r\n          Red: \"\",\r\n          Shr: \"\",\r\n          selectedFile: null\r\n        }\r\n      ],\r\n      currentStep: 1,\r\n      stuData: null,\r\n      tabValue: 0,\r\n      filled,\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      formFilled: false,\r\n      loading: false,\r\n      open:false\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({open:true})\r\n  };\r\n\r\n  handleAgreeClickClose = () => {\r\n    Stu=0;\r\n    this.setState({open:false})\r\n  }\r\n  handleCancelClickClose = () => {\r\n    this.setState({open:false})\r\n  }\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      stuData: null\r\n    });\r\n  };\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({\r\n      tabValue: newValue\r\n    });\r\n  };\r\n\r\n  handleTopChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      //let prefno = prefs[i].prefno;\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Top = e.target.value;\r\n        //prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDosChange = (e, pn) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === pn - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dos = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDsopChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Dsop = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleAgencyChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Agency = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleMtapChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Mtap = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRedChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Red = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleShrChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        //let pref=[...prefs[i]];\r\n        prefs[i].Shr = e.target.value;\r\n        // prefs[i]=pref;\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleFileChange = (e, cs) => {\r\n    let prefs = [...this.state.preferences];\r\n    for (var i = 0; i < 3; i++) {\r\n      if (i === cs - 1) {\r\n        prefs[i].selectedFile = e.target.files[0];\r\n        this.setState({ preferences: prefs });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClick = (e, pn) => {\r\n    e.preventDefault();\r\n    if (this.state.currentStep === 3) {\r\n      let prefs = [...this.state.preferences];\r\n      for (var i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n          this.handleSubmit(e);\r\n        }\r\n      }\r\n    } else {\r\n      let prefs = [...this.state.preferences];\r\n      for (i = 0; i < 3; i++) {\r\n        if (i === pn - 1) {\r\n          //let pref=[...prefs[i]];\r\n          prefs[i].filled = true;\r\n          // prefs[i]=pref;\r\n          this.setState({ preferences: prefs });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let pref1 = this.state.preferences[0];\r\n    let pref2 = this.state.preferences[1];\r\n    let pref3 = this.state.preferences[2];\r\n    let proposals = [\r\n      {\r\n        title: pref1.Top,\r\n        specialization: pref1.Dos,\r\n        details: pref1.Dsop,\r\n        agency: pref1.Agency,\r\n        method: pref1.Mtap,\r\n        result: pref1.Red,\r\n        requirements: pref1.Shr\r\n      },\r\n      {\r\n        title: pref2.Top,\r\n        specialization: pref2.Dos,\r\n        details: pref2.Dsop,\r\n        agency: pref2.Agency,\r\n        method: pref2.Mtap,\r\n        result: pref2.Red,\r\n        requirements: pref2.Shr\r\n      },\r\n      {\r\n        title: pref3.Top,\r\n        specialization: pref3.Dos,\r\n        details: pref3.Dsop,\r\n        agency: pref3.Agency,\r\n        method: pref3.Mtap,\r\n        result: pref3.Red,\r\n        requirements: pref3.Shr\r\n      }\r\n    ];\r\n    var formData = new FormData();\r\n    formData.append(\"proposals\", JSON.stringify(proposals));\r\n    formData.append(\"file1\", this.state.preferences[0].selectedFile);\r\n    formData.append(\"file2\", this.state.preferences[1].selectedFile);\r\n    formData.append(\"file3\", this.state.preferences[2].selectedFile);\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true, loading: false });\r\n        window.location.reload(false);\r\n      })\r\n      .catch(err => {\r\n        this.setState({ openFailure: true, loading: false });\r\n        if (err) throw err;\r\n      });\r\n  };\r\n\r\n  checkData = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers : {\r\n                Authorization : 'Bearer '+localStorage.getItem(\"access_token\"),\r\n            }\r\n    })\r\n      .then(res => {\r\n        Stu = res.data.proposals.length;\r\n        Proposals = res.data.proposals;\r\n        pref1 = Proposals[0]\r\n        pref2 = Proposals[1]\r\n        pref3 = Proposals[2]\r\n        this.setState({\r\n          stuData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  _next = e => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n    this.handleClick(e, currentStep - 1);\r\n  };\r\n\r\n  _prev = () => {\r\n    let currentStep = this.state.currentStep;\r\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\r\n    this.setState({\r\n      currentStep: currentStep\r\n    });\r\n  };\r\n\r\n  handleNext = e => {\r\n    e.preventDefault();\r\n    let currentStep = this.state.currentStep;\r\n    let {\r\n      Top,\r\n      Dos,\r\n      Dsop,\r\n      Agency,\r\n      Mtap,\r\n      Red,\r\n      Shr,\r\n      selectedFile\r\n    } = this.state.preferences[currentStep - 1];\r\n    if (\r\n      Top === \"\" ||\r\n      Dos === \"\" ||\r\n      Dsop === \"\" ||\r\n      Agency === \"\" ||\r\n      Mtap === \"\" ||\r\n      Red === \"\" ||\r\n      Shr === \"\" ||\r\n      selectedFile === null\r\n    ) {\r\n      alert(\"Please enter all the details of the preference\");\r\n    } else {\r\n      this.setState({ open: true });\r\n      this._next(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    stuData = this.state.stuData;\r\n    filled = this.state.filled;\r\n    if (this.state.loading) {\r\n      return (\r\n        <div style={{ margin: \"auto\" }}>\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    }\r\n    if (stuData === null) {\r\n      this.checkData();\r\n    }\r\n    if (filled === true) {\r\n      if (Stu === 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <form>\r\n              <Step1\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleClose={this.handleClose}\r\n                handleFileChange={this.handleFileChange}\r\n              />\r\n              <Step2\r\n                classes={classes}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleNext={this.handleNext}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                handleClose={this.handleClose}\r\n                _prev={this._prev}\r\n              />\r\n              <Step3\r\n                classes={classes}\r\n                openSuccess={this.state.openSuccess}\r\n                openFailure={this.state.openFailure}\r\n                handleClose={this.handleClose}\r\n                currentStep={this.state.currentStep}\r\n                preferences={this.state.preferences}\r\n                handleTopChange={this.handleTopChange}\r\n                handleDosChange={this.handleDosChange}\r\n                handleDsopChange={this.handleDsopChange}\r\n                handleAgencyChange={this.handleAgencyChange}\r\n                handleClick={this.handleClick}\r\n                handleSubmit={this.handleSubmit}\r\n                handleMtapChange={this.handleMtapChange}\r\n                handleRedChange={this.handleRedChange}\r\n                handleShrChange={this.handleShrChange}\r\n                handleFileChange={this.handleFileChange}\r\n                previousButton={this.previousButton}\r\n                _prev={this._prev}\r\n              />\r\n              {/* {this.previousButton()} */}\r\n            </form>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n      if (Stu !== 0) {\r\n        let value=this.state.tabValue;\r\n          return (\r\n            <React.Fragment>\r\n              {!(pref1.approval.admin||pref2.approval.admin||pref3.approval.admin)?(\r\n                <React.Fragment>\r\n                  <Button onClick={this.handleClickOpen} style={{float:\"right\",margin:\"5px 0\"}} variant=\"contained\" color=\"secondary\">\r\n                    Re-enter Proposals\r\n                  </Button>\r\n                  <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClickClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                  >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Re-enter the proposals?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                      <DialogContentText id=\"alert-dialog-description\">\r\n                        If you click ok then you have to re-enter the proposals completely. If you refresh the page or close the tabs then all your changes will be lost. \r\n                      </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={this.handleCancelClickClose} color=\"primary\" autoFocus>\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={this.handleAgreeClickClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </React.Fragment>\r\n              ):(null)}\r\n              <div className={classes.largeWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\" centered>\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n              </div>\r\n              <div className={classes.smallWinTabs}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                  <Tabs variant=\"scrollable\" scrollButtons=\"on\" value={value} onChange={this.handleChange} aria-label=\"simple tabs example\" indicatorColor=\"secondary\" textColor=\"secondary\">\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 1\" {...a11yProps(0)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 2\" {...a11yProps(1)} />\r\n                    <Tab style={{color:\"white\"}} label=\"Preference 3\" {...a11yProps(2)} />\r\n                  </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.tabPanel} value={value} index={0}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref1.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref1.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={1}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref2.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref2.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n                <TabPanel className={classes.tabPanel} value={value} index={2}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid className={classes.typographyFilled} item xs={12} sm={6}>\r\n                      <Typography><b>Title of Preference : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.title}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Domain/Area of Specialization : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.specialization}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Detailed Statement of Problem : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.details}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Internal agency/external agency/CTL/Mastek/or any other : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.agency}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Method/Technique/Algorithm proposed : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.method}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Results Expected : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.result}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>Software and Hardware requirements : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography>{pref3.requirements}</Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                      <Typography><b>IEEE / ACM / Springer Journal Paper : </b></Typography>\r\n                    </Grid>\r\n                    <Grid className={classes.typographyFilled} item xs={12}sm={6}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.open(\r\n                          `${SERVER_URL}/${pref3.attachPrints}`\r\n                        );\r\n                      }}\r\n                    >\r\n                      Uploaded Document\r\n                    </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </TabPanel>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <CircularProgress />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step1(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 1) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 1\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              component={\"span\"}\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[0].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[0].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step2(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 2) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 2\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[1].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[1].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props.handleNext}\r\n            >\r\n              Next\r\n            </Button>\r\n            {/* <Snackbar open={props.open} autoHideDuration={6000} onClose={props.handleClose}>\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preference 2 submitted successfully\r\n              </Alert>\r\n            </Snackbar> */}\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Step3(props) {\r\n  const classes = props.classes;\r\n  if (props.currentStep !== 3) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n        <Grid container spacing={2}>\r\n          <Grid component={\"span\"} item xs={12}>\r\n            <Typography component={\"span\"} variant=\"h3\">\r\n              Preference 3\r\n            </Typography>\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Title of Preference : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"Top\"\r\n              name=\"Top\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Top}\r\n              onChange={e => {\r\n                props.handleTopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Domain of Specialization :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dos\"\r\n              name=\"Dos\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dos}\r\n              onChange={e => {\r\n                props.handleDosChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Detailed Statement of Problem :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Dsop\"\r\n              name=\"Dsop\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Dsop}\r\n              onChange={e => {\r\n                props.handleDsopChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Internal agency / external agency / CTL / Mastek/or any other :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"agency\"\r\n              name=\"agency\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Agency}\r\n              onChange={e => {\r\n                props.handleAgencyChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Method/Technique/Algorithm proposed :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Mtap\"\r\n              name=\"Mtap\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Mtap}\r\n              onChange={e => {\r\n                props.handleMtapChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>Results Expected : </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Red\"\r\n              name=\"Red\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Red}\r\n              onChange={e => {\r\n                props.handleRedChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              Software and Hardware requirements :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"outlined\"\r\n              multiline\r\n              inputProps={{style: {fontSize: 14}}}\r\n              rows={3}\r\n              component={\"span\"}\r\n              id=\"Shr\"\r\n              name=\"Shr\"\r\n              type=\"text\"\r\n              value={props.preferences[2].Shr}\r\n              onChange={e => {\r\n                props.handleShrChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.typography} item xs={12}sm={6}>\r\n            <Typography component={\"span\"}>\r\n              IEEE / ACM / Springer Journal Paper :{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}sm={6}>\r\n            <TextField\r\n              className={classes.TextField}\r\n              variant=\"standard\"\r\n              component={\"span\"}\r\n              id=\"file\"\r\n              name=\"file\"\r\n              type=\"file\"\r\n              onChange={e => {\r\n                props.handleFileChange(e, props.preferences[2].prefno);\r\n              }}\r\n              required\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              onClick={props._prev}\r\n            >\r\n              Previous\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              className={classes.buttonprop}\r\n              variant=\"contained\"\r\n              component={\"span\"}\r\n              type=\"submit\"\r\n              onClick={e => {\r\n                props.handleClick(e, props.currentStep);\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Snackbar\r\n              open={props.openSuccess}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"success\">\r\n                Preferences submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar\r\n              open={props.openFailure}\r\n              autoHideDuration={6000}\r\n              onClose={props.handleClose}\r\n            >\r\n              <Alert onClose={props.handleClose} severity=\"error\">\r\n                Preferences not submitted successfully\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n          <Grid item xs={2} />\r\n        </Grid>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(StudentContent);\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from \"@material-ui/core\";\r\n\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n}));\r\n\r\nlet propF = false;\r\nlet fill = false;\r\nlet Group = null;\r\n\r\nconst StudentHomePage = (props) => {\r\n\r\n    Group=props.Group;\r\n    AppliedOn=props.AppliedOn;\r\n    DueDate=props.DueDate;\r\n    const filled = true;\r\n    const loading = false;\r\n    const classes = useStyles();\r\n    if(Group.proposals.length!==0){\r\n      propF=true\r\n    }\r\n    fill = filled;\r\n\r\n  function propApproved(proposals) {\r\n    let approved = false;\r\n    let propTitle = \"\";\r\n    proposals.map(proposal => {\r\n      if (proposal.approval.admin && proposal.approval.hod) {\r\n        approved = true;\r\n        propTitle = proposal.title;\r\n      }\r\n      return(null)\r\n    });\r\n\r\n    if (approved) {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}}  color=\"primary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ margin: \"20px 0\",float:\"left\",fontSize:\"20px\" }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposal <b>{propTitle}</b> has been approved. Please start working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}} color=\"secondary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{float:\"left\", margin: \"15px 0\",fontSize:\"20px\" }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposal <b>{propTitle}</b> has been approved. Please start working on it.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else {\r\n      if (DueDate >= AppliedOn) {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography style={{float:\"left\",fontSize:\"20px\"}} color=\"primary\" variant=\"h4\">\r\n              <b>Submission Status</b> : Proposal Submitted On time\r\n            </Typography>\r\n            <Typography style={{ margin: \"15px 0\",float:\"left\",fontSize:\"20px\"  }} variant=\"h5\">\r\n              <b>Approval Status</b> : Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Typography color=\"secondary\" variant=\"h4\">\r\n              Proposal Submitted Late\r\n            </Typography>\r\n            <Typography style={{ margin: \"15px 0\" }} variant=\"h5\">\r\n              Your Proposals are yet to be approved. Please check again later.\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <div style={{ margin: \"auto\" }}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  }\r\n  if (fill && propF) {\r\n    let i = 1;\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Typography style={{ marginTop: \"20px\" }} variant=\"h4\">\r\n            Approval Status\r\n          </Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Proposal</TableCell>\r\n                  <TableCell align=\"center\">Proposal Title</TableCell>\r\n                  <TableCell align=\"center\">Admin</TableCell>\r\n                  <TableCell align=\"center\">Head of Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {proposals.map(proposal => (\r\n                  <TableRow key={proposal.title}>\r\n                    <TableCell align=\"center\">{i++}</TableCell>\r\n                    <TableCell align=\"center\">{proposal.title}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.admin ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {proposal.approval.hod ? \"Approved\" : \"Not Approved\"}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {propApproved(proposals)}\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  if (fill && !propF) {\r\n    const { department, name, members, proposals } = Group;\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <Typography variant=\"h4\">Group Details</Typography>\r\n          <TableContainer\r\n            style={{ backgroundColor: \"#d3d3d3\" }}\r\n            className={classes.tableContainer}\r\n            component={Paper}\r\n          >\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Name</TableCell>\r\n                  <TableCell align=\"center\">Roll No.</TableCell>\r\n                  <TableCell align=\"center\">Email ID</TableCell>\r\n                  <TableCell align=\"center\">Group No.</TableCell>\r\n                  <TableCell align=\"center\">Department</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {members.map(member => (\r\n                  <TableRow key={member._id}>\r\n                    <TableCell align=\"center\">{member.name}</TableCell>\r\n                    <TableCell align=\"center\">{member.rollno}</TableCell>\r\n                    <TableCell align=\"center\">{member.email}</TableCell>\r\n                    <TableCell align=\"center\">{name}</TableCell>\r\n                    <TableCell align=\"center\">{department}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {proposals.length === 0 ? (\r\n            <Typography style={{ marginBottom: \"40px\" }} variant=\"h5\">\r\n              <b>Due Date for Submitting Proposals:</b>&nbsp;&nbsp;{DueDate}\r\n            </Typography>\r\n          ) : null}\r\n          {/* {(new Date(DueDate).getTime()<Date.now()?(\r\n            <Typography color=\"error\" style={{marginBottom: \"30px\",fontSize:\"30px\" }} variant=\"h3\">You have crossed Due Date.<br/></Typography>\r\n          ):(null))} */}\r\n          <Typography color=\"error\" style={{float:\"left\",fontSize:\"20px\" }} variant=\"h4\">\r\n            Preferences have not been filled.&nbsp;\r\n          </Typography><br/>\r\n          <Typography color=\"error\" style={{ marginBottom: \"30px\",float:\"left\",fontSize:\"20px\" }} variant=\"h4\">\r\n            Please fill your preferences from the Preferences tab.<br/>\r\n          </Typography>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return <CircularProgress />;\r\n};\r\n\r\nexport default StudentHomePage;\r\n","import React from 'react';\r\nimport { makeStyles, Typography, CircularProgress, Grid, Paper } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo:{\r\n        textAlign:\"Left\"\r\n    }\r\n}))\r\n\r\nlet Group = null;\r\n\r\nconst StudentCommentPage = (props) => {\r\n    Group = props.Group\r\n    const classes = useStyles();\r\n\r\n\r\n    if(Group === null){\r\n        return (\r\n            <div style={{ margin: \"auto\" }}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }else{\r\n        const {comments} = Group;\r\n        if(comments.length === 0){\r\n            return(\r\n                <React.Fragment>\r\n                    <Typography variant=\"h4\">No comments have been added</Typography>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n            comments.map(comment => {\r\n                let dt = new Date(comment.time)\r\n                return(\r\n                    <React.Fragment key={comment._id}>\r\n                        <Paper style={{backgroundColor:\"#e0e0e0\"}}>\r\n                            <Grid style={{margin:\"10px 35px\"}} container spacing={2}>\r\n                                <Grid className={classes.typo} item xs={12} sm={4}>\r\n                                    <Typography><b>Author</b> : {comment.author}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={6} sm={4}>\r\n                                    <Typography><b>Date</b> : {dt.getDate()}/{dt.getMonth()+1}/{dt.getFullYear()}</Typography>\r\n                                </Grid>\r\n                                <Grid className={classes.typo} item xs={6} sm={4}>\r\n                                    <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}</Typography>\r\n                                </Grid>\r\n                                \r\n                                <Grid className={classes.typo} item xs={12}>\r\n                                    <Typography><b>Comment</b> : {comment.text}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </React.Fragment>\r\n                );\r\n            }))\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentCommentPage;","import { CircularProgress, createMuiTheme, makeStyles, Paper, responsiveFontSizes, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, ThemeProvider, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\nconst useStyles = makeStyles(theme => ({\r\n    tableContainer: {\r\n        marginTop: \"10px\",\r\n        marginBottom: \"50px\"\r\n      },\r\n      table: {\r\n        minWidth: 650\r\n      }\r\n  }));\r\n\r\nconst days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\nlet Group=null;\r\nlet Presentations = null;\r\n\r\nconst StudentPresentation = (props) => {\r\n    const classes = useStyles();\r\n    Group=props.Group;\r\n    Presentations=Group.presentation\r\n    Presentations.sort((a,b)=>(new Date(a.scheduled_date).getTime()>new Date(b.scheduled_date).getTime())?1:-1)\r\n    if(Group===null){\r\n        return(\r\n            <React.Fragment>\r\n                <CircularProgress />\r\n            </React.Fragment>\r\n        )\r\n    }else{\r\n        if(Presentations.length!==0){\r\n            return(\r\n                <React.Fragment>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Typography variant=\"h4\">Presentation Details</Typography>\r\n                        <TableContainer\r\n                            style={{ backgroundColor: \"#d3d3d3\" }}\r\n                            className={classes.tableContainer}\r\n                            component={Paper}\r\n                        >\r\n                            <Table\r\n                            className={classes.table}\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                            >\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                    <TableCell align=\"center\">No.</TableCell>\r\n                                    <TableCell align=\"center\">Date</TableCell>\r\n                                    <TableCell align=\"center\">Organisation</TableCell>\r\n                                    <TableCell align=\"center\">Subject Knowledge</TableCell>\r\n                                    <TableCell align=\"center\">Effectiveness of delivery</TableCell>\r\n                                    <TableCell align=\"center\">Time Management</TableCell>\r\n                                    <TableCell align=\"center\">Marks</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Presentations.map((Presentation,index) => (\r\n                                    <TableRow key={Presentation._id}>\r\n                                        <TableCell align=\"center\">{index+1}</TableCell>\r\n                                        <TableCell align=\"center\">{new Date(Presentation.scheduled_date).getDate()}/{new Date(Presentation.scheduled_date).getMonth()+1}/{new Date(Presentation.scheduled_date).getFullYear()}</TableCell>\r\n                                        {(!Presentation.filled)?(\r\n                                            <React.Fragment>\r\n                                                {new Date(Presentation.scheduled_date).getTime()>Date.now()?(\r\n                                                    <React.Fragment>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">Presentation Not conducted</TableCell>\r\n                                                    </React.Fragment>\r\n                                                ):(\r\n                                                    <React.Fragment>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">-</TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography style={{fontSize:\"12\"}} color=\"secondary\">\r\n                                                                Presentation missing\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                    </React.Fragment>\r\n                                                )}\r\n                                            </React.Fragment>\r\n                                        ):(\r\n                                            <React.Fragment>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.orgMarks}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.subKnowMarks}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.EODMarks}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.timeMarks}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    {Presentation.orgMarks+Presentation.timeMarks+Presentation.EODMarks+Presentation.subKnowMarks}/10\r\n                                                </TableCell>\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                    </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </ThemeProvider>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <Typography>\r\n                    No Presentations have been scheduled. Please check later or contact your Faculty\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentPresentation;","import React from 'react';\r\nimport { makeStyles, Typography, CircularProgress, Grid, Paper } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typo:{\r\n        textAlign:\"Left\"\r\n    }\r\n}))\r\n\r\nlet Group = null;\r\n\r\nconst StudentWeeklyLog = (props) => {\r\n    Group = props.Group\r\n    const classes = useStyles();\r\n\r\n\r\n    if(Group === null){\r\n        return (\r\n            <div style={{ margin: \"auto\" }}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }else{\r\n        const {weeklyMeetLog} = Group;\r\n        if(weeklyMeetLog.length === 0){\r\n            return(\r\n                <React.Fragment>\r\n                    <Typography variant=\"h4\">You have not reported to your guide even once</Typography>\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n            weeklyMeetLog.map(wML => {\r\n                let dt = new Date(wML.scheduled_date)\r\n                return(\r\n                    <React.Fragment key={wML._id}>\r\n                        <Paper style={{backgroundColor:\"#e0e0e0\"}}>\r\n                            <Grid style={{margin:\"10px 35px\"}} container spacing={2}>\r\n                                <Grid className={classes.typo} item xs={6} sm={6}>\r\n                                    <Typography><b>Date</b> : {dt.getDate()}/{dt.getMonth()+1}/{dt.getFullYear()}</Typography>\r\n                                </Grid>\r\n                                {(dt.getHours()>=12)?(\r\n                                    <React.Fragment>\r\n                                        {(dt.getHours()===12)?(\r\n                                            <Grid className={classes.typo} item xs={12} sm={6}>\r\n                                                <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}&nbsp;pm</Typography>\r\n                                            </Grid>\r\n                                        ):(\r\n                                            <Grid className={classes.typo} item xs={12} sm={6}>\r\n                                                <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}&nbsp;pm</Typography>\r\n                                            </Grid>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ):(\r\n                                    <Grid className={classes.typo} item xs={12} sm={6}>\r\n                                        <Typography><b>Time</b> : {dt.getHours()}:{dt.getMinutes()}&nbsp;am</Typography>\r\n                                    </Grid>\r\n                                )}\r\n                                <Grid className={classes.typo} item xs={12}>\r\n                                    <Typography><b>Remark</b> : {wML.remark}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </React.Fragment>\r\n                );\r\n            }))\r\n        }\r\n    }\r\n}\r\n \r\nexport default StudentWeeklyLog;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Container, CircularProgress } from \"@material-ui/core\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport StudentContent from \"./StudentContent\";\r\nimport Profile from \"../Profile\";\r\nimport StudentHomePage from \"./studentHomePage\";\r\nimport StudentCommentPage from \"./StudentCommentPage\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport StudentPresentation from \"./StudentPresentation\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport StudentWeeklyLog from \"./StudentWeeklyLog\";\r\n\r\nlet userInfo = [];\r\nlet DueDate = null;\r\nlet AppliedOn = null;\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Container>\r\n          <Box>\r\n            <Typography component={\"span\"}>{children}</Typography>\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: \"flex\",\r\n    maxWidth: \"100%\",\r\n    marginTop: \"3px\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  // tabs: {\r\n  //   borderRight: `1px solid ${theme.palette.divider}`,\r\n  // },\r\n  TabPanel: {\r\n    //borderLeft:`1px solid ${theme.palette.divider}`,\r\n    display: \"block\"\r\n    //margin:\"1px\",\r\n  },\r\n  vert_tab_grid: {\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  hor_tab_grid: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  large_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.down(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  small_win_tabs: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.up(\"760\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nlet Group=null;\r\n\r\nconst StudentWholePage = props => {\r\n  userInfo = props.userInfo;\r\n  const [obtained,setObtained] = React.useState(false)\r\n  const [academicYear,setAcademicYear] = React.useState(\"\")\r\n  const [reqSent,setReqSent] = React.useState(false)\r\n  //console.log(userInfo.name);\r\n\r\n\r\n  function checkData() {\r\n    setReqSent(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/group\",\r\n      withCredentials: true,\r\n      headers:{\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Group = res.data;\r\n        setObtained(true);\r\n        DueDate = Group.dueDate.split(\"T\")[0];\r\n        if(Group.proposals.length!==0){\r\n          AppliedOn = Group.proposals[0].applied.split(\"T\")[0];\r\n        }\r\n        setAcademicYear(Group.acadYear)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  if(obtained===false && reqSent===false){\r\n    checkData()\r\n  }\r\n  if(obtained===true){\r\n    // console.log(academicYear)\r\n    return (\r\n      <React.Fragment>\r\n        <Profile academicYear={academicYear} userInfo={userInfo} />\r\n        <div\r\n          style={{\r\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n          }}\r\n          className={classes.small_win_tabs}\r\n        >\r\n          <Grid container className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid item xs={12} className={classes.hor_tab_grid}>\r\n                <Tabs\r\n                  orientation=\"horizontal\"\r\n                  variant=\"scrollable\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"horizontal tabs\"\r\n                  // variant=\"fullWidth\"\r\n                  scrollButtons=\"on\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                >\r\n                  <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Preferences\"\r\n                    {...a11yProps(1)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Comments\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Presentations\"\r\n                    {...a11yProps(3)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Weekly Logs\"\r\n                    {...a11yProps(4)}\r\n                  />\r\n                </Tabs>\r\n              </Grid>\r\n              {/* <Grid item xs={2} /> */}\r\n            </ThemeProvider>\r\n            <Grid className={classes.TabPanel} item xs={12}>\r\n              <TabPanel value={value} index={0}>\r\n                <StudentHomePage Group={Group} DueDate={DueDate} AppliedOn={AppliedOn}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <StudentContent />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <StudentCommentPage Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <StudentPresentation Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={4}>\r\n                <StudentWeeklyLog Group={Group} />\r\n              </TabPanel>\r\n            </Grid>\r\n            {/* <Grid item xs={1}></Grid> */}\r\n          </Grid>\r\n        </div>\r\n        <div\r\n          style={{\r\n            boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n          }}\r\n          className={classes.large_win_tabs}\r\n        >\r\n          <Grid style={{ marginTop: \"3px\" }} container className={classes.root}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid item xs={3} className={classes.vert_tab_grid}>\r\n                <Tabs\r\n                  orientation=\"vertical\"\r\n                  value={value}\r\n                  variant=\"fullWidth\"\r\n                  onChange={handleChange}\r\n                  aria-label=\"Vertical tabs\"\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                >\r\n                  <Tab className={classes.tab} label=\"Home\" {...a11yProps(0)} />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Preferences\"\r\n                    {...a11yProps(1)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Comments\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Presentations\"\r\n                    {...a11yProps(3)}\r\n                  />\r\n                  <Tab\r\n                    className={classes.tab}\r\n                    label=\"Weekly Logs\"\r\n                    {...a11yProps(4)}\r\n                  />\r\n                </Tabs>\r\n              </Grid>\r\n            </ThemeProvider>\r\n            <Grid className={classes.TabPanel} item xs={9}>\r\n              <TabPanel value={value} index={0}>\r\n                <StudentHomePage Group={Group} DueDate={DueDate} AppliedOn={AppliedOn}/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <StudentContent />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <StudentCommentPage Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={3}>\r\n                <StudentPresentation Group={Group} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={4}>\r\n                <StudentWeeklyLog Group={Group} />\r\n              </TabPanel>\r\n            </Grid>\r\n            {/* <Grid item xs={1}></Grid> */}\r\n          </Grid>\r\n        </div>\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }else{\r\n    return(\r\n      <CircularProgress />\r\n    )\r\n  }\r\n};\r\n\r\nexport default StudentWholePage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport StudentWholePage from \"../components/Student-component/studentWholePage\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\n//import StudentContent from \"../components/Student-component/StudentContent\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"student\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    \r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        //console.log(res.data);\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"NO user\" });\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"access_token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"student\") {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <StudentWholePage userInfo={this.state.user} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel : {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float : \"left\",\r\n  }\r\n});\r\n\r\nclass YamiContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      openSuccess : false,\r\n      openFailure : false,\r\n      name:\"\",\r\n      mail: \"\",\r\n      dept: \"Computer Science\"\r\n    };\r\n  }\r\n\r\n  mailHandler = event => {\r\n    this.setState({ mail: event.target.value });\r\n  };\r\n  nameHandler = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  deptHandler = event => {\r\n    this.setState({ dept: event.target.value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const {name, mail, dept } = this.state;\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/yami\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        name : name,\r\n        email: mail,\r\n        department: dept\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(response => {\r\n        this.setState({openSuccess:true});\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({openFailure:true});\r\n      });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      this.setState({openFailure:false,openSuccess:false})\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <LoggedNavbar />\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div\r\n            className={classes.paper}\r\n            style={{\r\n              boxShadow:\r\n                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: \"6px\"\r\n            }}\r\n          >\r\n           \r\n            <form\r\n              className={classes.form}\r\n              onSubmit={this.submitHandler}\r\n              noValidate\r\n            >\r\n              <Typography variant=\"h4\" style={{ marginTop:'15px',marginBottom:'15px'}}>\r\n                Create Admin\r\n              </Typography>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin name\"\r\n                value={this.state.name}\r\n                onChange={this.nameHandler}\r\n                autoFocus/>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"admin\"\r\n                label=\"admin email\"\r\n                value={this.state.mail}\r\n                onChange={this.mailHandler}\r\n                />\r\n              <InputLabel\r\n              className = {classes.deptLabel}> Select Department</InputLabel>\r\n              <Select\r\n                value={this.state.dept}\r\n                onChange={this.deptHandler}\r\n                label=\"Department\"\r\n                fullWidth\r\n              >\r\n                <MenuItem value=\"Computer Science\">Computer Science</MenuItem>\r\n                <MenuItem value=\"Information Technology\">Information Technology</MenuItem>\r\n                <MenuItem value=\"Electronics and Telecommunication\">Electronics and Telecommunication</MenuItem>\r\n                <MenuItem value=\"Electronics\">Electronics</MenuItem>\r\n              </Select>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                style={{\r\n                  padding: \"10px\",\r\n                  fontSize: \"18px\",\r\n                  fontWeight: \"bolder\",\r\n                  backgroundColor: \"#1877f2\",\r\n                  marginBottom: \"25px\"\r\n                }}\r\n              >\r\n                Create\r\n              </Button>\r\n            </form>\r\n            <Snackbar open={this.state.openSuccess} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\">\r\n                A new Admin was created successfully\r\n              </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={this.state.openFailure} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                There was some problem while creating the admin please refresh the page and try again.\r\n              </Alert>\r\n            </Snackbar>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n        \r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(YamiContent);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport YamiContent from \"../components/Yami-component/YamiContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Yami extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"None\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === null) {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"yami\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <YamiContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" exact />;\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, Component} from 'react';\r\nexport const ProjectContext = createContext();\r\n\r\nclass ProjectContextProvider extends Component{\r\n    state = {\r\n            projects:[\r\n                {title:\"project1\",isapproved:true,comment:\"\",id:1},\r\n                {title:\"project2\",isapproved:false,comment:\"\",id:2},\r\n                {title:\"project3\",isapproved:false,comment:\"\",id:3},\r\n                {title:\"project4\",isapproved:false,comment:\"\",id:4},\r\n                {title:\"project5\",isapproved:true,comment:\"\",id:5}\r\n            ]\r\n    }\r\n    Approve = (id) => {\r\n        let projects = [...this.state.projects];\r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.isapproved = !project.isapproved;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n        console.log(this.state);\r\n    }\r\n    addComment = (id,comment) => {\r\n        let projects = [...this.state.projects];\r\n        \r\n        for(var i=0;i<this.state.projects.length;i++){\r\n            if(this.state.projects[i].id===id){\r\n                let project = {...projects[i]};\r\n                if(this.state.projects[i].isapproved===true){\r\n                    alert(\"Already Approved\");\r\n                }else{\r\n                    project.comment = comment;\r\n                    projects[i]=project;\r\n                    this.setState({projects});\r\n                }\r\n                //console.log(this.state.projects[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return ( \r\n            <ProjectContext.Provider value={{...this.state,Approve: this.Approve,addComment: this.addComment}}>\r\n                {this.props.children}\r\n            </ProjectContext.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ProjectContextProvider;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst ProjectDetails = (project) => {\r\n    // const handleClick = () => {\r\n    //     const pro_to_show = project;\r\n    //     ProjectForm(pro_to_show);\r\n    // } \r\n    return (\r\n            <NavLink to={{pathname:\"/projectform\",aboutProps:{project}}}>\r\n                <div>\r\n                    <label className=\"title\"> Title : {project.project.title}</label>\r\n                    <label className=\"id\"> ID : {project.project.id}</label>\r\n                </div>\r\n            </NavLink>\r\n     );\r\n}\r\n \r\nexport default ProjectDetails;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { ProjectContext } from \"../../context/projectcontext\";\r\nimport ProjectDetails from \"./projectdetails\";\r\nimport { Tabs, Tab, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nconst ProjectList = () => {\r\n  const { projects } = useContext(ProjectContext);\r\n  return projects.length ? (\r\n    <div className=\"project-list\">\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>Approved</Tab>\r\n          <Tab>Not Approved</Tab>\r\n        </TabList>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? null : (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            );\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          {projects.map(project => {\r\n            return !project.isapproved ? (\r\n              <ProjectDetails project={project} key={project.id} />\r\n            ) : null;\r\n          })}\r\n        </TabPanel>\r\n      </Tabs>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">No projects submitted</div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport \"./FacultyContent.css\";\r\nimport ProjectContextProvider from \"../../context/projectcontext\";\r\nimport ProjectList from \"../verification/projectlist\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\n\r\nconst FacultyContent = props => {\r\n  return (\r\n    <div>\r\n      <LoggedNavbar />\r\n      <ProjectContextProvider>\r\n        <ProjectList />\r\n      </ProjectContextProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacultyContent;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FacultyContent from \"../components/Faculty-component/FacultyContent\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"faculty\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"no user\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (\r\n      this.state.user.type === \"ig\" ||\r\n      this.state.user.type === \"pic\"\r\n    ) {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <FacultyContent />\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ChangePassword.css\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoggedNavbar from \"../Navbar/LoggedNavbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"100%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    width: \"55%\",\r\n    marginBottom: \"20px\",\r\n    marginTop: \"15px\",\r\n    float: \"right\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  deptLabel: {\r\n    marginTop: \"25px\",\r\n    marginBottom: \"15px\",\r\n    float: \"left\"\r\n  }\r\n});\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      user: \"\",\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      openSuccess: false,\r\n      openFailure :false,\r\n      helptext : \"\",\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ user: res.data });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ user: \"no user\" });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  pushPassword = () => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/changePassword\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        newPassword: this.state.newPassword,\r\n        confirmPassword: this.state.confirmPassword\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ openSuccess: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({openFailure : true});\r\n      });\r\n  };\r\n\r\n  newpasswordHandler = e => {\r\n    this.setState({ newPassword: e.target.value });\r\n  };\r\n  confirmpasswordHandler = e => {\r\n    this.setState({ confirmPassword: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(this.state.newPassword !== this.state.confirmPassword){\r\n      this.setState({helptext : \"Two fields Doesn't match\"}) ;\r\n    }else if(this.state.newPassword.length < 8){\r\n      this.setState({helptext : \"Please Enter a Password with length greater than 8\"});\r\n    }\r\n    else{\r\n       this.pushPassword(); \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const handleClose = (event, reason) => {\r\n      if(this.state.openSuccess){\r\n        this.setState({openSuccess: false, user: \"no user\"});\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n      else if(this.state.openFailure){\r\n        this.setState({openFailure : false});\r\n      }\r\n    };\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user === \"no user\") {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <LoggedNavbar />\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div\r\n              className={classes.paper}\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"6px\"\r\n              }}\r\n            >\r\n              <Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  Your Password was changed successfully Please click anywhere\r\n                  to login again\r\n                </Alert>\r\n              </Snackbar>\r\n              <Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                  There was some problem while changing your password please refresh the page and try again\r\n                </Alert>\r\n              </Snackbar>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={this.handleSubmit}\r\n                noValidate\r\n              >\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  style={{ marginTop: \"15px\", marginBottom: \"15px\" }}\r\n                >\r\n                  Change Password\r\n                </Typography>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  value={this.state.newPassword}\r\n                  onChange={this.newpasswordHandler}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.confirmpasswordHandler}\r\n                />\r\n                <Typography variant=\"subtitle2\" color=\"error\">\r\n                  {this.state.helptext}\r\n                </Typography>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bolder\",\r\n                    backgroundColor: \"#1877f2\",\r\n                    marginBottom: \"25px\"\r\n                  }}\r\n                >\r\n                  Change Password\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ChangePassword);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <React.Fragment>\r\n            <h1>404 Page Not Found</h1>\r\n            <p>The page you were looking for was not found </p>\r\n        </React.Fragment>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\",\r\n    margin: theme.spacing(2)\r\n  },\r\n  backButton: {},\r\n  buttonContainer: {\r\n    padding: \"auto\",\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n          {/* <Link\r\n            to=\"/\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          > */}\r\n            <Button style={{color:\"#000\"}} onClick={()=>{window.history.back()}}  variant=\"contained\">\r\n              <ArrowBackRoundedIcon />\r\n            </Button>\r\n          {/* </Link> */}\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typo1: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"Medium\"\r\n  },\r\n  typo2: {\r\n    textAllign: \"right\",\r\n    fontWeight: \"Light\"\r\n  }\r\n}));\r\n\r\nconst THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst AdminCommentPage = props => {\r\n  const classes = useStyles();\r\n  const comments = props.Comments;\r\n  if (comments.length === 0) {\r\n    console.log(comments.length);\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h4\">No comments have been added</Typography>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <ThemeProvider theme={THEME}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <Paper\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"0px\",\r\n                marginTop: \"50px\",\r\n                marginBottom: \"50px\"\r\n              }}\r\n            >\r\n              <Paper style={{ borderRadius: \"0\" }}>\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{ fontWeight: \"400\", textAlign: \"left\" }}\r\n                >\r\n                  &nbsp;Previous Comments:\r\n                </Typography>\r\n              </Paper>\r\n              {comments\r\n                .slice(0)\r\n                .reverse()\r\n                .map(comment => {\r\n                  let d = new Date(comment.time);\r\n                  return (\r\n                    <React.Fragment key={comment._id}>\r\n                      <Paper style={{ borderRadius: \"0\" }}>\r\n                        <Grid\r\n                          container\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"5px\"\r\n                          }}\r\n                          spacing={2}\r\n                        >\r\n                          <Grid\r\n                            className={classes.typo1}\r\n                            item\r\n                            xs={12}\r\n                            sm={12}\r\n                            md={8}\r\n                          >\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 16,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Author : {comment.author}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Roboto\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Date : {d.toString().substr(4, 12)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Helvetica Neue\",\r\n                                textAlign: \"left\"\r\n                              }}\r\n                            >\r\n                              Time : {d.toString().slice(15, 24)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo1} item xs={12}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 18,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Comment : {comment.text}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </React.Fragment>\r\n                  );\r\n                  // }else{return null}\r\n                })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AdminCommentPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../components/ToUpper\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport AdminCommentPage from \"../components/Admin-component/AdminCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  }\r\n});\r\n\r\n//axios get Request\r\n\r\nclass ControlledExpansionPanels extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      approved: false,\r\n      openSuccess: false,\r\n      openFailure: false\r\n    };\r\n  }\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState({\r\n      comment: comment\r\n    });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  //axios request to send comments\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          console.log(response);\r\n          this.setState({\r\n            adData: null,\r\n            comment: \"\"\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //axios post request to \"/approve\"\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n\r\n    //call axios\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Proposal1 = Proposals[0];\r\n                let Proposal2 = Proposals[1];\r\n                let Proposal3 = Proposals[2];\r\n                let Comments = group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      let appliedDate = new Date(proposal.applied);\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Detailed Statement of Problem:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Internal Agency/External\r\n                                    Agency/CTL/Mastek/or any other:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Methods/Technique/Algorithm\r\n                                    proposed:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Software/Hardware Requirements:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/\r\n                                  {appliedDate.getMonth() + 1}/\r\n                                  {appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:</b>not approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `${SERVER_URL}/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {!proposal.approval.admin &&\r\n                                !Proposal1.approval.hod &&\r\n                                !Proposal2.approval.hod &&\r\n                                !Proposal3.approval.hod ? (\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    onClick={() => {\r\n                                      this.handleApprove(pid, Gid);\r\n                                    }}\r\n                                  >\r\n                                    Approve Proposal\r\n                                  </Button>\r\n                                ) : (\r\n                                  <div>\r\n                                    {proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        This Proposal is Selected\r\n                                      </Button>\r\n                                    ) : proposal.approval.admin ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Waiting For Hod Approval\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved Another Proposal\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#e0e0e0\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\",\r\n                        boxShadow:\r\n                          \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                      }}\r\n                    >\r\n                      <Grid container className={classes.comment}>\r\n                        <Grid item xs={12} style={{ marginBottom: \"30px\" }}>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{ textAlign: \"left\", fontWeight: \"400\" }}\r\n                          >\r\n                            Comments\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comTitle}\r\n                        >\r\n                          <Typography>\r\n                            <b>Add Comments:</b>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                          <TextField\r\n                            className={classes.comField}\r\n                            variant=\"outlined\"\r\n                            component={\"span\"}\r\n                            multiline\r\n                            inputProps={{ style: { fontSize: 14 } }}\r\n                            rows={3}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            onChange={this.commentHandler}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comButton}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.sendComment(Gid);\r\n                            }}\r\n                          >\r\n                            Send Comment\r\n                          </Button>\r\n                          <Snackbar\r\n                            open={this.state.openSuccess}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert\r\n                              onClose={this.handleClose}\r\n                              severity=\"success\"\r\n                            >\r\n                              Successful comment\r\n                            </Alert>\r\n                          </Snackbar>\r\n                          <Snackbar\r\n                            open={this.state.openFailure}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert onClose={this.handleClose} severity=\"error\">\r\n                              Unsuccessful. Comment cannot be empty\r\n                            </Alert>\r\n                          </Snackbar>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                          <AdminCommentPage Comments={Comments} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nControlledExpansionPanels.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ControlledExpansionPanels);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  AppBar,\r\n  Tab,\r\n  Tabs,\r\n  Box,\r\n  useTheme,\r\n  AccordionSummary,\r\n  Grid,\r\n  Button,\r\n  Accordion,\r\n  AccordionDetails\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"span\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst HodProjectList = props => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChangeT = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const handleChangeIndex = index => {\r\n    setValue(index);\r\n  };\r\n\r\n  // console.log(props);\r\n  const Groups = props.Groups;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChangeT}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Approval done\" {...a11yProps(0)} />\r\n          <Tab label=\"Approved by Project Coordinator\" {...a11yProps(1)} />\r\n          <Tab label=\"Pending Approval\" {...a11yProps(2)} />\r\n          <Tab label=\"Not Applied\" {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && pref1HodApproval) ||\r\n              (pref2AdminApproval && pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1AdminApproval = false;\r\n            let pref2AdminApproval = false;\r\n            let pref3AdminApproval = false;\r\n            let pref1HodApproval = false;\r\n            let pref2HodApproval = false;\r\n            let pref3HodApproval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1AdminApproval = pref1.approval.admin;\r\n              pref2AdminApproval = pref2.approval.admin;\r\n              pref3AdminApproval = pref3.approval.admin;\r\n              pref1HodApproval = pref1.approval.hod;\r\n              pref2HodApproval = pref2.approval.hod;\r\n              pref3HodApproval = pref3.approval.hod;\r\n            }\r\n            if (\r\n              (pref1AdminApproval && !pref1HodApproval) ||\r\n              (pref2AdminApproval && !pref2HodApproval) ||\r\n              (pref3AdminApproval &&\r\n                !pref3HodApproval &&\r\n                Group.proposals.length !== 0)\r\n            ) {\r\n              //console.log(Group.name);\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            let pref2 = [];\r\n            let pref3 = [];\r\n            let AppliedOn = null;\r\n            let pref1Approval = false;\r\n            let pref2Approval = false;\r\n            let pref3Approval = false;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              pref2 = Group.proposals[1];\r\n              pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              pref1Approval = pref1.approval.admin;\r\n              pref2Approval = pref2.approval.admin;\r\n              pref3Approval = pref3.approval.admin;\r\n            }\r\n\r\n            if (\r\n              !pref1Approval &&\r\n              !pref2Approval &&\r\n              !pref3Approval &&\r\n              Group.proposals.length !== 0\r\n            ) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              history.push({\r\n                pathname: `/hod/prefs/${id}`,\r\n                state: { Group: Group }\r\n              });\r\n            };\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n\r\n            if (Group.proposals.length === 0) {\r\n              return (\r\n                <Accordion\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid\r\n                      container\r\n                      spacing={3}\r\n                      style={{ width: \"100%\", padding: \"auto\" }}\r\n                    >\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.name}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll-no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.rollno}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Typography>\r\n                          <b>Due Date for Submitting Proposals:</b>\r\n                          &nbsp;&nbsp;\r\n                          {DueDate}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <div>\r\n                            <Button\r\n                              onClick={routeChange}\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              Designation={props.Designation}\r\n                            >\r\n                              Show Preferences\r\n                            </Button>\r\n                          </div>\r\n                        ) : (\r\n                          <Button variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </React.Fragment>\r\n    // <Typography>HELLO</Typography>\r\n  );\r\n};\r\n\r\nexport default HodProjectList;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AssignmentIndIcon from \"@material-ui/icons/AssignmentInd\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"left\"\r\n  },\r\n  profIcon: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  navMenu: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n  },\r\n  ButtonStyle:{\r\n    color:\"#000\",\r\n    backgroundColor:\"#e0e0e0\",\r\n    padding:\"0px 5px\",\r\n    cursor:\"pointer\",\r\n    borderRadius:\"2px\",\r\n    marginRight:\"10px\",\r\n    \"&:hover\": {\r\n      backgroundColor: '#fff'\r\n    }\r\n    \r\n  },\r\n  \r\n\r\n}));\r\n\r\n\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n  const auth = true;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const histor = useHistory();\r\n   const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n   const itemsList = [\r\n    {\r\n      text: \"Home\",\r\n      icon: <HomeIcon />,\r\n      onClick: () => histor.push(\"/hod\")\r\n    },\r\n    {\r\n      text: \"Groups\",\r\n      icon: <PeopleAltIcon/>,\r\n      onClick: () => histor.push(\"/hod/groups\")\r\n    }\r\n  ];\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n      {itemsList.map((item, index) => {\r\n          const { text, icon, onClick } = item;\r\n          return (\r\n            <React.Fragment>\r\n            <ListItem button key={text} onClick={onClick} style={{marginRight:\"40px\"}}>\r\n              {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n            <Divider/>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </List>\r\n     \r\n    </div>\r\n  );\r\n\r\n  return (\r\n        <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} >\r\n            {list(anchor)}\r\n          </Drawer>\r\n          <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#000\" }}>\r\n        <Toolbar>\r\n        <MenuIcon fontSize=\"large\" onClick={toggleDrawer(anchor, true)} className={classes.ButtonStyle} style={{}}/>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Project Management System\r\n          </Typography>\r\n          {auth && (\r\n            <div className={classes.profIcon}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle style={{ fontSize: 40 }} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/cp@2707user\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Change Password\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                  <Link\r\n                    to=\"/logout\"\r\n                    style={{ textDecoration: \"none\", color: \"#000\" }}\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n          <Link\r\n            to=\"/cp@2707user\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              startIcon={<AssignmentIndIcon />}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            to=\"/logout\"\r\n            className={classes.navMenu}\r\n            style={{ textDecoration: \"none\", color: \"#000\" }}\r\n          >\r\n            <Button\r\n              color=\"inherit\"\r\n              variant=\"contained\"\r\n              style={{ marginLeft: \"20px\" }}\r\n              startIcon={<ExitToAppIcon />}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n          </React.Fragment>\r\n          ))}\r\n    </div>\r\n          \r\n      \r\n     \r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withStyles, LinearProgress } from \"@material-ui/core\";\r\nimport Profile from \"../Profile\";\r\nimport HodProjectList from \"./HodProjectList\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport HodSideMenu from \"./HodSideMenu\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"40vh\"\r\n  },\r\n  main: {\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  footer: {\r\n    marginTop: \"auto\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"90%\"\r\n    },\r\n    margin: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  pape: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#fff\"\r\n  },\r\n\r\n  form: {\r\n    width: \"90%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  fields: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  Input: {\r\n    width: \"90%\",\r\n    border: \"1px solid #d1d1d1\",\r\n    padding: \"4px 5px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  Inputfield: {\r\n    width: \"90%\",\r\n    padding: \"0px\"\r\n  },\r\n  gridField: {\r\n    padding: \"8px 0 !important\"\r\n  },\r\n  InputTitle: {\r\n    textAlign: \"left\",\r\n    paddingLeft: \"30px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\"\r\n  }\r\n});\r\n\r\nlet userInfo = [];\r\nlet Groups = null;\r\nlet academicYear=\"\"\r\nlet Ad = null;\r\nlet filled = false;\r\n\r\nclass HodContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      adData: null,\r\n      filled\r\n    };\r\n  }\r\n\r\n  getGroup = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        academicYear=Groups[0].acadYear\r\n        //console.log(academicYear);\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.adData === null) {\r\n      this.getGroup();\r\n    }\r\n    userInfo = this.props.userInfo;\r\n    //console.log(userInfo);\r\n    if (this.state.filled) {\r\n      if (Ad !== 0) {\r\n        return (\r\n          <React.Fragment>\r\n            <HodSideMenu />\r\n            <Profile academicYear={academicYear} userInfo={userInfo} />\r\n            <div\r\n              style={{\r\n                width: \"90%\",\r\n                margin: \"auto\",\r\n                textAlign: \"left\",\r\n                marginTop: \"50px\",\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n              }}\r\n              className={classes.root}\r\n            >\r\n              <HodProjectList Groups={Groups} Designation={userInfo.type}/>\r\n            </div>\r\n            <footer>\r\n              <Footer />\r\n            </footer>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(HodContent);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport HodContent from \"../components/Hod-component/HodContent\";\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"hod\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    //groups = this.state.Groups;\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"hod\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <HodContent userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  createMuiTheme,\r\n  ThemeProvider\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typo1: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"Medium\"\r\n  },\r\n  typo2: {\r\n    textAllign: \"right\",\r\n    fontWeight: \"Light\"\r\n  }\r\n}));\r\n\r\nconst THEME = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\")\r\n  }\r\n});\r\n\r\nconst HodCommentPage = props => {\r\n  const classes = useStyles();\r\n  const comments = props.Comments;\r\n  //console.log(comments);\r\n  if (comments.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h4\">No comments have been added</Typography>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <ThemeProvider theme={THEME}>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <Paper\r\n              style={{\r\n                boxShadow:\r\n                  \"0 2px 4px rgba(0,0,0,.1), 0 8px 16px rgba(0,0,0,.1)\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: \"0px\",\r\n                marginTop: \"50px\",\r\n                marginBottom: \"50px\"\r\n              }}\r\n            >\r\n              <Paper style={{ borderRadius: \"0\" }}>\r\n                {/* <Typography style={{fontWeight:\"bold\"}} variant=\"h4\">\r\n                            Your Previous Comments\r\n                        </Typography> */}\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{ fontWeight: \"400\", textAlign: \"left\" }}\r\n                >\r\n                  Previous Comments:\r\n                </Typography>\r\n              </Paper>\r\n              {comments\r\n                .slice(0)\r\n                .reverse()\r\n                .map(comment => {\r\n                  let d = new Date(comment.time);\r\n                  //comment.time = new Date(d.getTime() + 330*60000);\r\n                  // console.log(d)\r\n                  // console.log(comment.time)\r\n                  // let author=comment.author;\r\n                  // if(author.includes(\"admin\"))\r\n                  return (\r\n                    <React.Fragment key={comment._id}>\r\n                      <Paper style={{ borderRadius: \"0\" }}>\r\n                        <Grid\r\n                          container\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            marginTop: \"5px\",\r\n                            marginBottom: \"5px\"\r\n                          }}\r\n                          spacing={2}\r\n                        >\r\n                          <Grid className={classes.typo1} item xs={8}>\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 20,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Author : {comment.author}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            {/* <Typography style={{fontSize:\"12px\",fontWeight:\"300\"}}>\r\n                                                Time : {comment.time}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Roboto\"\r\n                              }}\r\n                            >\r\n                              Date : {d.toString().substr(4, 12)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo2} item xs={2}>\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"200\",\r\n                                fontSize: 14,\r\n                                fontStyle: \"Helvetica Neue\"\r\n                              }}\r\n                            >\r\n                              Time : {d.toString().slice(15, 24)}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid className={classes.typo1} item xs={12}>\r\n                            {/* <Typography  style={{fontSize:\"18px\" ,fontWeight:\"500\"}} >\r\n                                                Comment : {comment.text}\r\n                                            </Typography> */}\r\n                            <Typography\r\n                              style={{\r\n                                fontWeight: \"400\",\r\n                                fontSize: 20,\r\n                                fontStyle: \"Arial\"\r\n                              }}\r\n                            >\r\n                              Comment : {comment.text}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </React.Fragment>\r\n                  );\r\n                  // }else{return null}\r\n                })}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HodCommentPage;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  ThemeProvider,\r\n  Paper,\r\n  TableBody,\r\n  createMuiTheme,\r\n  responsiveFontSizes\r\n} from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport HodCommentPage from \"./HodCommentPage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  tableContainer: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"50px\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  }\r\n});\r\n\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false\r\n    };\r\n  }\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState(\r\n      {\r\n        comment: comment\r\n      }\r\n      // function () {\r\n      //   console.log(this.state.comment);\r\n      // }\r\n    );\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          console.log(response);\r\n          this.setState({\r\n            comment: \"\",\r\n            adData: null\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n        Groups = res.data;\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    console.log(pid, id);\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    const Group = location.state.Group;\r\n    const Gid = Group.id;\r\n    let Presentations = Group.presentation;\r\n    Presentations.sort((a, b) =>\r\n      new Date(a.scheduled_date).getTime() >\r\n      new Date(b.scheduled_date).getTime()\r\n        ? 1\r\n        : -1\r\n    );\r\n\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              if (group.id === Group.id) {\r\n                let Proposals = group.proposals;\r\n                let Comments = group.comments;\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(Group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let Gid = Group.id;\r\n                      let appliedDate = new Date(proposal.applied);\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Detailed Statement of Problem:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Internal Agency/External\r\n                                    Agency/CTL/Mastek/or any other:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Methods/Technique/Algorithm\r\n                                    proposed:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Software/Hardware Requirements:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/\r\n                                  {appliedDate.getMonth() + 1}/\r\n                                  {appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `${SERVER_URL}/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    {Presentations.length !== 0 ? (\r\n                      <React.Fragment>\r\n                        <ThemeProvider theme={theme}>\r\n                          <Typography\r\n                            style={{ marginTop: \"20px\" }}\r\n                            variant=\"h4\"\r\n                          >\r\n                            Presentation Details\r\n                          </Typography>\r\n                          <TableContainer\r\n                            style={{ backgroundColor: \"#d3d3d3\" }}\r\n                            className={classes.tableContainer}\r\n                            component={Paper}\r\n                          >\r\n                            <Table\r\n                              className={classes.table}\r\n                              size=\"small\"\r\n                              aria-label=\"a dense table\"\r\n                            >\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell align=\"center\">No.</TableCell>\r\n                                  <TableCell align=\"center\">Date</TableCell>\r\n                                  <TableCell align=\"center\">Day</TableCell>\r\n                                  <TableCell align=\"center\">Time</TableCell>\r\n                                  <TableCell align=\"center\">Marks</TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {Presentations.map((Presentation, index) => (\r\n                                  <TableRow key={Presentation._id}>\r\n                                    <TableCell align=\"center\">\r\n                                      {index + 1}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {new Date(\r\n                                        Presentation.scheduled_date\r\n                                      ).getDate()}\r\n                                      /\r\n                                      {new Date(\r\n                                        Presentation.scheduled_date\r\n                                      ).getMonth() + 1}\r\n                                      /\r\n                                      {new Date(\r\n                                        Presentation.scheduled_date\r\n                                      ).getFullYear()}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      {\r\n                                        days[\r\n                                          new Date(\r\n                                            Presentation.scheduled_date\r\n                                          ).getDay()\r\n                                        ]\r\n                                      }\r\n                                    </TableCell>\r\n                                    {new Date(\r\n                                      Presentation.scheduled_date\r\n                                    ).getHours() > 12 ? (\r\n                                      <TableCell align=\"center\">\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getHours() - 12}\r\n                                        :\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getMinutes()}{\" \"}\r\n                                        pm\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"center\">\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getHours()}\r\n                                        :\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getMinutes()}{\" \"}\r\n                                        am\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {Presentation.marks === null ? (\r\n                                      <React.Fragment>\r\n                                        {new Date(\r\n                                          Presentation.scheduled_date\r\n                                        ).getTime() > Date.now() ? (\r\n                                          <TableCell align=\"center\">\r\n                                            Presentation Not conducted\r\n                                          </TableCell>\r\n                                        ) : (\r\n                                          <TableCell align=\"center\">\r\n                                            <Typography\r\n                                              style={{ fontSize: \"12\" }}\r\n                                              color=\"secondary\"\r\n                                            >\r\n                                              Presentation Missing\r\n                                            </Typography>\r\n                                          </TableCell>\r\n                                        )}\r\n                                      </React.Fragment>\r\n                                    ) : (\r\n                                      <TableCell align=\"center\">\r\n                                        {Presentation.marks}\r\n                                      </TableCell>\r\n                                    )}\r\n                                  </TableRow>\r\n                                ))}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                        </ThemeProvider>\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <React.Fragment>\r\n                        <Typography style={{ marginTop: \"20px\" }} variant=\"h4\">\r\n                          Presentations\r\n                        </Typography>\r\n                        <Typography>\r\n                          No Presentations have been scheduled.\r\n                        </Typography>\r\n                      </React.Fragment>\r\n                    )}\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#e0e0e0\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\",\r\n                        boxShadow:\r\n                          \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                      }}\r\n                    >\r\n                      <Grid container className={classes.comment}>\r\n                        <Grid item xs={12} style={{ marginBottom: \"30px\" }}>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{ textAlign: \"left\", fontWeight: \"400\" }}\r\n                          >\r\n                            Comments\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comTitle}\r\n                        >\r\n                          <Typography>\r\n                            <b>Add Comments:</b>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                          <TextField\r\n                            className={classes.comField}\r\n                            variant=\"outlined\"\r\n                            component={\"span\"}\r\n                            multiline\r\n                            inputProps={{ style: { fontSize: 14 } }}\r\n                            rows={3}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            onChange={this.commentHandler}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comButton}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.sendComment(Gid);\r\n                            }}\r\n                          >\r\n                            Send Comment\r\n                          </Button>\r\n                          <Snackbar\r\n                            open={this.state.openSuccess}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert\r\n                              onClose={this.handleClose}\r\n                              severity=\"success\"\r\n                            >\r\n                              Successful comment\r\n                            </Alert>\r\n                          </Snackbar>\r\n                          <Snackbar\r\n                            open={this.state.openFailure}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert onClose={this.handleClose} severity=\"error\">\r\n                              Unsuccessful. Comment cannot be empty\r\n                            </Alert>\r\n                          </Snackbar>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                          <HodCommentPage Comments={Comments} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Archive from \"@material-ui/icons/Archive\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet department = null;\r\nlet Gname = null;\r\nlet Groupid = null;\r\nlet deleteMemberEmail = null;\r\nlet groupData = [];\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  mainAccor: {\r\n    color: \"#303030\",\r\n    margin: \"auto\"\r\n  },\r\n  mainAccorContainer: {\r\n    width: \"80%\",\r\n    margin: \"2px auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  memberHolder: {\r\n    width: \"10%\",\r\n    backgroundColor: \"#909090\"\r\n  },\r\n  groupCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    textAlign: \"left\"\r\n  },\r\n  accorStyle: {\r\n    backgroundColor: \"#d3d3d3\"\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  presCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  }\r\n});\r\n\r\nclass AdminGroupsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      groupDetails: null,\r\n      deleteMemberOpen: false,\r\n      addMemberOpen: false,\r\n      memberName: \"\",\r\n      memberEmail: \"\",\r\n      memberRollno: \"\",\r\n      deleteProposalsOpen: false,\r\n      deleteAllUserDialog: false,\r\n      archive: false,\r\n      loading: false,\r\n      archiveSuccess: false\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getStudents?by=group\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        groupData = res.data;\r\n        this.setState({\r\n          groupDetails: res.data\r\n        });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //DELETE MEMBERS---------------------------------------------\r\n  handleDeleteMemberDialogOpen = (id, email) => {\r\n    deleteMemberEmail = email;\r\n    Groupid = id;\r\n    console.log(deleteMemberEmail, Groupid);\r\n    this.setState({\r\n      deleteMemberOpen: true\r\n    });\r\n  };\r\n  handleDeleteMemberDialogClose = () => {\r\n    this.setState({\r\n      deleteMemberOpen: false\r\n    });\r\n  };\r\n  handleDeleteMember = (gid, email) => {\r\n    this.handleDeleteMemberDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=student\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: gid,\r\n        email: email\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Member deleted!!!!\");\r\n        deleteMemberEmail = null;\r\n        Groupid = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //DELETE PROPOSALS SECTION--------------------------------\r\n  handleDeleteProposalsDialogOpen(e, gid) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    Groupid = gid;\r\n    console.log(Groupid);\r\n    this.setState({\r\n      deleteProposalsOpen: true\r\n    });\r\n  }\r\n  handleDeleteProposalsDialogClose = () => {\r\n    this.setState({\r\n      deleteProposalsOpen: false\r\n    });\r\n  };\r\n  handleDeleteProposals = gid => {\r\n    this.handleDeleteProposalsDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteProposal\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: gid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Groupid = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleDeleteAllUser = () => {\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteAllUsers\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ loading: false, deleteAllUserDialog: false });\r\n        window.location.reload();\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loading: false, deleteAllUserDialog: false });\r\n        console.log(err);\r\n      });\r\n  };\r\n  handleArchieve = () => {\r\n    this.setState({ loading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/archive\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ loading: false, archive: false, archiveSuccess: true });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loading: false, archive: false });\r\n        console.log(err);\r\n      });\r\n  };\r\n  //ADD MEMBER SECTION ------------------------------------\r\n  handleAddMemberDialogOpen = (gid, dept, gname) => {\r\n    Groupid = gid;\r\n    department = dept;\r\n    Gname = gname;\r\n    console.log(Groupid, department, Gname);\r\n    this.setState({\r\n      addMemberOpen: true\r\n    });\r\n  };\r\n  handleAddMemberDialogClose = () => {\r\n    this.setState({\r\n      addMemberOpen: false\r\n    });\r\n  };\r\n\r\n  handleMemberNameChange = e => {\r\n    this.setState({\r\n      memberName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleMemberEmailChange = e => {\r\n    this.setState({\r\n      memberEmail: e.target.value\r\n    });\r\n  };\r\n  handleMemberRollnoChange = e => {\r\n    this.setState({\r\n      memberRollno: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddMember = (id, department, groupName) => {\r\n    console.log(\r\n      id,\r\n      this.state.memberName,\r\n      this.state.memberRollno,\r\n      this.state.memberEmail,\r\n      department,\r\n      groupName\r\n    );\r\n    if (\r\n      this.state.memberName === \"\" ||\r\n      this.state.memberEmail === \"\" ||\r\n      this.state.memberRollno === \"\"\r\n    ) {\r\n      alert(\"Member name,email or rollno cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addmember\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: id,\r\n          name: this.state.memberName,\r\n          email: this.state.memberEmail,\r\n          rollno: this.state.memberRollno,\r\n          department: department,\r\n          groupName: groupName\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"Member Added Successfully!!!!!\");\r\n          Groupid = null;\r\n          department = null;\r\n          Gname = null;\r\n          this.setState({\r\n            memberEmail: \"\",\r\n            memberRollno: \"\",\r\n            memberName: \"\",\r\n            addMemberOpen: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"Member not added\");\r\n          this.setState({\r\n            addHodOpen: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleChildClick = e => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.loading) return <LinearProgress />;\r\n    if (this.state.groupDetails === null) {\r\n      this.checkData();\r\n      return <LinearProgress />;\r\n    }\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n          return;\r\n        }\r\n        this.setState({ archiveSuccess: false });\r\n      };\r\n      return (\r\n        <React.Fragment>\r\n          <SideMenu />\r\n\r\n          {/* Dialog box for delete MEMBER confirmation*/}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteMemberOpen}\r\n              onClose={this.handleDeleteMemberDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Member\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete this Member? You need to\r\n                  assign another student after deleting this one\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteMemberDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    this.handleDeleteMember(Groupid, deleteMemberEmail)\r\n                  }\r\n                  color=\"primary\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/*------------------------ ADD MEMBER DIALOG ---------------------*/}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.addMemberOpen}\r\n              onClose={() => this.handleAddMemberDialogClose}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Add Member</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Please add name,email and Rollno of Student\r\n                </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"MemberName\"\r\n                  label=\"Member Name\"\r\n                  type=\"text\"\r\n                  value={this.state.memberName}\r\n                  onChange={this.handleMemberNameChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"MemberEmail\"\r\n                  label=\"Member Email\"\r\n                  type=\"text\"\r\n                  value={this.state.memberEmail}\r\n                  onChange={this.handleMemberEmailChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"MemberRoll\"\r\n                  label=\"Member Roll\"\r\n                  type=\"text\"\r\n                  value={this.state.memberRollno}\r\n                  onChange={this.handleMemberRollnoChange}\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleAddMemberDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() =>\r\n                    this.handleAddMember(Groupid, department, Gname)\r\n                  }\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/* -----------------DELETE PROPOSALS DIALOG---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteProposalsOpen}\r\n              onClose={this.handleDeleteProposalsDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Proposals\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete Submitted Proposals? If you\r\n                  delete the Proposals then student will have to fill the\r\n                  proposals again\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteProposalsDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={() => this.handleDeleteProposals(Groupid)}\r\n                  color=\"primary\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          {/* -----------------DELETE ALL USER DIALOG---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteAllUserDialog}\r\n              onClose={() => {\r\n                this.setState({ deleteAllUserDialog: false });\r\n              }}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete ALL User\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to delete All users and groups? All the\r\n                  students,HOD,guides will be removed from the database as well\r\n                  as the details of all groups will also be deleted before\r\n                  deleting make sure you have archived the groups\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ deleteAllUserDialog: false });\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleDeleteAllUser} color=\"primary\">\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          {/* -----------------ARCHIEVE---------------------- */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.archive}\r\n              onClose={() => {\r\n                this.setState({ archive: false });\r\n              }}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Archive Groups\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Archiving will save all the groups data in the archive\r\n                  section.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ archive: false });\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={this.handleArchieve} color=\"primary\">\r\n                  Archive\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          <Snackbar\r\n            open={this.state.archiveSuccess}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              Archived Groups Data Successfully\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          {/* -----------------------MEMBER ACCORDION------------------------*/}\r\n          {groupData.length !== 0 ? (\r\n            <div className={classes.mainAccorContainer}>\r\n              <br />\r\n              <Grid container style={{ padding: \"5px\" }}>\r\n                <Grid item xs={12} sm={6} style={{ margin: \"auto\" }}>\r\n                  <Typography variant=\"h3\" style={{ marginBottom: \"18px\" }}>\r\n                    Manage Groups\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  style={{ textAlign: \"right\", margin: \"auto\" }}\r\n                >\r\n                  <Button\r\n                    endIcon={<Archive />}\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      this.setState({ archive: true });\r\n                    }}\r\n                    color=\"primary\"\r\n                    style={{ margin: \"5px 5px\" }}\r\n                  >\r\n                    Archive\r\n                  </Button>\r\n                  <Button\r\n                    endIcon={<DeleteIcon />}\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      this.setState({ deleteAllUserDialog: true });\r\n                    }}\r\n                    color=\"primary\"\r\n                  >\r\n                    Delete All Users\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {groupData.map(group => {\r\n                let proposal1Stat = null;\r\n                let proposal2Stat = null;\r\n                let proposal3Stat = null;\r\n                if (group.proposals.length === 3) {\r\n                  proposal1Stat = group.proposals[0].approval.admin;\r\n                  proposal2Stat = group.proposals[1].approval.admin;\r\n                  proposal3Stat = group.proposals[2].approval.admin;\r\n                }\r\n\r\n                let gid = group.id;\r\n                let dept = group.department;\r\n                let gname = group.name;\r\n                return (\r\n                  <Accordion className={classes.mainAccor} key={group.name}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        <b>{toFirstCharUppercase(group.name)}</b>\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <React.Fragment>\r\n                        {/* MEMBERS ACCORDON */}\r\n                        <div className={classes.root}>\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel1a-content\"\r\n                              id=\"panel1a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Members\r\n                              </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div style={{ width: \"100%\" }}>\r\n                                <Card className={classes.groupCard}>\r\n                                  <Grid container>\r\n                                    <Grid item xs={1}></Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        <b>Name</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      <Typography>\r\n                                        <b>Email</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      <Typography>\r\n                                        <b>Rollno</b>\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      {group.members.length < 3 ? (\r\n                                        <Button\r\n                                          onClick={() =>\r\n                                            this.handleAddMemberDialogOpen(\r\n                                              gid,\r\n                                              dept,\r\n                                              gname\r\n                                            )\r\n                                          }\r\n                                          variant=\"contained\"\r\n                                          color=\"primary\"\r\n                                        >\r\n                                          Add Member\r\n                                        </Button>\r\n                                      ) : null}\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Card>\r\n                                {group.members.map(member => {\r\n                                  let dmemberEmail = member.email;\r\n                                  return (\r\n                                    <Card\r\n                                      className={classes.groupCard}\r\n                                      key={member.email}\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={1}></Grid>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography>{member.name}</Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography>\r\n                                            {member.email}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          <Typography>\r\n                                            {member.rollno}\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          <DeleteIcon\r\n                                            className={classes.deleteIconStyle}\r\n                                            onClick={() =>\r\n                                              this.handleDeleteMemberDialogOpen(\r\n                                                gid,\r\n                                                dmemberEmail\r\n                                              )\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    </Card>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n\r\n                          {/* PROPOSAL ACCORDION */}\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel2a-content\"\r\n                              id=\"panel2a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Proposals\r\n                              </Typography>\r\n                              {group.proposals.length !== 0 &&\r\n                              !proposal1Stat &&\r\n                              !proposal2Stat &&\r\n                              !proposal3Stat ? (\r\n                                <Button\r\n                                  onClick={e => {\r\n                                    this.handleDeleteProposalsDialogOpen(\r\n                                      e,\r\n                                      gid\r\n                                    );\r\n                                  }}\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                >\r\n                                  Delete All Proposals\r\n                                </Button>\r\n                              ) : null}\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div className={classes.root}>\r\n                                {group.proposals.length === 3 ? (\r\n                                  group.proposals.map((proposal, index) => {\r\n                                    let approval = proposal.approval;\r\n                                    // let pid = proposal._id;\r\n\r\n                                    return (\r\n                                      <Accordion\r\n                                        style={{ textAlign: \"left\" }}\r\n                                        key={index}\r\n                                      >\r\n                                        <AccordionSummary\r\n                                          expandIcon={<ExpandMoreIcon />}\r\n                                          aria-controls=\"panel1a-content\"\r\n                                          id=\"panel1a-header\"\r\n                                        >\r\n                                          <Typography\r\n                                            className={classes.heading}\r\n                                          >\r\n                                            Proposal {index + 1}\r\n                                          </Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                          <Grid\r\n                                            container\r\n                                            className={classes.content}\r\n                                            spacing={1}\r\n                                          >\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Title of Proposal:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.title}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Detailed Statement of\r\n                                                  Problem:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.details}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Internal Agency/External\r\n                                                  Agency/CTL/Mastek/or any\r\n                                                  other:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.agency}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Methods/Technique/Algorithm\r\n                                                  proposed:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.method}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Software/Hardware\r\n                                                  Requirements:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.requirements}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Domain of\r\n                                                  Specialization:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.specialization}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Result Expected:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.result}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>Appied On:&nbsp;&nbsp;</b>\r\n                                                {/* {proposal.applied.split(\"T\")[0]} */}\r\n                                                {proposal.applied.substr(0, 10)}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              <Typography>\r\n                                                <b>\r\n                                                  Attached Print:&nbsp;&nbsp;\r\n                                                </b>\r\n                                                {proposal.attachPrints}\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              {approval.admin ? (\r\n                                                <Typography>\r\n                                                  <b>Admin approval status:</b>\r\n                                                  Approved\r\n                                                </Typography>\r\n                                              ) : (\r\n                                                <Typography>\r\n                                                  <b>Admin approval status:</b>\r\n                                                  not approved\r\n                                                </Typography>\r\n                                              )}\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                              {approval.hod ? (\r\n                                                <Typography>\r\n                                                  <b>HOD approval status:</b>\r\n                                                  Approved\r\n                                                </Typography>\r\n                                              ) : (\r\n                                                <Typography>\r\n                                                  <b>HOD approval status:</b>not\r\n                                                  approved\r\n                                                </Typography>\r\n                                              )}\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                              <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                onClick={() => {\r\n                                                  window.open(\r\n                                                    `${SERVER_URL}/${proposal.attachPrints}`\r\n                                                  );\r\n                                                }}\r\n                                              >\r\n                                                Show Uploaded Document\r\n                                              </Button>\r\n                                            </Grid>\r\n                                            <Grid\r\n                                              item\r\n                                              xs={12}\r\n                                              sm={6}\r\n                                              style={{ textAlign: \"right\" }}\r\n                                            ></Grid>\r\n                                          </Grid>\r\n                                        </AccordionDetails>\r\n                                      </Accordion>\r\n                                    );\r\n                                  })\r\n                                ) : (\r\n                                  <Typography>\r\n                                    Proposals Not filled yet\r\n                                  </Typography>\r\n                                )}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n\r\n                          {/* PRESENTATION ACCORDION */}\r\n                          <Accordion className={classes.accorStyle}>\r\n                            <AccordionSummary\r\n                              expandIcon={<ExpandMoreIcon />}\r\n                              aria-controls=\"panel3a-content\"\r\n                              id=\"panel3a-header\"\r\n                            >\r\n                              <Typography className={classes.heading}>\r\n                                Presentation\r\n                              </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <div style={{ width: \"100%\" }}>\r\n                                <Card className={classes.presCard}>\r\n                                  <Grid container>\r\n                                    <Grid item xs={1}></Grid>\r\n                                    <Grid item xs={3}>\r\n                                      Presentation\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      Date\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      Time\r\n                                    </Grid>\r\n                                    <Grid item xs={3}>\r\n                                      Marks\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Card>\r\n                                {group.presentation.map((pres, index) => {\r\n                                  return (\r\n                                    <Card\r\n                                      className={classes.presCard}\r\n                                      key={index}\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={1}></Grid>\r\n                                        <Grid item xs={3}>\r\n                                          Presentation {index + 1}\r\n                                        </Grid>\r\n                                        <Grid item xs={3}>\r\n                                          {pres.scheduled_date.split(\"T\")[0]}\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                          {pres.scheduled_date.slice(11, 16)}\r\n                                        </Grid>\r\n                                        {pres.marks === null ? (\r\n                                          <Grid item xs={3}>\r\n                                            Not assigned\r\n                                          </Grid>\r\n                                        ) : (\r\n                                          <Grid item xs={3}>\r\n                                            {pres.marks}\r\n                                          </Grid>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </Card>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <Typography variant=\"h3\" style={{ marginBottom: \"18px\" }}>\r\n              No Groups\r\n            </Typography>\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminGroupsPage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nlet dguideId = null;\r\nlet dguideEmail = null;\r\nlet dguideName = null;\r\nlet checkHod = false;\r\nlet dHodId = false;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular\r\n  },\r\n  accorStyle: {\r\n    width: \"90%\",\r\n    margin: \"auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  guideList: {\r\n    padding: \"10px\",\r\n    margin: \"0px auto\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  },\r\n  guideListHolder: {\r\n    width: \"80%\",\r\n    margin: \"auto\",\r\n    marginTop: \"30px\",\r\n    padding: \"20px\"\r\n    //backgroundColor:\"#fff\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  mHodContainer: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    width: \"80%\",\r\n    margin: \"auto\",\r\n    marginTop: \"80px\",\r\n    boxShadow: \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n  }\r\n});\r\n\r\nlet guideData = null;\r\n\r\nclass AdminGuidePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      guideDetails: null,\r\n      Open: false,\r\n      Loading: false,\r\n      guideName: \"\",\r\n      guideEmail: \"\",\r\n      hodName: \"\",\r\n      hodEmail: \"\",\r\n      deleteOpen: false,\r\n      deleteHodOpen: false,\r\n      addHodOpen: false\r\n    };\r\n  }\r\n\r\n  //Delete Hod SEction\r\n  handleDeleteHodDialogOpen = id => {\r\n    dHodId = id;\r\n    this.setState({\r\n      deleteHodOpen: true\r\n    });\r\n  };\r\n  handleDeleteHodDialogClose = () => {\r\n    this.setState({\r\n      deleteHodOpen: false\r\n    });\r\n  };\r\n\r\n  handleDeleteHod = id => {\r\n    this.handleDeleteHodDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=hod\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Hod deleted!!!!\");\r\n        dHodId = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Add Hod Section\r\n  handleAddHodDialogOpen = () => {\r\n    this.setState({\r\n      addHodOpen: true\r\n    });\r\n  };\r\n  handleAddHodDialogClose = () => {\r\n    this.setState({\r\n      addHodOpen: false\r\n    });\r\n  };\r\n\r\n  handleHodNameChange = e => {\r\n    this.setState({\r\n      hodName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleHodEmailChange = e => {\r\n    this.setState({\r\n      hodEmail: e.target.value\r\n    });\r\n  };\r\n\r\n  //axios for addHod\r\n  handleAddHod = () => {\r\n    if (this.state.hodName === \"\" || this.state.hodEmail === \"\") {\r\n      alert(\"HOD name or email cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addhod\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name: this.state.hodName,\r\n          email: this.state.hodEmail\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"HOD Assigned Successfully!!!!!\");\r\n          this.setState({\r\n            hodName: \"\",\r\n            hodEmail: \"\",\r\n            addHodOpen: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"HOD not assigned\");\r\n          this.setState({\r\n            addHodOpen: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Add Guide Button & different options in Dialog Box\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      Open: true\r\n    });\r\n  };\r\n  handleCloseCancel = () => {\r\n    console.log(\"CANCEL\");\r\n    this.setState({\r\n      Open: false\r\n    });\r\n  };\r\n  handleCloseSubmit = () => {\r\n    this.setState({\r\n      Loading: true\r\n    });\r\n    if (this.state.guideName === \"\" || this.state.guideEmail === \"\") {\r\n      alert(\"Guide name or email cannot be empty\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/addGuide?type=new\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          name: this.state.guideName,\r\n          email: this.state.guideEmail\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          console.log(\"submitted\");\r\n          this.setState({\r\n            Loading: false,\r\n            guideName: \"\",\r\n            guideEmail: \"\",\r\n            Open: false\r\n          });\r\n\r\n          window.location.reload(false);\r\n        })\r\n\r\n        .catch(err => {\r\n          alert(\"Guide not added\");\r\n          this.setState({\r\n            Loading: false,\r\n            Open: false\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  //Delete guide DialogBOX\r\n\r\n  handleDeleteDialogOpen = (id, name, email) => {\r\n    dguideEmail = email;\r\n    dguideId = id;\r\n    dguideName = name;\r\n    this.setState({\r\n      deleteOpen: true\r\n    });\r\n  };\r\n  handleDeleteDialogClose = () => {\r\n    this.setState({\r\n      deleteOpen: false\r\n    });\r\n  };\r\n\r\n  handleDeleteGuide = (id, name, email) => {\r\n    this.handleDeleteDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteUser?type=guide\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        name: name,\r\n        email: email\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"guide deleted!!!!\");\r\n        dguideEmail = null;\r\n        dguideId = null;\r\n        dguideName = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Dialog box Guide name and email\r\n\r\n  handleGNameChange = e => {\r\n    this.setState({\r\n      guideName: e.target.value\r\n    });\r\n  };\r\n\r\n  handleGEmailChange = e => {\r\n    this.setState({\r\n      guideEmail: e.target.value\r\n    });\r\n  };\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  getGuide = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/getGuide\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        guideData = res.data;\r\n        this.setState({\r\n          guideDetails: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (guideData === null) {\r\n      this.getGuide();\r\n    }\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      if (guideData !== null) {\r\n        return (\r\n          <React.Fragment>\r\n            <SideMenu />\r\n            {/* MANAGE GUIDE UI START */}\r\n            <div className={classes.mHodContainer}>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <Typography variant=\"h2\" style={{ margin: \"20px auto\" }}>\r\n                    Manage Guide\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  {!this.state.Loading ? (\r\n                    <div>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleClickOpen}\r\n                        style={{ margin: \"35px\", padding: \"10px 50px\" }}\r\n                      >\r\n                        Add Guide\r\n                      </Button>\r\n                      <Dialog\r\n                        open={this.state.Open}\r\n                        onClose={this.handleCloseCancel}\r\n                        aria-labelledby=\"form-dialog-title\"\r\n                      >\r\n                        <DialogTitle id=\"form-dialog-title\">\r\n                          Add Guide\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <DialogContentText>\r\n                            Please add name and email of Guide.\r\n                          </DialogContentText>\r\n                          <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"guideName\"\r\n                            label=\"Guide Name\"\r\n                            type=\"text\"\r\n                            value={this.state.guideName}\r\n                            onChange={this.handleGNameChange}\r\n                            fullWidth\r\n                            required\r\n                          />\r\n                          <TextField\r\n                            margin=\"dense\"\r\n                            id=\"guideEmail\"\r\n                            label=\"Guide Email\"\r\n                            type=\"text\"\r\n                            value={this.state.guideEmail}\r\n                            onChange={this.handleGEmailChange}\r\n                            fullWidth\r\n                            required\r\n                          />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button\r\n                            onClick={this.handleCloseCancel}\r\n                            color=\"primary\"\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            onClick={this.handleCloseSubmit}\r\n                            color=\"primary\"\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <CircularProgress />\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div className={classes.guideListHolder}>\r\n                {guideData !== null ? (\r\n                  guideData.map(guide => {\r\n                    if (guide.type === \"hod\") {\r\n                      checkHod = true;\r\n                    }\r\n                    if (guide.type === \"guide\")\r\n                      return (\r\n                        <Card className={classes.guideList} key={guide.name}>\r\n                          <Grid container>\r\n                            <Grid item xs={1}></Grid>\r\n                            <Grid item xs={4}>\r\n                              <Typography>{guide.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <Typography>{guide.email}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              <DeleteIcon\r\n                                className={classes.deleteIconStyle}\r\n                                onClick={() =>\r\n                                  this.handleDeleteDialogOpen(\r\n                                    guide.id,\r\n                                    guide.name,\r\n                                    guide.email\r\n                                  )\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Card>\r\n                      );\r\n                    else return null;\r\n                  })\r\n                ) : (\r\n                  <CircularProgress />\r\n                )}\r\n              </div>\r\n              {/* Dialog box for delete confirmation of Guide   */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.deleteOpen}\r\n                  onClose={this.handleDeleteDialogClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete Guide\"}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      Are you sure you want to delete this guide? If this guide\r\n                      is assigned to any groups,then you need to assign guides\r\n                      for that group again\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleDeleteDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() =>\r\n                        this.handleDeleteGuide(\r\n                          dguideId,\r\n                          dguideName,\r\n                          dguideEmail\r\n                        )\r\n                      }\r\n                      color=\"primary\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </div>\r\n            {/* MANAGE GUIDE UI END */}\r\n            {/* MANAGE HOD UI START */}\r\n            <div\r\n              className={classes.mHodContainer}\r\n              style={{ marginBottom: \"200px\" }}\r\n            >\r\n              <Grid container>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <Typography variant=\"h2\" style={{ margin: \"20px auto\" }}>\r\n                    Manage Hod\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  {\" \"}\r\n                  <div>\r\n                    {checkHod ? null : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleAddHodDialogOpen}\r\n                        style={{ margin: \"35px\", padding: \"10px 50px\" }}\r\n                      >\r\n                        Assign HOD\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <div className={classes.guideListHolder}>\r\n                {guideData !== null ? (\r\n                  guideData.map(hod => {\r\n                    if (hod.type === \"hod\") {\r\n                      checkHod = true;\r\n                      return (\r\n                        <Card className={classes.guideList}>\r\n                          <Grid container>\r\n                            <Grid item xs={1}></Grid>\r\n                            <Grid item xs={4}>\r\n                              <Typography>{hod.name}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <Typography>{hod.email}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              <DeleteIcon\r\n                                className={classes.deleteIconStyle}\r\n                                onClick={() =>\r\n                                  this.handleDeleteHodDialogOpen(hod.id)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Card>\r\n                      );\r\n                    } else return null;\r\n                  })\r\n                ) : (\r\n                  <CircularProgress />\r\n                )}\r\n              </div>\r\n              {/* Dialog for Delete hod */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.deleteHodOpen}\r\n                  onClose={this.handleDeleteHodDialogClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete HOD\"}\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      Are you sure you want to delete this HOD?\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleDeleteHodDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => this.handleDeleteHod(dHodId)}\r\n                      color=\"primary\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n              {/* Add HOD DIALOG */}\r\n              <div>\r\n                <Dialog\r\n                  open={this.state.addHodOpen}\r\n                  onClose={this.handleAddHodDialogClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                  <DialogTitle id=\"form-dialog-title\">Add HOD</DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>\r\n                      Please add name and email of HOD\r\n                    </DialogContentText>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"HodName\"\r\n                      label=\"HOD Name\"\r\n                      type=\"text\"\r\n                      value={this.state.hodName}\r\n                      onChange={this.handleHodNameChange}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"HodEmail\"\r\n                      label=\"HOD Email\"\r\n                      type=\"text\"\r\n                      value={this.state.hodEmail}\r\n                      onChange={this.handleHodEmailChange}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={this.handleAddHodDialogClose}\r\n                      color=\"primary\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button onClick={this.handleAddHod} color=\"primary\">\r\n                      Submit\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </div>\r\n            </div>\r\n            {/* MANAGE HOD UI END */}\r\n          </React.Fragment>\r\n        );\r\n      } else return <LinearProgress />;\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(AdminGuidePage);\r\n","import React, { Component } from \"react\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { withStyles, Grid, Card } from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport qs from \"qs\";\r\n\r\nlet dArchiveId = null;\r\nlet archData = null;\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  mainAccor: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    margin: \"auto\"\r\n  },\r\n  mainAccorContainer: {\r\n    width: \"80%\",\r\n    margin: \"2px auto\",\r\n    marginTop: \"30px\"\r\n  },\r\n  memberHolder: {\r\n    width: \"10%\",\r\n    backgroundColor: \"#909090\"\r\n  },\r\n  groupCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    textAlign: \"left\"\r\n  },\r\n  accorStyle: {\r\n    backgroundColor: \"#d3d3d3\"\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  },\r\n  presCard: {\r\n    width: \"100%\",\r\n    padding: \"8px 0px\",\r\n    marginTop: \"2px\",\r\n    borderRadius: \"0px\",\r\n    textAlign: \"left\"\r\n  }\r\n});\r\n\r\nclass AdminArchives extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = true;\r\n    if (token === \"admin\") {\r\n      loggedIn = true;\r\n    }\r\n\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\",\r\n      expanded: false,\r\n      archiveData: null,\r\n      deleteDialogOpen: false\r\n    };\r\n  }\r\n\r\n  //DIALOG FOR DELETE ARCHIVE\r\n  handleDeleteArchiveDialogOpen = (e, id) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    dArchiveId = id;\r\n    this.setState({\r\n      deleteDialogOpen: true\r\n    });\r\n  };\r\n  handleDeleteArchiveDialogClose = () => {\r\n    this.setState({\r\n      deleteDialogOpen: false\r\n    });\r\n  };\r\n  handleDeleteArchive = id => {\r\n    this.handleDeleteArchiveDialogClose();\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteArchieve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(\"Archive deleted!!!!\");\r\n        dArchiveId = null;\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Get Archive Data\r\n  getArchive = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/archive\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        archData = res.data.data;\r\n        console.log(res.data.data);\r\n        this.setState(\r\n          {\r\n            archiveData: res.data.data\r\n          },\r\n          console.log(this.state.archiveData)\r\n        );\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (this.state.user === \"\" && this.state.archiveData === null) {\r\n      this.getStat();\r\n      this.getArchive();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"admin\") {\r\n      return this.state.archiveData !== null ? (\r\n        <React.Fragment>\r\n          {/* DIALOG FOR DELETE ARCHIVE */}\r\n          <div>\r\n            <Dialog\r\n              open={this.state.deleteDialogOpen}\r\n              onClose={this.handleDeleteArchiveDialogClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Delete Archive Data\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to this Archive Data? After deleting\r\n                  this, the Data will be lost completely\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={this.handleDeleteArchiveDialogClose}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => this.handleDeleteArchive(dArchiveId)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n          <SideMenu />\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              width: \"80%\",\r\n              margin: \"30px auto\",\r\n              boxShadow:\r\n                \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n            }}\r\n          >\r\n            <Typography variant=\"h2\">Archive</Typography>\r\n          </div>\r\n          {/* ACCORDION FOR GROUPDATA */}\r\n          <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n            {archData\r\n              ? archData.map(data => {\r\n                  let archId = data._id;\r\n                  return (\r\n                    <Accordion\r\n                      className={classes.mainAccor}\r\n                      key={data.acadYear}\r\n                    >\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Grid container>\r\n                          <Grid item xs={4}>\r\n                            <Typography variant=\"h6\">\r\n                              {data.acadYear}\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6}></Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{ textAlign: \"right\", padding: \"auto\" }}\r\n                          >\r\n                            <DeleteIcon\r\n                              onClick={e =>\r\n                                this.handleDeleteArchiveDialogOpen(e, archId)\r\n                              }\r\n                              className={classes.deleteIconStyle}\r\n                              style={{ margin: \"3px\" }}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <div style={{ width: \"100%\" }}>\r\n                          {data.groups.map(group => {\r\n                            return (\r\n                              <Accordion key={group.name}>\r\n                                <AccordionSummary\r\n                                  expandIcon={<ExpandMoreIcon />}\r\n                                  aria-controls=\"panel1a-content\"\r\n                                  id=\"panel1a-header\"\r\n                                >\r\n                                  <Typography className={classes.heading}>\r\n                                    {toFirstCharUppercase(group.name)}\r\n                                  </Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                  <div style={{ width: \"100%\" }}>\r\n                                    <Card\r\n                                      style={{ backgroundColor: \"#d3d3d3\" }}\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item>\r\n                                          <Typography\r\n                                            style={{\r\n                                              margin: \"10px 15px\",\r\n                                              textAlign: \"left\"\r\n                                            }}\r\n                                          >\r\n                                            Guide Details:\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                          <Typography\r\n                                            style={{\r\n                                              margin: \"10px 15px\",\r\n                                              textAlign: \"left\"\r\n                                            }}\r\n                                          >\r\n                                            {group.guide.name}&nbsp;\r\n                                            {\"  \"}\r\n                                            <b>{group.guide.email}</b>\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    </Card>\r\n\r\n                                    <Accordion className={classes.accorStyle}>\r\n                                      <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel1a-content\"\r\n                                        id=\"panel1a-header\"\r\n                                      >\r\n                                        <Typography className={classes.heading}>\r\n                                          Members\r\n                                        </Typography>\r\n                                      </AccordionSummary>\r\n                                      <AccordionDetails>\r\n                                        <React.Fragment>\r\n                                          <div style={{ width: \"100%\" }}>\r\n                                            <Card className={classes.groupCard}>\r\n                                              <Grid container>\r\n                                                <Grid item xs={1}></Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    <b>Name</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    <b>Email</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    <b>Rollno</b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}></Grid>\r\n                                              </Grid>\r\n                                            </Card>\r\n                                            {group.members.map(member => {\r\n                                              return (\r\n                                                <Card\r\n                                                  className={classes.groupCard}\r\n                                                  key={member.name}\r\n                                                >\r\n                                                  <Grid\r\n                                                    container\r\n                                                    key={member.rollno}\r\n                                                  >\r\n                                                    <Grid item xs={1}></Grid>\r\n                                                    <Grid item xs={3}>\r\n                                                      <Typography>\r\n                                                        {member.name}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={3}>\r\n                                                      <Typography>\r\n                                                        {member.email}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}>\r\n                                                      <Typography>\r\n                                                        {member.rollno}\r\n                                                      </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}></Grid>\r\n                                                  </Grid>\r\n                                                </Card>\r\n                                              );\r\n                                            })}\r\n                                          </div>\r\n                                        </React.Fragment>\r\n                                      </AccordionDetails>\r\n                                    </Accordion>\r\n                                    <Accordion className={classes.accorStyle}>\r\n                                      <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel2a-content\"\r\n                                        id=\"panel2a-header\"\r\n                                      >\r\n                                        <Typography className={classes.heading}>\r\n                                          Proposals\r\n                                        </Typography>\r\n                                      </AccordionSummary>\r\n                                      <AccordionDetails>\r\n                                        <div className={classes.root}>\r\n                                          {group.proposals.length === 3 ? (\r\n                                            group.proposals.map(\r\n                                              (proposal, index) => {\r\n                                                let approval =\r\n                                                  proposal.approval;\r\n\r\n                                                return (\r\n                                                  <Accordion\r\n                                                    style={{\r\n                                                      textAlign: \"left\"\r\n                                                    }}\r\n                                                    key={proposal.title}\r\n                                                  >\r\n                                                    <AccordionSummary\r\n                                                      expandIcon={\r\n                                                        <ExpandMoreIcon />\r\n                                                      }\r\n                                                      aria-controls=\"panel1a-content\"\r\n                                                      id=\"panel1a-header\"\r\n                                                    >\r\n                                                      <Typography\r\n                                                        className={\r\n                                                          classes.heading\r\n                                                        }\r\n                                                      >\r\n                                                        Proposal {index + 1}\r\n                                                      </Typography>\r\n                                                    </AccordionSummary>\r\n                                                    <AccordionDetails>\r\n                                                      <Grid\r\n                                                        container\r\n                                                        className={\r\n                                                          classes.content\r\n                                                        }\r\n                                                        spacing={1}\r\n                                                      >\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Title of\r\n                                                              Proposal:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.title}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Detailed Statement\r\n                                                              of\r\n                                                              Problem:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.details}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Internal\r\n                                                              Agency/External\r\n                                                              Agency/CTL/Mastek/or\r\n                                                              any\r\n                                                              other:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.agency}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Methods/Technique/Algorithm\r\n                                                              proposed:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.method}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Software/Hardware\r\n                                                              Requirements:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {\r\n                                                              proposal.requirements\r\n                                                            }\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Domain of\r\n                                                              Specialization:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {\r\n                                                              proposal.specialization\r\n                                                            }\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Result\r\n                                                              Expected:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {proposal.result}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          <Typography>\r\n                                                            <b>\r\n                                                              Appied\r\n                                                              On:&nbsp;&nbsp;\r\n                                                            </b>\r\n                                                            {/* {proposal.applied.split(\"T\")[0]} */}\r\n                                                            {proposal.applied.substr(\r\n                                                              0,\r\n                                                              10\r\n                                                            )}\r\n                                                          </Typography>\r\n                                                        </Grid>\r\n\r\n                                                        <Grid item xs={12}>\r\n                                                          {approval.admin ? (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                Admin approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              Approved\r\n                                                            </Typography>\r\n                                                          ) : (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                Admin approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              not approved\r\n                                                            </Typography>\r\n                                                          )}\r\n                                                        </Grid>\r\n                                                        <Grid item xs={12}>\r\n                                                          {approval.hod ? (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                HOD approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              Approved\r\n                                                            </Typography>\r\n                                                          ) : (\r\n                                                            <Typography>\r\n                                                              <b>\r\n                                                                HOD approval\r\n                                                                status:\r\n                                                              </b>\r\n                                                              not approved\r\n                                                            </Typography>\r\n                                                          )}\r\n                                                        </Grid>\r\n\r\n                                                        <Grid\r\n                                                          item\r\n                                                          xs={12}\r\n                                                          sm={6}\r\n                                                          style={{\r\n                                                            textAlign: \"right\"\r\n                                                          }}\r\n                                                        ></Grid>\r\n                                                      </Grid>\r\n                                                    </AccordionDetails>\r\n                                                  </Accordion>\r\n                                                );\r\n                                              }\r\n                                            )\r\n                                          ) : (\r\n                                            <Typography>\r\n                                              Proposals Not filled yet\r\n                                            </Typography>\r\n                                          )}\r\n                                        </div>\r\n                                      </AccordionDetails>\r\n                                    </Accordion>\r\n                                  </div>\r\n                                </AccordionDetails>\r\n                              </Accordion>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  );\r\n                })\r\n              : null}\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <LinearProgress />\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\nexport default withStyles(useStyles)(AdminArchives);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  makeStyles,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nlet Groups = null;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n}));\r\n\r\nconst GuideGroupList = props => {\r\n  const [adData, setAdData] = React.useState(null);\r\n  const [filled, setFilled] = React.useState(false);\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  function checkData() {\r\n    setLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Groups = res.data;\r\n        setAdData(\"new\");\r\n        setFilled(true);\r\n        setLoading(false);\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  //accordion handleChange\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n  if (adData === null) {\r\n    checkData();\r\n  }\r\n  if (filled) {\r\n    if (Groups.length !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Typography style={{ margin: \"10px\" }} variant=\"h4\">\r\n            Assigned Groups\r\n          </Typography>\r\n          {Groups.map(Group => {\r\n            const routeChange = () => {\r\n              histor.push({\r\n                pathname: `/guide/prefs/${id}`\r\n              });\r\n            };\r\n            //console.log(Group);\r\n            let DueDate = Group.dueDate.split(\"T\")[0];\r\n            let members = Group.members;\r\n            let Gname = Group.name;\r\n            let id = Group.id;\r\n            let pref1 = [];\r\n            // let pref2 = [];\r\n            // let pref3 = [];\r\n            let AppliedOn = null;\r\n\r\n            if (Group.proposals.length !== 0) {\r\n              pref1 = Group.proposals[0];\r\n              // pref2 = Group.proposals[1];\r\n              // pref3 = Group.proposals[2];\r\n\r\n              AppliedOn = pref1.applied.split(\"T\")[0];\r\n              //console.log(AppliedOn, DueDate);\r\n            }\r\n            // if (Group.guide.name===userInfo.name) {\r\n            return (\r\n              <React.Fragment>\r\n                <Accordion\r\n                  style={{\r\n                    width: \"90%\",\r\n                    margin: \"auto\",\r\n                    textAlign: \"left\",\r\n                    marginTop: \"2px\",\r\n                    boxShadow:\r\n                      \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                  }}\r\n                  expanded={expanded === Gname}\r\n                  onChange={handleChange(Gname)}\r\n                  className={classes.accor}\r\n                  key={Group.name}\r\n                >\r\n                  <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                  >\r\n                    <Typography className={classes.heading}>\r\n                      {toFirstCharUppercase(Group.name)}\r\n                    </Typography>\r\n                    {members.map(member => {\r\n                      return (\r\n                        <Typography\r\n                          key={member.name}\r\n                          className={classes.secondaryHeading}\r\n                        >\r\n                          {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        </Typography>\r\n                      );\r\n                    })}\r\n                  </AccordionSummary>\r\n                  <AccordionDetails className={classes.accordet}>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} sm={4}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Name\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.name}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={5}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Email\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.email}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={3}>\r\n                        <Grid container>\r\n                          <Grid item xs={12}>\r\n                            <Typography style={{ fontWeight: \"600\" }}>\r\n                              Roll no\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={12}>\r\n                            {members.map(member => {\r\n                              return (\r\n                                <Typography key={member.email}>\r\n                                  {member.rollno}\r\n                                </Typography>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {DueDate >= AppliedOn ? (\r\n                          <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                            Proposals Submitted On Time\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                            Proposals Submitted LATE\r\n                          </Typography>\r\n                        )}\r\n                      </Grid>\r\n                      <Grid item container xs={12}>\r\n                        {Group.proposals.length === 3 ? (\r\n                          <React.Fragment>\r\n                            <Grid item xs={3}>\r\n                              <Button\r\n                                onClick={routeChange}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                              >\r\n                                More Details\r\n                              </Button>\r\n                            </Grid>\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                            <Typography>Preferences not filled</Typography>\r\n                          </Button>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n                <div style={{ marginBottom: \"50px\" }}></div>\r\n              </React.Fragment>\r\n            );\r\n            // }\r\n            // return null;\r\n          })}\r\n          <Footer />\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return <Typography>No group has been assigned to you yet.</Typography>;\r\n    }\r\n  } else {\r\n    return <CircularProgress />;\r\n  }\r\n};\r\n\r\nexport default GuideGroupList;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"./URL\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport LoggedNavbar from \"../components/Navbar/LoggedNavbar\";\r\nimport GuideGroupList from \"../components/Guide Component/GroupList\";\r\nimport Profile from \"../components/Profile\"\r\n\r\n\r\n\r\nexport default class Hod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n    let loggedIn = false;\r\n    if (token === \"guide\") {\r\n      loggedIn = true;\r\n    }\r\n    this.state = {\r\n      loggedIn,\r\n      user: \"\"\r\n    };\r\n  }\r\n\r\n  getStat = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          loggedIn: true,\r\n          user: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loggedIn: false,\r\n          user: \"No User\"\r\n        });\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.user === \"\") {\r\n      this.getStat();\r\n      return <LinearProgress />;\r\n    } else if (this.state.user.type === \"guide\") {\r\n      return (\r\n        <div>\r\n          <React.Fragment>\r\n            <LoggedNavbar />\r\n            <Profile userInfo={this.state.user} academicYear={null} />\r\n            <GuideGroupList userInfo={this.state.user} />\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport qs from \"qs\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n  Card\r\n} from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport HodCommentPage from \"../Hod-component/HodCommentPage\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider\r\n} from \"@material-ui/pickers\";\r\n\r\nfunction appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n\r\n//getting todays date\r\nvar tempDate = new Date();\r\nvar date =\r\n  tempDate.getFullYear() +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getMonth() + 1) +\r\n  \"-\" +\r\n  appendLeadingZeroes(tempDate.getDate());\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nlet filled = false;\r\nlet Ad = null;\r\nlet Groups = null;\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n// const months=[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n// let pd= new Date()\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(18),\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0,\r\n    textAlign: \"left\",\r\n    [theme.breakpoints.down(\"600\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  grid: {\r\n    margin: \"20px\",\r\n    textAlign: \"center\"\r\n  },\r\n  comment: {\r\n    marginTop: \"50px\"\r\n  },\r\n  comTitle: {\r\n    textAlign: \"right\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"left\"\r\n    }\r\n  },\r\n  comField: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    }\r\n  },\r\n  comButton: {\r\n    textAlign: \"left\",\r\n    margin: \"auto 0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  deleteIconStyle: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      color: \"red\"\r\n    }\r\n  }\r\n});\r\n\r\nclass HodPrefPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expanded: null,\r\n      adData: null,\r\n      filled,\r\n      comment: \"\",\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      scheduleLoading: false,\r\n      dateTime: \"\",\r\n      orgMarks: \"\",\r\n      eodMarks: \"\",\r\n      timeMarks: \"\",\r\n      subKnowMarks: \"\",\r\n      probStatement: \"\",\r\n      concept: \"\",\r\n      innovation: \"\",\r\n      pmf: \"\",\r\n      teamWork: \"\",\r\n      bibliography: \"\",\r\n      diagram: \"\",\r\n      enggTheoryAnaly: \"\",\r\n      orgAndWriting: \"\",\r\n      spellAndGrammar: \"\",\r\n      weeklyLogMsg: \"\",\r\n      weeklyLogDate: date\r\n    };\r\n  }\r\n\r\n  handleBibliography = e => {\r\n    this.setState({ bibliography: e.target.value });\r\n  };\r\n  handleProbStatement = e => {\r\n    this.setState({ probStatement: e.target.value });\r\n  };\r\n  handleConcept = e => {\r\n    this.setState({ concept: e.target.value });\r\n  };\r\n  handleSpellAndGrammar = e => {\r\n    this.setState({ spellAndGrammar: e.target.value });\r\n  };\r\n  handleOrgAndWriting = e => {\r\n    this.setState({ orgAndWriting: e.target.value });\r\n  };\r\n  handleEngTheoryAnaly = e => {\r\n    this.setState({ enggTheoryAnaly: e.target.value });\r\n  };\r\n  handleDiagram = e => {\r\n    this.setState({ diagram: e.target.value });\r\n  };\r\n  handleTeamWork = e => {\r\n    this.setState({ teamWork: e.target.value });\r\n  };\r\n  handlePMF = e => {\r\n    this.setState({ pmf: e.target.value });\r\n  };\r\n  handleInnovation = e => {\r\n    this.setState({ innovation: e.target.value });\r\n  };\r\n\r\n  handleReportSubmit = (e, id) => {\r\n    if (\r\n      this.state.bibliography > 3 ||\r\n      this.state.diagram > 3 ||\r\n      this.state.enggTheoryAnaly > 3 ||\r\n      this.state.orgAndWriting > 3 ||\r\n      this.state.spellAndGrammar > 3 ||\r\n      this.state.bibliography === \"\" ||\r\n      this.state.diagram === \"\" ||\r\n      this.state.enggTheoryAnaly === \"\" ||\r\n      this.state.orgAndWriting === \"\" ||\r\n      this.state.spellAndGrammar === \"\"\r\n    ) {\r\n      alert(\"Please enter appropriate marks\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/report\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: id,\r\n          orgAndWriting: this.state.orgAndWriting,\r\n          enggTheoryAnaly: this.state.enggTheoryAnaly,\r\n          biblogrpahy: this.state.bibliography,\r\n          spellAndGrammar: this.state.spellAndGrammar,\r\n          diagrams: this.state.diagram\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          this.setState({\r\n            bibliography: \"\",\r\n            diagram: \"\",\r\n            spellAndGrammar: \"\",\r\n            enggTheoryAnaly: \"\",\r\n            orgAndWriting: \"\"\r\n          });\r\n          window.location.reload();\r\n        })\r\n\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          this.setState({\r\n            bibliography: \"\",\r\n            diagram: \"\",\r\n            spellAndGrammar: \"\",\r\n            enggTheoryAnaly: \"\",\r\n            orgAndWriting: \"\"\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleDeleteReport = (e, id) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteReport\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          bibliography: \"\",\r\n          diagram: \"\",\r\n          spellAndGrammar: \"\",\r\n          enggTheoryAnaly: \"\",\r\n          orgAndWriting: \"\"\r\n        });\r\n        window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          bibliography: \"\",\r\n          diagram: \"\",\r\n          spellAndGrammar: \"\",\r\n          enggTheoryAnaly: \"\",\r\n          orgAndWriting: \"\"\r\n        });\r\n      });\r\n  };\r\n\r\n  //WEEKLY LOG\r\n  weeklyMsgHandler = e => {\r\n    let message = e.target.value;\r\n    this.setState({\r\n      weeklyLogMsg: message\r\n    });\r\n  };\r\n\r\n  appendLeadingZeroes = n => {\r\n    if (n <= 9) {\r\n      return \"0\" + n;\r\n    }\r\n    return n;\r\n  };\r\n  handleweelyDateChange = date => {\r\n    let current_datetime = date;\r\n    let formatted_date =\r\n      current_datetime.getFullYear() +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getMonth() + 1) +\r\n      \"-\" +\r\n      this.appendLeadingZeroes(current_datetime.getDate());\r\n    this.setState({\r\n      weeklyLogDate: formatted_date\r\n    });\r\n  };\r\n\r\n  sendLog = gid => {\r\n    const { weeklyLogDate, weeklyLogMsg } = this.state;\r\n    if (weeklyLogMsg === \"\") {\r\n      alert(\"Please enter a remark\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/weeklyMeetLog\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: gid,\r\n          date: weeklyLogDate,\r\n          remark: weeklyLogMsg\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          window.location.reload();\r\n          this.setState({\r\n            weeklyLogMsg: \"\"\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  //Delete weekly Log\r\n  deleteLog = (gid, wid) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteWeeklyMeetLog\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: gid,\r\n        id: wid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        window.location.reload(false);\r\n      })\r\n\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  /////////////////\r\n\r\n  handleImplementationSubmit = (e, id) => {\r\n    if (\r\n      this.state.concept > 3 ||\r\n      this.state.teamWork > 3 ||\r\n      this.state.pmf > 3 ||\r\n      this.state.innovation > 3 ||\r\n      this.state.probStatment > 3 ||\r\n      this.state.concept === \"\" ||\r\n      this.state.teamWork === \"\" ||\r\n      this.state.pmf === \"\" ||\r\n      this.state.innovation === \"\" ||\r\n      this.state.probStatment === \"\"\r\n    ) {\r\n      alert(\"Please enter appropriate marks\");\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/implementation\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: id,\r\n          probStatment: this.state.probStatement,\r\n          concept: this.state.concept,\r\n          innovation: this.state.innovation,\r\n          teamwork: this.state.teamWork,\r\n          pmf: this.state.pmf\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          this.setState({\r\n            probStatement: \"\",\r\n            concept: \"\",\r\n            innovation: \"\",\r\n            teamWork: \"\",\r\n            pmf: \"\"\r\n          });\r\n          window.location.reload();\r\n        })\r\n\r\n        .catch(function (err) {\r\n          console.log(err);\r\n          this.setState({\r\n            probStatement: \"\",\r\n            concept: \"\",\r\n            innovation: \"\",\r\n            teamWork: \"\",\r\n            pmf: \"\"\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  handleDeleteImplementation = (e, id) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deleteImplementation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        gid: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({\r\n          probStatement: \"\",\r\n          concept: \"\",\r\n          innovation: \"\",\r\n          teamWork: \"\",\r\n          pmf: \"\"\r\n        });\r\n        window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          probStatement: \"\",\r\n          concept: \"\",\r\n          innovation: \"\",\r\n          teamWork: \"\",\r\n          pmf: \"\"\r\n        });\r\n      });\r\n  };\r\n\r\n  sche_pres = (e, id) => {\r\n    let dt = new Date(this.state.dateTime);\r\n    this.setState({ scheduleLoading: true });\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/presentation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        datetime: dt.toISOString(),\r\n        gid: id\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        this.setState({ scheduleLoading: false });\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n        this.setState({ scheduleLoading: false });\r\n      });\r\n  };\r\n\r\n  handleDateTimeChange = e => {\r\n    this.setState({ dateTime: e.target.value });\r\n  };\r\n\r\n  commentHandler = e => {\r\n    let comment = e.target.value;\r\n    this.setState({\r\n      comment: comment\r\n    });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      openSuccess: false,\r\n      openFailure: false,\r\n      adData: null\r\n    });\r\n  };\r\n\r\n  sendComment(Gid) {\r\n    const { comment } = this.state;\r\n    if (comment === \"\") {\r\n      this.setState({\r\n        openFailure: true\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/comment\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          id: Gid,\r\n          msg: comment\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ openSuccess: true, loading: false });\r\n          this.setState({\r\n            comment: \"\",\r\n            adData: null\r\n          });\r\n        })\r\n\r\n        .catch(err => {\r\n          this.setState({ openFailure: true, loading: false });\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  checkData() {\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        Ad = res.data.length;\r\n\r\n        Groups = res.data;\r\n        console.log(Groups);\r\n        this.setState({\r\n          adData: \"new\",\r\n          filled: true\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleApprove = (pid, id) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/approve\",\r\n      credentials: \"include\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        id: id,\r\n        pid: pid\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          adData: null,\r\n          filled: false,\r\n          Ad: null\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  handleMarkSubmit = (e, groupID, presentationID) => {\r\n    if (\r\n      parseInt(this.state.timeMarks, 10) > 2 ||\r\n      parseInt(this.state.orgMarks, 10) > 2 ||\r\n      parseInt(this.state.eodMarks, 10) > 2 ||\r\n      parseInt(this.state.subKnowMarks, 10) > 2\r\n    ) {\r\n      alert(\"Entered marks greater than max marks. Please re-enter\");\r\n      this.setState({\r\n        timeMarks: null,\r\n        orgMarks: null,\r\n        eodMarks: null,\r\n        subKnowMarks: null\r\n      });\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: SERVER_URL + \"/presentationMarks\",\r\n        credentials: \"include\",\r\n        withCredentials: true,\r\n        data: qs.stringify({\r\n          gid: groupID,\r\n          pid: presentationID,\r\n          orgMarks: this.state.orgMarks,\r\n          subKnowMarks: this.state.subKnowMarks,\r\n          EODMarks: this.state.eodMarks,\r\n          timeMarks: this.state.timeMarks\r\n        }),\r\n        headers: {\r\n          \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n        }\r\n      })\r\n        .then(response => {\r\n          this.setState({ marks: \"\", totalMarks: \"\" });\r\n          window.location.reload();\r\n        })\r\n        .catch(err => {\r\n          this.setState({ marks: \"\", totalMarks: \"\" });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleOrgMarks = e => {\r\n    this.setState({ orgMarks: e.target.value });\r\n  };\r\n  handleSubKnowMarks = e => {\r\n    this.setState({ subKnowMarks: e.target.value });\r\n  };\r\n  handleTimeMarks = e => {\r\n    this.setState({ timeMarks: e.target.value });\r\n  };\r\n  handleEodMarks = e => {\r\n    this.setState({ eodMarks: e.target.value });\r\n  };\r\n\r\n  handleDeletePresentation = (e, PID, GID) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: SERVER_URL + \"/deletePresentation\",\r\n      withCredentials: true,\r\n      data: qs.stringify({\r\n        pid: PID,\r\n        gid: GID\r\n      }),\r\n      headers: {\r\n        \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\r\n      }\r\n    })\r\n      .then(res => {\r\n        window.location.reload();\r\n      })\r\n\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { expanded } = this.state;\r\n    if (this.state.adData === null) {\r\n      this.checkData();\r\n    }\r\n    if (this.state.filled === true && Ad !== 0) {\r\n      return (\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n            {Groups.map(group => {\r\n              let Gid = group.id;\r\n              if (group.id === this.props.match.params.id) {\r\n                let Presentations = group.presentation;\r\n                let Proposals = group.proposals;\r\n                let Comments = group.comments;\r\n                let weeklyLog = group.weeklyMeetLog;\r\n                let implementation = group.implementation;\r\n                let report = group.report;\r\n                Presentations.sort((a, b) =>\r\n                  new Date(a.scheduled_date).getTime() >\r\n                  new Date(b.scheduled_date).getTime()\r\n                    ? 1\r\n                    : -1\r\n                );\r\n                return (\r\n                  <div key={group.id}>\r\n                    <Grid container spacing={2} className={classes.grid}>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h3\">\r\n                          <b>{toFirstCharUppercase(group.name)}</b>\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    {Proposals.map((proposal, index) => {\r\n                      const panel = proposal.title;\r\n                      let approval = proposal.approval;\r\n                      let pid = proposal._id;\r\n                      let appliedDate = new Date(proposal.applied);\r\n                      return (\r\n                        <Accordion\r\n                          key={proposal._id}\r\n                          expanded={expanded === panel}\r\n                          onChange={this.handleChange(panel)}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                          >\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                className={classes.heading}\r\n                                style={{ color: \"#03ac13\" }}\r\n                              >\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography className={classes.heading}>\r\n                                <b>Proposal {index + 1}</b>\r\n                              </Typography>\r\n                            )}\r\n\r\n                            <Typography className={classes.secondaryHeading}>\r\n                              {proposal.title}\r\n                            </Typography>\r\n\r\n                            {proposal.approval.admin ? (\r\n                              <Typography\r\n                                style={{\r\n                                  color: \"#03ac13\",\r\n                                  margin: \"auto\"\r\n                                }}\r\n                              >\r\n                                <DoneIcon size=\"large\" />\r\n                              </Typography>\r\n                            ) : (\r\n                              <Typography\r\n                                style={{ color: \"red\", margin: \"auto\" }}\r\n                              >\r\n                                <ClearIcon size=\"large\" />\r\n                              </Typography>\r\n                            )}\r\n                          </AccordionSummary>\r\n                          <AccordionDetails style={{ textAlign: \"left\" }}>\r\n                            <Grid\r\n                              container\r\n                              className={classes.content}\r\n                              spacing={1}\r\n                            >\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Title of Proposal:&nbsp;&nbsp;</b>\r\n                                  {proposal.title}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Detailed Statement of Problem:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.details}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Internal Agency/External\r\n                                    Agency/CTL/Mastek/or any other:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.agency}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Methods/Technique/Algorithm\r\n                                    proposed:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.method}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>\r\n                                    Software/Hardware Requirements:&nbsp;&nbsp;\r\n                                  </b>\r\n                                  {proposal.requirements}\r\n                                </Typography>\r\n                              </Grid>\r\n\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Domain of Specialization:&nbsp;&nbsp;</b>\r\n                                  {proposal.specialization}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Result Expected:&nbsp;&nbsp;</b>\r\n                                  {proposal.result}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <Typography>\r\n                                  <b>Appied On:&nbsp;&nbsp;</b>\r\n                                  {appliedDate.getDate()}/\r\n                                  {appliedDate.getMonth() + 1}/\r\n                                  {appliedDate.getFullYear()}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.admin ? (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>Admin approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                {approval.hod ? (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>\r\n                                    Approved\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography>\r\n                                    <b>HOD approval status:&nbsp;&nbsp;</b>not\r\n                                    approved\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <Button\r\n                                  variant=\"outlined\"\r\n                                  color=\"primary\"\r\n                                  onClick={() => {\r\n                                    window.open(\r\n                                      `${SERVER_URL}/${proposal.attachPrints}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Show Uploaded Document\r\n                                </Button>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                style={{ textAlign: \"right\" }}\r\n                              >\r\n                                {proposal.approval.admin ? (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        size=\"large\"\r\n                                        onClick={() => {\r\n                                          this.handleApprove(pid, Gid);\r\n                                        }}\r\n                                      >\r\n                                        Approve Proposal\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div>\r\n                                    {!proposal.approval.hod ? (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Not Approved\r\n                                      </Button>\r\n                                    ) : (\r\n                                      <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        size=\"large\"\r\n                                      >\r\n                                        Another Proposal has been approved\r\n                                      </Button>\r\n                                    )}\r\n                                  </div>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      );\r\n                    })}\r\n                    <Card\r\n                      style={{\r\n                        marginTop: \"50px\",\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"20px\",\r\n                        paddingTop: \"0px\",\r\n                        marginBottom: \"50px\"\r\n                      }}\r\n                    >\r\n                      <Grid style={{ marginTop: \"20px\" }} container>\r\n                        <Grid item xs={4} style={{ textAlign: \"left\" }}>\r\n                          <Typography\r\n                            style={{ marginBottom: \"20px\", marginLeft: \"20px\" }}\r\n                            variant=\"h3\"\r\n                          >\r\n                            Presentation\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                          <form\r\n                            onSubmit={e => {\r\n                              this.sche_pres(e, Gid);\r\n                            }}\r\n                          >\r\n                            <Grid container>\r\n                              <Grid item xs={3}></Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={6}\r\n                                style={{\r\n                                  padding: \"5px\",\r\n                                  backgroundColor: \"#fff\"\r\n                                }}\r\n                              >\r\n                                <TextField\r\n                                  id=\"datetime-local\"\r\n                                  label=\"Next Presentation\"\r\n                                  type=\"datetime-local\"\r\n                                  defaultValue={new Date().toISOString()}\r\n                                  className={classes.textField}\r\n                                  required\r\n                                  InputLabelProps={{\r\n                                    shrink: true\r\n                                  }}\r\n                                  onChange={this.handleDateTimeChange}\r\n                                  style={{\r\n                                    padding: \"5px 20px\",\r\n                                    borderRadius: \"2px\"\r\n                                  }}\r\n                                />\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={3}\r\n                                style={{\r\n                                  padding: \"5px\",\r\n                                  textAlign: \"left\",\r\n                                  backgroundColor: \"#fff\"\r\n                                }}\r\n                              >\r\n                                {!this.state.scheduleLoading ? (\r\n                                  <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{ margin: \"10px\" }}\r\n                                  >\r\n                                    Schedule\r\n                                  </Button>\r\n                                ) : (\r\n                                  <CircularProgress />\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                          </form>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          {Presentations.length !== 0 ? (\r\n                            <React.Fragment>\r\n                              {Presentations.map((presentation, index) => {\r\n                                const panel = presentation._id;\r\n                                let d = new Date(presentation.scheduled_date);\r\n                                return (\r\n                                  <Accordion\r\n                                    key={presentation._id}\r\n                                    expanded={expanded === panel}\r\n                                    onChange={this.handleChange(panel)}\r\n                                  >\r\n                                    <AccordionSummary\r\n                                      expandIcon={<ExpandMoreIcon />}\r\n                                      aria-controls=\"panel1bh-content\"\r\n                                      id=\"panel1bh-header\"\r\n                                    >\r\n                                      <Grid container>\r\n                                        <Grid item xs={3}>\r\n                                          <Typography variant=\"h6\">\r\n                                            <b>Presentation {index + 1}</b>\r\n                                          </Typography>\r\n                                        </Grid>\r\n                                        {!presentation.filled ? (\r\n                                          <React.Fragment>\r\n                                            {d.getTime() > Date.now() ? (\r\n                                              <React.Fragment>\r\n                                                <Grid item xs={6} />\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    Presentation Not conducted\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                              </React.Fragment>\r\n                                            ) : (\r\n                                              <React.Fragment>\r\n                                                <Grid item xs={6} />\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography color=\"secondary\">\r\n                                                    Presentation Missing\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                              </React.Fragment>\r\n                                            )}\r\n                                          </React.Fragment>\r\n                                        ) : (\r\n                                          <React.Fragment>\r\n                                            <Grid item xs={6} />\r\n                                            <Grid item xs={3}>\r\n                                              <Typography\r\n                                                style={{ color: \"green\" }}\r\n                                              >\r\n                                                Presentation conducted\r\n                                              </Typography>\r\n                                            </Grid>\r\n                                          </React.Fragment>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <Grid\r\n                                        container\r\n                                        className={classes.content}\r\n                                        spacing={1}\r\n                                        style={{\r\n                                          padding: \"0px\"\r\n                                        }}\r\n                                      >\r\n                                        <Grid\r\n                                          item\r\n                                          xs={2}\r\n                                          style={{\r\n                                            textAlign: \"left\",\r\n                                            backgroundColor: \"#d3d3d3\"\r\n                                          }}\r\n                                        >\r\n                                          <React.Fragment>\r\n                                            {d.getHours() > 12 ? (\r\n                                              <Typography variant=\"h5\">\r\n                                                {d.getHours() - 12}:\r\n                                                {d.getMinutes()} pm\r\n                                              </Typography>\r\n                                            ) : (\r\n                                              <Typography variant=\"h5\">\r\n                                                {d.getHours()}:{d.getMinutes()}{\" \"}\r\n                                                am\r\n                                              </Typography>\r\n                                            )}\r\n                                            {days[d.getDay()]} {d.getDate()}/\r\n                                            {d.getMonth() + 1}/{d.getFullYear()}\r\n                                          </React.Fragment>\r\n                                        </Grid>\r\n                                        {!presentation.filled &&\r\n                                        d.getTime() <= Date.now() ? (\r\n                                          <Grid\r\n                                            item\r\n                                            xs={10}\r\n                                            style={{\r\n                                              backgroundColor: \"#fff\",\r\n                                              padding: \"0px\",\r\n                                              margin: \"0px 0px\",\r\n                                              border: \"4px solid #d3d3d3\"\r\n                                            }}\r\n                                          >\r\n                                            <Grid container>\r\n                                              <Grid item>\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={this.state.timeMarks}\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Time Management(3)\"\r\n                                                  onChange={\r\n                                                    this.handleTimeMarks\r\n                                                  }\r\n                                                  style={{\r\n                                                    margin: \"10px 5px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n                                              <Grid\r\n                                                item\r\n\r\n                                                // style={{ textAlign: \"right\" }}\r\n                                              >\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={this.state.eodMarks}\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Effectiveness(3) \"\r\n                                                  onChange={this.handleEodMarks}\r\n                                                  style={{\r\n                                                    margin: \"10px 5px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n\r\n                                              <Grid item>\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={this.state.orgMarks}\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Organization(2)\"\r\n                                                  onChange={this.handleOrgMarks}\r\n                                                  style={{\r\n                                                    margin: \"10px 5px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n                                              <Grid item>\r\n                                                <TextField\r\n                                                  size=\"small\"\r\n                                                  type=\"number\"\r\n                                                  value={\r\n                                                    this.state.subKnowMarks\r\n                                                  }\r\n                                                  variant=\"outlined\"\r\n                                                  label=\"Subject Knowledge(2)\"\r\n                                                  onChange={\r\n                                                    this.handleSubKnowMarks\r\n                                                  }\r\n                                                  style={{\r\n                                                    margin: \"10px 5px\",\r\n                                                    backgroundColor: \"#fff\"\r\n                                                  }}\r\n                                                />\r\n                                              </Grid>\r\n                                              <Grid item>\r\n                                                <Button\r\n                                                  size=\"large\"\r\n                                                  variant=\"contained\"\r\n                                                  color=\"primary\"\r\n                                                  onClick={e => {\r\n                                                    this.handleMarkSubmit(\r\n                                                      e,\r\n                                                      Gid,\r\n                                                      presentation._id\r\n                                                    );\r\n                                                  }}\r\n                                                  style={{\r\n                                                    margin: \"10px 0px\",\r\n                                                    marginLeft: \"15px\"\r\n                                                  }}\r\n                                                >\r\n                                                  Submit Marks\r\n                                                </Button>\r\n                                              </Grid>\r\n                                            </Grid>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                        {presentation.filled ? (\r\n                                          <React.Fragment>\r\n                                            <Grid\r\n                                              item\r\n                                              xs={10}\r\n                                              style={{\r\n                                                border: \"4px solid #d3d3d3\",\r\n                                                padding: \"12px\",\r\n                                                textAlign: \"center\"\r\n                                              }}\r\n                                            >\r\n                                              <Grid container>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    Organisation:&nbsp;\r\n                                                    {presentation.orgMarks}\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    Subject Knowledge:&nbsp;\r\n                                                    {presentation.subKnowMarks}\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    Effectiveness of\r\n                                                    Delivery:&nbsp;\r\n                                                    {presentation.EODMarks}\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                  <Typography>\r\n                                                    Time Management:&nbsp;\r\n                                                    {presentation.timeMarks}\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                                <Grid item xs={3}>\r\n                                                  <Typography>\r\n                                                    <b>\r\n                                                      Total Marks:\r\n                                                      {presentation.orgMarks +\r\n                                                        presentation.subKnowMarks +\r\n                                                        presentation.EODMarks +\r\n                                                        presentation.timeMarks}\r\n                                                      /10\r\n                                                    </b>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                              </Grid>\r\n                                            </Grid>\r\n\r\n                                            <Grid\r\n                                              item\r\n                                              xs={12}\r\n                                              style={{ textAlign: \"right\" }}\r\n                                            >\r\n                                              <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                onClick={e => {\r\n                                                  this.handleDeletePresentation(\r\n                                                    e,\r\n                                                    presentation._id,\r\n                                                    Gid\r\n                                                  );\r\n                                                }}\r\n                                              >\r\n                                                Delete presentation\r\n                                              </Button>\r\n                                            </Grid>\r\n                                          </React.Fragment>\r\n                                        ) : (\r\n                                          <Grid\r\n                                            item\r\n                                            xs={12}\r\n                                            style={{ textAlign: \"right\" }}\r\n                                          >\r\n                                            <Button\r\n                                              variant=\"contained\"\r\n                                              color=\"secondary\"\r\n                                              onClick={e => {\r\n                                                this.handleDeletePresentation(\r\n                                                  e,\r\n                                                  presentation._id,\r\n                                                  Gid\r\n                                                );\r\n                                              }}\r\n                                            >\r\n                                              Delete presentation\r\n                                            </Button>\r\n                                          </Grid>\r\n                                        )}\r\n                                      </Grid>\r\n                                    </AccordionDetails>\r\n                                  </Accordion>\r\n                                );\r\n                              })}\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            <React.Fragment>\r\n                              <Typography>No presentation scheduled</Typography>\r\n                            </React.Fragment>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    {/* Report marks */}\r\n                    <Card\r\n                      style={{\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\"\r\n                      }}\r\n                    >\r\n                      <Grid container>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            margin: \"20px 0px 0px 20px\"\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h3\">Report Marks</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ margin: \"20px 0px\" }}>\r\n                          {report.filled ? (\r\n                            <Card\r\n                              style={{\r\n                                padding: \"10px\",\r\n                                margin: \"2px 0px\"\r\n                              }}\r\n                            >\r\n                              <Grid container>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Organisation and writing style :{\" \"}\r\n                                    {report.orgAndWriting}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Engineering Theory and Analysis :{\" \"}\r\n                                    {report.enggTheoryAnaly}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Use of Bibliography : {report.biblogrpahy}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Spelling and Grammar :{\" \"}\r\n                                    {report.spellAndGrammar}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Graphs/Diagram : {report.diagrams}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h5\">\r\n                                    Total :{\" \"}\r\n                                    {report.orgAndWriting +\r\n                                      report.enggTheoryAnaly +\r\n                                      report.biblogrpahy +\r\n                                      report.spellAndGrammar +\r\n                                      report.diagrams}\r\n                                    /15\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid\r\n                                  item\r\n                                  xs={12}\r\n                                  style={{ textAlign: \"right\" }}\r\n                                >\r\n                                  <Button\r\n                                    onClick={e => {\r\n                                      this.handleDeleteReport(e, Gid);\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                  >\r\n                                    Delete\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Card>\r\n                          ) : (\r\n                            <Card\r\n                              style={{\r\n                                borderRadius: \"0px\",\r\n                                padding: \"10px\",\r\n                                margin: \"2px 0px\"\r\n                              }}\r\n                            >\r\n                              {/* <form> */}\r\n                              <Grid container>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Organisation and writing style\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Organisation_and_writing_style\"\r\n                                        name=\"Organisation_and_writing_style\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.orgAndWriting}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleOrgAndWriting}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Engineering Theory and Analysis:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Eng_Theory_and_Analysis\"\r\n                                        name=\"Eng_Theory_and_Analysis\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.enggTheoryAnaly}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleEngTheoryAnaly}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Use of Bibliography:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Use_of_Bibliography\"\r\n                                        name=\"Use_of_Bibliography\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.bibliography}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleBibliography}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Spelling and Grammar:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Spelling_and_Grammar\"\r\n                                        name=\"Spelling_and_Grammar\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.spellAndGrammar}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleSpellAndGrammar}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Graphs/Diagrams:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Graphs/Diagram\"\r\n                                        name=\"Graphs/Diagram\"\r\n                                        label=\"(3)\"\r\n                                        value={this.state.diagram}\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleDiagram}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Button\r\n                                    type=\"submit\"\r\n                                    onClick={e => {\r\n                                      this.handleReportSubmit(e, Gid);\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                      padding: \"10px 0px\",\r\n                                      marginLeft: \"30px\",\r\n                                      width: \"54%\",\r\n                                      fontSize: \"20px\"\r\n                                    }}\r\n                                  >\r\n                                    Submit\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                              {/* </form> */}\r\n                            </Card>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    {/* Implementation */}\r\n                    <Card\r\n                      style={{\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\"\r\n                      }}\r\n                    >\r\n                      <Grid container>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            margin: \"20px 0px 0px 20px\"\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h3\">\r\n                            Implementation Marks\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ margin: \"20px 0px\" }}>\r\n                          {implementation.filled ? (\r\n                            <Card\r\n                              style={{\r\n                                borderRadius: \"0px\",\r\n                                padding: \"10px\",\r\n                                margin: \"2px 0px\"\r\n                              }}\r\n                            >\r\n                              <Grid container>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Problem Statement :{\" \"}\r\n                                    {implementation.probStatment}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Concepts : {implementation.concept}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Innovation : {implementation.innovation}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Teamwork : {implementation.teamwork}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h6\">\r\n                                    Project Management and Finance :{\" \"}\r\n                                    {implementation.pmf}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={4}>\r\n                                  <Typography variant=\"h5\">\r\n                                    Total :{\" \"}\r\n                                    {implementation.probStatment +\r\n                                      implementation.concept +\r\n                                      implementation.innovation +\r\n                                      implementation.teamwork +\r\n                                      implementation.pmf}\r\n                                    /15\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid\r\n                                  item\r\n                                  xs={12}\r\n                                  style={{ textAlign: \"right\" }}\r\n                                >\r\n                                  <Button\r\n                                    onClick={e => {\r\n                                      this.handleDeleteImplementation(e, Gid);\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                  >\r\n                                    Delete\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Card>\r\n                          ) : (\r\n                            <Card\r\n                              style={{\r\n                                borderRadius: \"0px\",\r\n                                padding: \"10px\",\r\n                                margin: \"2px 0px\"\r\n                              }}\r\n                            >\r\n                              {/* <form > */}\r\n                              <Grid container>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Problem Statement:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{\r\n                                        textAlign: \"left\"\r\n                                      }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Problem_Statement\"\r\n                                        name=\"Problem_Statement\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleProbStatement}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Concepts:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Concepts\"\r\n                                        name=\"Concepts\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleConcept}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Innovation:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Innovation\"\r\n                                        name=\"Innovation\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleInnovation}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Teamwork:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      {\" \"}\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Teamwork\"\r\n                                        name=\"Teamwork\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handleTeamWork}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"5px 0\" }}>\r\n                                  <Grid container>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={8}\r\n                                      style={{ padding: \"8px 0px\" }}\r\n                                    >\r\n                                      <Typography variant=\"h6\">\r\n                                        Project Management and Finance:\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                      item\r\n                                      xs={4}\r\n                                      style={{ textAlign: \"left\" }}\r\n                                    >\r\n                                      <TextField\r\n                                        type=\"number\"\r\n                                        id=\"Proj_Management_and_Finance\"\r\n                                        name=\"Proj_Management_and_Finance\"\r\n                                        label=\"(3)\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={this.handlePMF}\r\n                                        style={{ width: \"40%\" }}\r\n                                        required\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={6} style={{ margin: \"10px 0\" }}>\r\n                                  <Button\r\n                                    onClick={e => {\r\n                                      this.handleImplementationSubmit(e, Gid);\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                      padding: \"10px 0px\",\r\n                                      marginLeft: \"30px\",\r\n                                      width: \"54%\",\r\n                                      fontSize: \"20px\"\r\n                                    }}\r\n                                  >\r\n                                    Submit\r\n                                  </Button>\r\n                                </Grid>\r\n                              </Grid>\r\n                              {/* </form> */}\r\n                            </Card>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    {/* WEEKLY LOG */}\r\n                    <Card\r\n                      style={{\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\"\r\n                      }}\r\n                    >\r\n                      <Grid container>\r\n                        <Grid item>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={3}\r\n                          style={{\r\n                            textAlign: \"left\",\r\n                            margin: \"20px 0px 0px 0px\"\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h3\">Weekly Log</Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={8}\r\n                          style={{\r\n                            backgroundColor: \"#fff\",\r\n                            width: \"100%\",\r\n                            margin: \"20px 0\"\r\n                          }}\r\n                        >\r\n                          <form>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <KeyboardDatePicker\r\n                                autoOk\r\n                                required\r\n                                variant=\"inline\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"yyyy/MM/dd\"\r\n                                value={this.state.weeklyLogDate}\r\n                                InputAdornmentProps={{ position: \"start\" }}\r\n                                style={{ margin: \"10px\" }}\r\n                                onChange={this.handleweelyDateChange}\r\n                              />\r\n                            </MuiPickersUtilsProvider>\r\n                            <TextField\r\n                              type=\"text\"\r\n                              id=\"logMsg\"\r\n                              name=\"logMsg\"\r\n                              label=\"Add log remark\"\r\n                              variant=\"outlined\"\r\n                              value={this.state.weeklyLogMsg}\r\n                              style={{ margin: \"10px\" }}\r\n                              onChange={this.weeklyMsgHandler}\r\n                            />\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => this.sendLog(Gid)}\r\n                              style={{\r\n                                margin: \"20px \",\r\n                                marginLeft: \"50px\"\r\n                              }}\r\n                            >\r\n                              Add Log\r\n                            </Button>\r\n                          </form>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ margin: \"20px 0px\" }}>\r\n                          <Card\r\n                            style={{\r\n                              borderRadius: \"0px\",\r\n                              padding: \"10px\",\r\n                              margin: \"2px 0px\"\r\n                            }}\r\n                          >\r\n                            <Grid container>\r\n                              <Grid item xs={12} style={{ textAlign: \"left\" }}>\r\n                                <Typography variant=\"h4\">\r\n                                  <b>Log History:</b>\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Card>\r\n                          {weeklyLog ? (\r\n                            weeklyLog.map(log => {\r\n                              let wid = log._id;\r\n                              return (\r\n                                <Card\r\n                                  key={log._id}\r\n                                  style={{\r\n                                    borderRadius: \"0px\",\r\n                                    padding: \"10px\",\r\n                                    margin: \"2px 0px\"\r\n                                  }}\r\n                                >\r\n                                  <Grid container>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                      <Typography variant=\"h6\">\r\n                                        {log.remark}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                      <Typography variant=\"h6\">\r\n                                        {log.scheduled_date\r\n                                          ? log.scheduled_date.split(\"T\")[0]\r\n                                          : null}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                      <DeleteIcon\r\n                                        className={classes.deleteIconStyle}\r\n                                        onClick={() => this.deleteLog(Gid, wid)}\r\n                                      />\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Card>\r\n                              );\r\n                            })\r\n                          ) : (\r\n                            <Typography variant=\"h6\">No logs Yet</Typography>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Card>\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#d8d8d8\",\r\n                        padding: \"0px 30px\",\r\n                        margin: \"50px auto\"\r\n                      }}\r\n                    >\r\n                      <Grid container className={classes.comment}>\r\n                        <Grid item xs={12} style={{ marginBottom: \"30px\" }}>\r\n                          <Typography\r\n                            variant=\"h2\"\r\n                            style={{ textAlign: \"left\", fontWeight: \"400\" }}\r\n                          >\r\n                            Comments\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comTitle}\r\n                        >\r\n                          <Typography>\r\n                            <b>Add Comments:</b>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6}>\r\n                          <TextField\r\n                            className={classes.comField}\r\n                            variant=\"outlined\"\r\n                            component={\"span\"}\r\n                            multiline\r\n                            inputProps={{ style: { fontSize: 14 } }}\r\n                            rows={3}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            type=\"text\"\r\n                            value={this.state.comment}\r\n                            onChange={this.commentHandler}\r\n                          />\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={12}\r\n                          sm={12}\r\n                          md={3}\r\n                          className={classes.comButton}\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              this.sendComment(Gid);\r\n                            }}\r\n                          >\r\n                            Send Comment\r\n                          </Button>\r\n                          <Snackbar\r\n                            open={this.state.openSuccess}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert\r\n                              onClose={this.handleClose}\r\n                              severity=\"success\"\r\n                            >\r\n                              Successful comment\r\n                            </Alert>\r\n                          </Snackbar>\r\n                          <Snackbar\r\n                            open={this.state.openFailure}\r\n                            autoHideDuration={6000}\r\n                            onClose={this.handleClose}\r\n                          >\r\n                            <Alert onClose={this.handleClose} severity=\"error\">\r\n                              Unsuccessful. Comment cannot be empty\r\n                            </Alert>\r\n                          </Snackbar>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12}>\r\n                          <HodCommentPage Comments={Comments} />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else return null;\r\n            })}\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    } else return <LinearProgress />;\r\n  }\r\n}\r\n\r\nHodPrefPage.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HodPrefPage);\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./Login/background2.jpg\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SERVER_URL from \"./URL\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport qs from \"qs\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = theme => ({\r\n\r\n\tleftpaper: {\r\n\t\tbackgroundImage: `url(${Image})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"transparent\",\r\n\t\tborderRadius: \"6px\",\r\n\t\tfloat: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"#fff\",\r\n\t\tpaddingTop: \"60px\",\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  paddingTop: \"20px\"\r\n\t\t}\r\n\t},\r\n\tform: {\r\n\t    width: \"90%\", \r\n\t    marginTop: theme.spacing(1)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tfontWeight: \"bolder\",\r\n\t\tbackgroundColor: \"#1877f2\",\r\n\t\tmarginBottom: \"25px\"\r\n\t},\r\n\tfields: {\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborderRadius: \"3px\"\r\n\t},\r\n\ttitle: {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tcolor: \"#fff\",\r\n\t\t[theme.breakpoints.down(\"775\")]: {\r\n\t\t  fontSize: \"45px\"\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  fontSize: \"40px\"\r\n\t\t}\r\n\t},\r\n\tavatar: {\r\n\t    margin: theme.spacing(1),\r\n\t    backgroundColor: \"#1877f2\",\r\n\t    height: \"50px\",\r\n\t    width: \"50px\",\r\n\t    marginTop: \"30px\"\r\n  },\r\n\r\n});\r\n\r\nclass forgetPassword extends Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttoken :localStorage.getItem(\"token\"),\r\n\t\t\tmsg : \"\",\r\n\t\t\temail : \"\",\r\n\t\t\tloading : false,\r\n\t\t\topenSuccess:false,\r\n\t\t\topenInfo:false,\r\n\t\t\topenFailure:false\r\n\t\t}\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t}\r\n\thandleChange = name => ({ target: { value } }) => {\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tsubmitForm(e){\r\n\t\te.preventDefault();\r\n\t\tthis.setState({loading:true})\r\n\t\tlet email = this.state.email\r\n\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: SERVER_URL+\"/forgetPassword\",\r\n\t\t\tdata: qs.stringify({email: email}),\r\n\t\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n\t\t\t}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tif(res.data[0]===\"A\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmsg:res.data,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenInfo:true\r\n\t\t\t\t\t})\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmsg:res.data,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenSuccess:true\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmsg:\"there was some problem please refresh the page and try again\",\r\n\t\t\t\t\tloading:false,\r\n\t\t\t\t\topenFailure:true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\r\n\t}\r\n\trender() {\r\n\t\tif(this.state.token != null)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\r\n\t\tif(this.state.loading)\r\n\t\t\treturn <LinearProgress/>\r\n\r\n\t\tconst { classes } = this.props;\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\t\tif(this.state.openSuccess){\r\n\t\t\t\tthis.setState({openSuccess: false});\r\n\t\t\t}\r\n\t\t\telse if(this.state.openInfo){\r\n\t\t\t\tthis.setState({openInfo: false});\r\n\t\t\t}\r\n\t\t\telse if(this.state.openFailure){\r\n\t\t\t\tthis.setState({openFailure: false});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className={classes.leftpaper}>\r\n\t          <Typography variant=\"h2\" className={classes.title}>\r\n\t            <b>Project Management System</b>\r\n\t          </Typography>\r\n\t          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n\t            <CssBaseline />\r\n\t            <Avatar variant=\"circle\" className={classes.avatar}>\r\n\t\t          <PersonIcon fontSize=\"large\" />\r\n\t\t        </Avatar>\r\n\t\t        <Typography component=\"h2\" variant=\"h6\">\r\n\t\t          <b>Forget Password</b>\r\n\t\t        </Typography>\r\n\t            <form className={classes.form} onSubmit={this.submitForm}>\r\n\t              <TextField\r\n\t                type=\"email\"\r\n\t                variant=\"filled\"\r\n\t                margin=\"normal\"\r\n\t                required\r\n\t                fullWidth\r\n\t                id=\"email\"\r\n\t                label=\"email\"\r\n\t                value={this.state.email}\r\n\t                onChange={this.handleChange(\"email\")}\r\n\t                className={classes.fields}\r\n\t                \r\n\t              />\r\n\t              <Button\r\n\t                type=\"submit\"\r\n\t                fullWidth\r\n\t                variant=\"contained\"\r\n\t                color=\"primary\"\r\n\t                className={classes.submit}\r\n\t              >\r\n\t                Reset Password\r\n\t              </Button>\r\n\t              \r\n\t            </form>\r\n\t\t\t\t<Snackbar open={this.state.openSuccess} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\">\r\n\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openInfo} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"info\">\r\n\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\t\t{this.state.msg}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t  \r\n\t          </Container>\r\n\t        </div>\r\n\t      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(forgetPassword);","import React, { Component } from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Image from \"./Login/background2.jpg\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport SERVER_URL from \"./URL\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport axios from \"axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport qs from \"qs\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = theme => ({\r\n\r\n\tleftpaper: {\r\n\t\tbackgroundImage: `url(${Image})`,\r\n\t\tbackgroundSize: \"cover\",\r\n\t\theight: \"100%\"\r\n\t},\r\n\tpaper: {\r\n\t\tbackground: \"transparent\",\r\n\t\tborderRadius: \"6px\",\r\n\t\tfloat: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t\talignItems: \"center\",\r\n\t\tcolor: \"#fff\",\r\n\t\tpaddingTop: \"60px\",\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  paddingTop: \"20px\"\r\n\t\t}\r\n\t},\r\n\tform: {\r\n\t    width: \"90%\", \r\n\t    marginTop: theme.spacing(1)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t\tpadding: \"10px\",\r\n\t\tfontSize: \"18px\",\r\n\t\tfontWeight: \"bolder\",\r\n\t\tbackgroundColor: \"#1877f2\",\r\n\t\tmarginBottom: \"25px\"\r\n\t},\r\n\tfields: {\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\tborderRadius: \"3px\"\r\n\t},\r\n\ttitle: {\r\n\t\tpaddingTop: \"50px\",\r\n\t\tcolor: \"#fff\",\r\n\t\t[theme.breakpoints.down(\"775\")]: {\r\n\t\t  fontSize: \"45px\"\r\n\t\t},\r\n\t\t[theme.breakpoints.down(\"575\")]: {\r\n\t\t  fontSize: \"40px\"\r\n\t\t}\r\n\t},\r\n\tavatar: {\r\n\t    margin: theme.spacing(1),\r\n\t    backgroundColor: \"#1877f2\",\r\n\t    height: \"50px\",\r\n\t    width: \"50px\",\r\n\t    marginTop: \"30px\"\r\n  },\r\n\r\n});\r\n\r\nclass resetPassword extends Component { \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\ttoken :localStorage.getItem(\"token\"),\r\n\t\t\tmsg : \"\",\r\n\t\t\tnewPassword : \"\",\r\n\t\t\tconfirmPassword:\"\",\r\n\t\t\tloading : false,\r\n\t\t\topenSuccees:false,\r\n\t\t\topenFailure:false,\r\n\t\t\topenInfo:false,\r\n\t\t\tdone:false\r\n\t\t}\r\n\t\tthis.submitForm = this.submitForm.bind(this);\r\n\t}\r\n\thandleChange = name => ({ target: { value } }) => {\r\n\t\tthis.setState({ [name]: value });\r\n\t};\r\n\tsubmitForm(e){\r\n\t\te.preventDefault();\r\n\t\tif(this.state.newPassword !== this.state.confirmPassword){\r\n\t\t  this.setState({msg : \"Two fields Doesn't match\"}) ;\r\n\t\t}else if(this.state.newPassword.length < 8){\r\n\t\t  this.setState({msg : \"Please Enter a Password with length greater than 8\"});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState({loading:true})\r\n\t\t\taxios({\r\n\t\t\tmethod: \"post\",\r\n\t\t\turl: SERVER_URL+\"/resetPassword/\"+this.props.match.params.id,\r\n\t\t\tdata: qs.stringify({\r\n\t\t\t\tnewPassword:this.state.newPassword\r\n\t\t\t}),\r\n\t\t\theaders: {\r\n\t\t\t\"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n\t\t\t}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tif(res.data === \"yes\")\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenSuccees:true\r\n\t\t\t\t\t})\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\topenInfo:true\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch((err)=>{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading:false,\r\n\t\t\t\t\topenFailure:true\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.state.token != null)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\t\tif(this.state.loading)\r\n\t\t\treturn <LinearProgress/>\r\n\t\tif (this.state.done)\r\n\t\t\treturn <Redirect to=\"/\" exact />;\r\n\t\tconst { classes } = this.props\r\n\t\tconst handleClose = (event, reason) => {\r\n\t\tif(this.state.openSuccees)\r\n\t\t\tthis.setState({openSuccees: false,done:true});\r\n\t\telse if(this.state.openFailure)\r\n\t\t\tthis.setState({openFailure : false});\r\n\t\telse if(this.state.openInfo)\r\n\t\t\tthis.setState({openInfo : false});\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<div className={classes.leftpaper}>\r\n\t          <Typography variant=\"h2\" className={classes.title}>\r\n\t            <b>Project Management System</b>\r\n\t          </Typography>\r\n\t          <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n\t            <CssBaseline />\r\n\t            <Avatar variant=\"circle\" className={classes.avatar}>\r\n\t\t          <PersonIcon fontSize=\"large\" />\r\n\t\t        </Avatar>\r\n\t\t        <Typography component=\"h2\" variant=\"h6\">\r\n\t\t          <b>Reset Password</b>\r\n\t\t        </Typography>\r\n\t            <form className={classes.form} onSubmit={this.submitForm}>\r\n\t              <TextField\r\n                  variant=\"filled\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"New Password\"\r\n                  className={classes.fields}\r\n                  value={this.state.newPassword}\r\n                  onChange={this.handleChange(\"newPassword\")}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"filled\"\r\n                  type=\"password\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Confirm Password\"\r\n                  className={classes.fields}\r\n                  value={this.state.confirmPassword}\r\n                  onChange={this.handleChange(\"confirmPassword\")}\r\n                />\r\n\t              <Typography variant=\"subtitle2\" color=\"info\">\r\n\t                  {this.state.msg}\r\n\t              </Typography>\r\n\t              <Button\r\n\t                type=\"submit\"\r\n\t                fullWidth\r\n\t                variant=\"contained\"\r\n\t                color=\"primary\"\r\n\t                className={classes.submit}\r\n\t              >\r\n\t                Reset Password\r\n\t              </Button>\r\n\t             \r\n\t            </form>\r\n\t\t\t\t<Snackbar open={this.state.openSuccees} onClose={handleClose} autoHideDuration={3000}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"success\" >\r\n\t\t\t\t\tYour Password was changed successfully You will now be redirected to login page \r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openInfo} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tThis Link has expired please reapply for reset password\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>\r\n\t\t\t\t<Snackbar open={this.state.openFailure} onClose={handleClose}>\r\n\t\t\t\t\t<Alert onClose={handleClose} severity=\"error\">\r\n\t\t\t\t\tThere was some problem while changing your password please refresh the page and try again\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Snackbar>  \r\n\t          </Container>\r\n\t        </div>\r\n\t      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default withStyles(useStyles)(resetPassword);","import React from 'react'\r\nimport HodSideMenu from './HodSideMenu'\r\nimport axios from \"axios\";\r\nimport SERVER_URL from \"../../Pages/URL\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LinearProgress, makeStyles } from \"@material-ui/core\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Button,CircularProgress,Grid} from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"../ToUpper\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// function Alert(props) {\r\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// }\r\n\r\nlet Ad=null;\r\nlet groupData=null\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    \r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    fontWeight: \"600\",\r\n    flexBasis: \"33.33%\",\r\n    flexShrink: 0\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  accor: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  },\r\n  accordet: {\r\n    width: \"100%\",\r\n    margin: \"auto\"\r\n  }\r\n  }));\r\n\r\nconst HodgroupsPage = (props) => {\r\n\r\n  const [user,setUser] = React.useState(\"\")\r\n  const [groupDetails,setGroupDetails] = React.useState(null)\r\n  const [loading,setLoading] = React.useState(false)\r\n  const [filled,setFilled] = React.useState(false)\r\n  const histor = useHistory();\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [reqSent,setReqSent] = React.useState(false);\r\n  \r\n  function getStat(){\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/user\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        setUser(res.data);\r\n      })\r\n\r\n      .catch(err => {\r\n        setUser(\"No User\");\r\n        localStorage.removeItem(\"token\");\r\n      });\r\n  };\r\n\r\n  \r\n  function checkData() {\r\n    setReqSent(true);\r\n    setLoading(true);\r\n    axios({\r\n      method: \"get\",\r\n      url: SERVER_URL + \"/guideGroup\",\r\n      withCredentials: true,\r\n      headers : {\r\n        Authorization : 'Bearer '+ localStorage.getItem(\"access_token\") \r\n      }\r\n    })\r\n      .then(res => {\r\n        setReqSent(false);\r\n        Ad = res.data.length;\r\n        groupData=res.data\r\n        setGroupDetails(res.data);\r\n        setFilled(true)\r\n        setLoading(false);\r\n      })\r\n      .catch(function (err) {\r\n        setReqSent(false);\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const handleChange = panel => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // function handleChildClick(e){\r\n  //   e.stopPropagation();\r\n  //   console.log('handleChildClick');\r\n  // }\r\n    if (groupDetails === null && reqSent === false){\r\n      checkData();\r\n    } \r\n    if (user === \"\") {\r\n      getStat();\r\n      return <LinearProgress />;\r\n    } else if (user.type === \"hod\") {\r\n      if(loading){\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    if(filled)\r\n    {\r\n        if(groupData.length!==0){\r\n            return(\r\n                <React.Fragment >\r\n                    <HodSideMenu style={{marginBottom:\"10px\"}}/>\r\n                    <Typography style={{margin:\"20px\"}} variant = \"h3\">\r\n                      Assigned Groups\r\n                    </Typography>\r\n                    {groupData.map(Group => {\r\n                        const routeChange = () => {\r\n                            histor.push({\r\n                            pathname: `/hod/groups/prefs/${id}`,\r\n                            });\r\n                        };\r\n                        let DueDate = Group.dueDate.split(\"T\")[0];\r\n                        let members = Group.members;\r\n                        let Gname = Group.name;\r\n                        let id = Group.id;\r\n                        let pref1 = [];\r\n                        let AppliedOn = null;\r\n    \r\n                        if (Group.proposals.length !== 0) {\r\n                            pref1 = Group.proposals[0];\r\n                            // pref2 = Group.proposals[1];\r\n                            // pref3 = Group.proposals[2];\r\n    \r\n                            AppliedOn = pref1.applied.split(\"T\")[0];\r\n                            //console.log(AppliedOn, DueDate);\r\n                        }\r\n                        // if (Group.guide.name===userInfo.name) {\r\n                            return (\r\n                            <Accordion\r\n                                style={{\r\n                                    width: \"90%\",\r\n                                    margin: \"auto\",\r\n                                    textAlign: \"left\",\r\n                                    marginTop: \"2px\",\r\n                                    boxShadow:\r\n                                    \"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\"\r\n                                }}\r\n                                expanded={expanded === Gname}\r\n                                onChange={handleChange(Gname)}\r\n                                className={classes.accor}\r\n                                key={Group.name}\r\n                            >\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1bh-content\"\r\n                                id=\"panel1bh-header\"\r\n                                >\r\n                                <Typography className={classes.heading}>\r\n                                    {toFirstCharUppercase(Group.name)}\r\n                                </Typography>\r\n                                {members.map(member => {\r\n                                    return (\r\n                                    <Typography\r\n                                        key={member.name}\r\n                                        className={classes.secondaryHeading}\r\n                                    >\r\n                                        {member.name}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                    );\r\n                                })}\r\n                                </AccordionSummary>\r\n                                <AccordionDetails className={classes.accordet}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Name\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.name}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={5}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Email\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.email}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3}>\r\n                                    <Grid container>\r\n                                        <Grid item xs={12}>\r\n                                        <Typography style={{ fontWeight: \"600\" }}>\r\n                                            Roll no\r\n                                        </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                        {members.map(member => {\r\n                                            return <Typography key={member.email}>{member.rollno}</Typography>;\r\n                                        })}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                    {DueDate >= AppliedOn ? (\r\n                                        <Typography style={{ color: \"green\" }} variant=\"h5\">\r\n                                        Proposals Submitted On Time\r\n                                        </Typography>\r\n                                    ) : (\r\n                                        <Typography style={{ color: \"red\" }} variant=\"h5\">\r\n                                        Proposals Submitted LATE\r\n                                        </Typography>\r\n                                    )}\r\n                                    </Grid>\r\n                                    <Grid item container xs={12}>\r\n                                    {Group.proposals.length === 3 ? (\r\n                                        <React.Fragment>\r\n                                            <Grid item xs={3}>\r\n                                                <Button\r\n                                                onClick={routeChange}\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                >\r\n                                                More Details\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </React.Fragment>\r\n                                    ) : (\r\n                                        <Button disabled variant=\"outlined\" color=\"secondary\">\r\n                                            <Typography>Preferences not filled</Typography>\r\n                                        </Button>\r\n                                    )}\r\n                                    </Grid>\r\n                                </Grid>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                            );\r\n                        // }\r\n                        // return null;\r\n                        })}\r\n                </React.Fragment>\r\n            )\r\n        }else{\r\n            return(\r\n                <React.Fragment>\r\n                  <HodSideMenu />\r\n                  <Typography>\r\n                    No group has been assigned to you yet.\r\n                  </Typography>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n    else{\r\n        return(\r\n            <CircularProgress />\r\n        )\r\n    }\r\n    } else {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n      }\r\n\r\n\r\nexport default HodgroupsPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Admin from \"./Pages/Admin\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport Logout from \"./Pages/Logout\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Student from \"./Pages/Student\";\r\nimport Yami from \"./Pages/Yami\";\r\nimport Faculty from \"./Pages/Faculty\";\r\nimport ChangePassword from \"./components/ChangePassword/ChangePassword\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport PrefPage from \"./Pages/PrefPage\";\r\nimport Hod from \"./Pages/Hod\";\r\nimport HodPrefPage from \"./components/Hod-component/HodPrefPage\";\r\nimport AdminGroupsPage from \"./components/Admin-component/AdminGroupsPage\";\r\nimport AdminGuidePage from \"./components/Admin-component/AdminGuidePage\";\r\nimport AdminArchives from \"./components/Admin-component/AdminArchives\"\r\nimport Guide from \"./Pages/Guide\"\r\nimport GuidePrefPage from \"./components/Guide Component/GuidePrefPage\";\r\nimport forgetPassword from \"./Pages/forgetPassword\";\r\nimport resetPassword from \"./Pages/resetPassword\";\r\nimport HodGroupsPage from \"./components/Hod-component/HodGroupsPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/admin\" exact component={Admin} />\r\n        <Route path=\"/hod\" exact component={Hod} />\r\n        <Route path=\"/logout\" exact component={Logout} />\r\n        <Route path=\"/faculty\" exact component={Faculty} />\r\n        <Route path=\"/student\" exact component={Student} />\r\n        <Route path=\"/yami\" exact component={Yami} />\r\n        <Route path=\"/guide\" exact component={Guide}/>\r\n        <Route path=\"/cp@2707user\" exact component={ChangePassword} />\r\n        <Route path=\"/admin/prefs/:id\" exact component={PrefPage} />\r\n        <Route path=\"/hod/prefs/:id\" exact component={HodPrefPage} />\r\n        <Route path=\"/guide/prefs/:id\" exact component={GuidePrefPage} />\r\n        <Route path=\"/admin/groups\" exact component={AdminGroupsPage}/>\r\n        <Route path=\"/admin/guides\" exact component={AdminGuidePage}/>\r\n        <Route path=\"/admin/archives\" exact component={AdminArchives}/>\r\n        <Route path=\"/forgetPassword\" exact component={forgetPassword}/>\r\n        <Route path=\"/resetPassword/:id\" exact component={resetPassword}/>\r\n        <Route path=\"/hod/groups\" exact component={HodGroupsPage} />\r\n        <Route path=\"/hod/groups/prefs/:id\" exact component={GuidePrefPage} />\r\n        <Route path=\"*\" component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.register();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/background2.43a914dc.jpg\";"],"sourceRoot":""}